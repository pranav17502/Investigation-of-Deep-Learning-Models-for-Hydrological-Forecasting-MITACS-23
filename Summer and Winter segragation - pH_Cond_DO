{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Rwnp6Een-gotPrZHYWWyCUQp8mYSkK5_","timestamp":1688064785946}],"toc_visible":true,"authorship_tag":"ABX9TyOxFKe8Evh9GAIfhUIQhPB6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"_wmi3Ixa1heO","executionInfo":{"status":"ok","timestamp":1688064920208,"user_tz":240,"elapsed":1550,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["river_flow = pd.read_csv(\"pH_noNA.csv\")\n","river_flow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"HVkBwohY1x3A","executionInfo":{"status":"ok","timestamp":1688064921200,"user_tz":240,"elapsed":208,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"ba6bc74c-8f37-4048-a996-75b645bd6286"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Timestamp  Below Shand     Blair     Brant  Bridgeport  \\\n","0      2018-01-01 00:00:00        7.960  8.225000  7.850000    8.370833   \n","1      2018-01-01 01:00:00        7.960  8.175000  7.850000    8.369167   \n","2      2018-01-01 02:00:00        7.960  8.135000  7.845833    8.360000   \n","3      2018-01-01 03:00:00        7.955  8.105000  7.835833    8.360000   \n","4      2018-01-01 04:00:00        7.950  8.080000  7.820000    8.367500   \n","...                    ...          ...       ...       ...         ...   \n","43844  2023-01-01 19:00:00        8.315  7.730000  8.106250    7.566667   \n","43845  2023-01-01 20:00:00        8.315  7.739167  8.106250    7.560833   \n","43846  2023-01-01 21:00:00        8.315  7.742500  8.106250    7.564167   \n","43847  2023-01-01 22:00:00        8.315  7.750000  8.106250    7.577500   \n","43848  2023-01-01 23:00:00        8.315  7.759167  8.106250    7.580000   \n","\n","       Glen Morris  Breslau Victoria    Road32      York    Hanlon  \n","0         7.960864          7.826426  8.040000  6.890001  7.867140  \n","1         7.905989          7.826490  8.044167  6.885834  7.856996  \n","2         7.856115          7.826554  8.050000  6.880001  7.851851  \n","3         7.811241          7.826618  8.042500  6.876668  7.846707  \n","4         7.776367          7.826682  8.031667  6.885834  7.836563  \n","...            ...               ...       ...       ...       ...  \n","43844     7.887500          8.047500  8.102500  7.910001  7.886667  \n","43845     7.894167          8.047500  8.117500  7.910001  7.890000  \n","43846     7.900000          8.047500  8.120000  7.910001  7.890000  \n","43847     7.900000          8.047500  8.117500  7.910001  7.880833  \n","43848     7.899167          8.047500  8.104166  7.910001  7.880000  \n","\n","[43849 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-02e05eaa-2b15-4911-a346-497aa39fff89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01 00:00:00</td>\n","      <td>7.960</td>\n","      <td>8.225000</td>\n","      <td>7.850000</td>\n","      <td>8.370833</td>\n","      <td>7.960864</td>\n","      <td>7.826426</td>\n","      <td>8.040000</td>\n","      <td>6.890001</td>\n","      <td>7.867140</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-01 01:00:00</td>\n","      <td>7.960</td>\n","      <td>8.175000</td>\n","      <td>7.850000</td>\n","      <td>8.369167</td>\n","      <td>7.905989</td>\n","      <td>7.826490</td>\n","      <td>8.044167</td>\n","      <td>6.885834</td>\n","      <td>7.856996</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-01 02:00:00</td>\n","      <td>7.960</td>\n","      <td>8.135000</td>\n","      <td>7.845833</td>\n","      <td>8.360000</td>\n","      <td>7.856115</td>\n","      <td>7.826554</td>\n","      <td>8.050000</td>\n","      <td>6.880001</td>\n","      <td>7.851851</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-01 03:00:00</td>\n","      <td>7.955</td>\n","      <td>8.105000</td>\n","      <td>7.835833</td>\n","      <td>8.360000</td>\n","      <td>7.811241</td>\n","      <td>7.826618</td>\n","      <td>8.042500</td>\n","      <td>6.876668</td>\n","      <td>7.846707</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-01 04:00:00</td>\n","      <td>7.950</td>\n","      <td>8.080000</td>\n","      <td>7.820000</td>\n","      <td>8.367500</td>\n","      <td>7.776367</td>\n","      <td>7.826682</td>\n","      <td>8.031667</td>\n","      <td>6.885834</td>\n","      <td>7.836563</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>43844</th>\n","      <td>2023-01-01 19:00:00</td>\n","      <td>8.315</td>\n","      <td>7.730000</td>\n","      <td>8.106250</td>\n","      <td>7.566667</td>\n","      <td>7.887500</td>\n","      <td>8.047500</td>\n","      <td>8.102500</td>\n","      <td>7.910001</td>\n","      <td>7.886667</td>\n","    </tr>\n","    <tr>\n","      <th>43845</th>\n","      <td>2023-01-01 20:00:00</td>\n","      <td>8.315</td>\n","      <td>7.739167</td>\n","      <td>8.106250</td>\n","      <td>7.560833</td>\n","      <td>7.894167</td>\n","      <td>8.047500</td>\n","      <td>8.117500</td>\n","      <td>7.910001</td>\n","      <td>7.890000</td>\n","    </tr>\n","    <tr>\n","      <th>43846</th>\n","      <td>2023-01-01 21:00:00</td>\n","      <td>8.315</td>\n","      <td>7.742500</td>\n","      <td>8.106250</td>\n","      <td>7.564167</td>\n","      <td>7.900000</td>\n","      <td>8.047500</td>\n","      <td>8.120000</td>\n","      <td>7.910001</td>\n","      <td>7.890000</td>\n","    </tr>\n","    <tr>\n","      <th>43847</th>\n","      <td>2023-01-01 22:00:00</td>\n","      <td>8.315</td>\n","      <td>7.750000</td>\n","      <td>8.106250</td>\n","      <td>7.577500</td>\n","      <td>7.900000</td>\n","      <td>8.047500</td>\n","      <td>8.117500</td>\n","      <td>7.910001</td>\n","      <td>7.880833</td>\n","    </tr>\n","    <tr>\n","      <th>43848</th>\n","      <td>2023-01-01 23:00:00</td>\n","      <td>8.315</td>\n","      <td>7.759167</td>\n","      <td>8.106250</td>\n","      <td>7.580000</td>\n","      <td>7.899167</td>\n","      <td>8.047500</td>\n","      <td>8.104166</td>\n","      <td>7.910001</td>\n","      <td>7.880000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43849 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02e05eaa-2b15-4911-a346-497aa39fff89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-02e05eaa-2b15-4911-a346-497aa39fff89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-02e05eaa-2b15-4911-a346-497aa39fff89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["river_flow.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ib10ZLew26Rb","executionInfo":{"status":"ok","timestamp":1688064922745,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"0ac846b4-6fa8-48e2-dec8-c66607379fe2"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Timestamp', 'Below Shand', 'Blair', 'Brant', 'Bridgeport',\n","       'Glen Morris', 'Breslau Victoria', 'Road32', 'York', 'Hanlon'],\n","      dtype='object')"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["river_flow.set_index(\"Timestamp\", inplace= True)\n","river_flow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"JQXF0a7-2s0a","executionInfo":{"status":"ok","timestamp":1688064926217,"user_tz":240,"elapsed":202,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"801d78a2-0df9-4242-d75e-92ce0275f550"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2018-01-01 00:00:00        7.960  8.225000  7.850000    8.370833     7.960864   \n","2018-01-01 01:00:00        7.960  8.175000  7.850000    8.369167     7.905989   \n","2018-01-01 02:00:00        7.960  8.135000  7.845833    8.360000     7.856115   \n","2018-01-01 03:00:00        7.955  8.105000  7.835833    8.360000     7.811241   \n","2018-01-01 04:00:00        7.950  8.080000  7.820000    8.367500     7.776367   \n","...                          ...       ...       ...         ...          ...   \n","2023-01-01 19:00:00        8.315  7.730000  8.106250    7.566667     7.887500   \n","2023-01-01 20:00:00        8.315  7.739167  8.106250    7.560833     7.894167   \n","2023-01-01 21:00:00        8.315  7.742500  8.106250    7.564167     7.900000   \n","2023-01-01 22:00:00        8.315  7.750000  8.106250    7.577500     7.900000   \n","2023-01-01 23:00:00        8.315  7.759167  8.106250    7.580000     7.899167   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2018-01-01 00:00:00          7.826426  8.040000  6.890001  7.867140  \n","2018-01-01 01:00:00          7.826490  8.044167  6.885834  7.856996  \n","2018-01-01 02:00:00          7.826554  8.050000  6.880001  7.851851  \n","2018-01-01 03:00:00          7.826618  8.042500  6.876668  7.846707  \n","2018-01-01 04:00:00          7.826682  8.031667  6.885834  7.836563  \n","...                               ...       ...       ...       ...  \n","2023-01-01 19:00:00          8.047500  8.102500  7.910001  7.886667  \n","2023-01-01 20:00:00          8.047500  8.117500  7.910001  7.890000  \n","2023-01-01 21:00:00          8.047500  8.120000  7.910001  7.890000  \n","2023-01-01 22:00:00          8.047500  8.117500  7.910001  7.880833  \n","2023-01-01 23:00:00          8.047500  8.104166  7.910001  7.880000  \n","\n","[43849 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-b430da3f-dce9-4351-81aa-40ccfca42ac5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01 00:00:00</th>\n","      <td>7.960</td>\n","      <td>8.225000</td>\n","      <td>7.850000</td>\n","      <td>8.370833</td>\n","      <td>7.960864</td>\n","      <td>7.826426</td>\n","      <td>8.040000</td>\n","      <td>6.890001</td>\n","      <td>7.867140</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 01:00:00</th>\n","      <td>7.960</td>\n","      <td>8.175000</td>\n","      <td>7.850000</td>\n","      <td>8.369167</td>\n","      <td>7.905989</td>\n","      <td>7.826490</td>\n","      <td>8.044167</td>\n","      <td>6.885834</td>\n","      <td>7.856996</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 02:00:00</th>\n","      <td>7.960</td>\n","      <td>8.135000</td>\n","      <td>7.845833</td>\n","      <td>8.360000</td>\n","      <td>7.856115</td>\n","      <td>7.826554</td>\n","      <td>8.050000</td>\n","      <td>6.880001</td>\n","      <td>7.851851</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 03:00:00</th>\n","      <td>7.955</td>\n","      <td>8.105000</td>\n","      <td>7.835833</td>\n","      <td>8.360000</td>\n","      <td>7.811241</td>\n","      <td>7.826618</td>\n","      <td>8.042500</td>\n","      <td>6.876668</td>\n","      <td>7.846707</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 04:00:00</th>\n","      <td>7.950</td>\n","      <td>8.080000</td>\n","      <td>7.820000</td>\n","      <td>8.367500</td>\n","      <td>7.776367</td>\n","      <td>7.826682</td>\n","      <td>8.031667</td>\n","      <td>6.885834</td>\n","      <td>7.836563</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 19:00:00</th>\n","      <td>8.315</td>\n","      <td>7.730000</td>\n","      <td>8.106250</td>\n","      <td>7.566667</td>\n","      <td>7.887500</td>\n","      <td>8.047500</td>\n","      <td>8.102500</td>\n","      <td>7.910001</td>\n","      <td>7.886667</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 20:00:00</th>\n","      <td>8.315</td>\n","      <td>7.739167</td>\n","      <td>8.106250</td>\n","      <td>7.560833</td>\n","      <td>7.894167</td>\n","      <td>8.047500</td>\n","      <td>8.117500</td>\n","      <td>7.910001</td>\n","      <td>7.890000</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 21:00:00</th>\n","      <td>8.315</td>\n","      <td>7.742500</td>\n","      <td>8.106250</td>\n","      <td>7.564167</td>\n","      <td>7.900000</td>\n","      <td>8.047500</td>\n","      <td>8.120000</td>\n","      <td>7.910001</td>\n","      <td>7.890000</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 22:00:00</th>\n","      <td>8.315</td>\n","      <td>7.750000</td>\n","      <td>8.106250</td>\n","      <td>7.577500</td>\n","      <td>7.900000</td>\n","      <td>8.047500</td>\n","      <td>8.117500</td>\n","      <td>7.910001</td>\n","      <td>7.880833</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 23:00:00</th>\n","      <td>8.315</td>\n","      <td>7.759167</td>\n","      <td>8.106250</td>\n","      <td>7.580000</td>\n","      <td>7.899167</td>\n","      <td>8.047500</td>\n","      <td>8.104166</td>\n","      <td>7.910001</td>\n","      <td>7.880000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43849 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b430da3f-dce9-4351-81aa-40ccfca42ac5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b430da3f-dce9-4351-81aa-40ccfca42ac5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b430da3f-dce9-4351-81aa-40ccfca42ac5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["# **Summer Files pH**"],"metadata":{"id":"JE3LFCcs0_pK"}},{"cell_type":"code","source":["river_flow_2018_summer = river_flow[(river_flow.index >= '2018-04-15 00:00:00') & (river_flow.index < '2018-10-01 00:00:00')]\n","river_flow_2018_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"qWV-0MFuxGEA","executionInfo":{"status":"ok","timestamp":1688064934247,"user_tz":240,"elapsed":280,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"c9d87699-ac76-408f-b04c-2d90f48c5bfc"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2018-04-15 00:00:00     8.258532  7.865000  8.147500    8.560000     8.019149   \n","2018-04-15 01:00:00     8.260471  7.870000  8.139167    8.557500     7.984239   \n","2018-04-15 02:00:00     8.262410  7.875000  8.123333    8.550000     7.964328   \n","2018-04-15 03:00:00     8.264349  7.885000  8.105833    8.545833     7.959418   \n","2018-04-15 04:00:00     8.266288  7.885000  8.094167    8.540000     7.944507   \n","...                          ...       ...       ...         ...          ...   \n","2018-09-30 19:00:00     7.850000  8.186667  7.961667    8.099166     8.370000   \n","2018-09-30 20:00:00     7.830000  8.201667  8.020833    8.138332     8.400000   \n","2018-09-30 21:00:00     7.820000  8.197500  8.044167    8.159999     8.410000   \n","2018-09-30 22:00:00     7.810000  8.130000  8.049167    8.146666     8.380000   \n","2018-09-30 23:00:00     7.790000  8.051667  8.035000    8.129999     8.320000   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2018-04-15 00:00:00          8.100833  8.050000  8.047500  7.720724  \n","2018-04-15 01:00:00          8.090833  8.050000  8.041667  7.725125  \n","2018-04-15 02:00:00          8.088333  8.050000  8.038333  7.724526  \n","2018-04-15 03:00:00          8.080833  8.050000  8.036667  7.723926  \n","2018-04-15 04:00:00          8.079167  8.050000  8.034167  7.723327  \n","...                               ...       ...       ...       ...  \n","2018-09-30 19:00:00          7.677500  8.120833  8.201667  7.997429  \n","2018-09-30 20:00:00          7.685000  8.150000  8.256667  7.997765  \n","2018-09-30 21:00:00          7.694167  8.142500  8.280000  7.998102  \n","2018-09-30 22:00:00          7.700833  8.140000  8.275834  7.998439  \n","2018-09-30 23:00:00          7.703333  8.131667  8.258334  7.998776  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-da52e80e-11d5-418d-98cf-996a4409d7f0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-04-15 00:00:00</th>\n","      <td>8.258532</td>\n","      <td>7.865000</td>\n","      <td>8.147500</td>\n","      <td>8.560000</td>\n","      <td>8.019149</td>\n","      <td>8.100833</td>\n","      <td>8.050000</td>\n","      <td>8.047500</td>\n","      <td>7.720724</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 01:00:00</th>\n","      <td>8.260471</td>\n","      <td>7.870000</td>\n","      <td>8.139167</td>\n","      <td>8.557500</td>\n","      <td>7.984239</td>\n","      <td>8.090833</td>\n","      <td>8.050000</td>\n","      <td>8.041667</td>\n","      <td>7.725125</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 02:00:00</th>\n","      <td>8.262410</td>\n","      <td>7.875000</td>\n","      <td>8.123333</td>\n","      <td>8.550000</td>\n","      <td>7.964328</td>\n","      <td>8.088333</td>\n","      <td>8.050000</td>\n","      <td>8.038333</td>\n","      <td>7.724526</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 03:00:00</th>\n","      <td>8.264349</td>\n","      <td>7.885000</td>\n","      <td>8.105833</td>\n","      <td>8.545833</td>\n","      <td>7.959418</td>\n","      <td>8.080833</td>\n","      <td>8.050000</td>\n","      <td>8.036667</td>\n","      <td>7.723926</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 04:00:00</th>\n","      <td>8.266288</td>\n","      <td>7.885000</td>\n","      <td>8.094167</td>\n","      <td>8.540000</td>\n","      <td>7.944507</td>\n","      <td>8.079167</td>\n","      <td>8.050000</td>\n","      <td>8.034167</td>\n","      <td>7.723327</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 19:00:00</th>\n","      <td>7.850000</td>\n","      <td>8.186667</td>\n","      <td>7.961667</td>\n","      <td>8.099166</td>\n","      <td>8.370000</td>\n","      <td>7.677500</td>\n","      <td>8.120833</td>\n","      <td>8.201667</td>\n","      <td>7.997429</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 20:00:00</th>\n","      <td>7.830000</td>\n","      <td>8.201667</td>\n","      <td>8.020833</td>\n","      <td>8.138332</td>\n","      <td>8.400000</td>\n","      <td>7.685000</td>\n","      <td>8.150000</td>\n","      <td>8.256667</td>\n","      <td>7.997765</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 21:00:00</th>\n","      <td>7.820000</td>\n","      <td>8.197500</td>\n","      <td>8.044167</td>\n","      <td>8.159999</td>\n","      <td>8.410000</td>\n","      <td>7.694167</td>\n","      <td>8.142500</td>\n","      <td>8.280000</td>\n","      <td>7.998102</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 22:00:00</th>\n","      <td>7.810000</td>\n","      <td>8.130000</td>\n","      <td>8.049167</td>\n","      <td>8.146666</td>\n","      <td>8.380000</td>\n","      <td>7.700833</td>\n","      <td>8.140000</td>\n","      <td>8.275834</td>\n","      <td>7.998439</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 23:00:00</th>\n","      <td>7.790000</td>\n","      <td>8.051667</td>\n","      <td>8.035000</td>\n","      <td>8.129999</td>\n","      <td>8.320000</td>\n","      <td>7.703333</td>\n","      <td>8.131667</td>\n","      <td>8.258334</td>\n","      <td>7.998776</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da52e80e-11d5-418d-98cf-996a4409d7f0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da52e80e-11d5-418d-98cf-996a4409d7f0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da52e80e-11d5-418d-98cf-996a4409d7f0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["river_flow_2019_summer = river_flow[(river_flow.index >= '2019-04-15 00:00:00') & (river_flow.index < '2019-10-01 00:00:00')]\n","river_flow_2019_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"ySHrWpWHyGA7","executionInfo":{"status":"ok","timestamp":1688064937403,"user_tz":240,"elapsed":189,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"6b2d4988-3c7a-4b27-c8c4-0e5b6e39aa34"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2019-04-15 00:00:00     8.064582  7.958333  8.140000    7.890000     8.194166   \n","2019-04-15 01:00:00     8.064608  7.942500  8.132500    7.890000     8.167500   \n","2019-04-15 02:00:00     8.064634  7.928333  8.125833    7.890000     8.145833   \n","2019-04-15 03:00:00     8.064660  7.920000  8.111667    7.885833     8.130000   \n","2019-04-15 04:00:00     8.064686  7.915833  8.095833    7.875833     8.114166   \n","...                          ...       ...       ...         ...          ...   \n","2019-09-30 19:00:00     8.453775  8.480000  8.550000    8.837500     8.827500   \n","2019-09-30 20:00:00     8.454371  8.508333  8.585000    8.877500     8.845833   \n","2019-09-30 21:00:00     8.454967  8.525833  8.590000    8.899167     8.832500   \n","2019-09-30 22:00:00     8.455563  8.527500  8.570000    8.895833     8.789167   \n","2019-09-30 23:00:00     8.456159  8.505000  8.525833    8.868333     8.701667   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2019-04-15 00:00:00          8.270834  8.170000  8.320833  8.208333  \n","2019-04-15 01:00:00          8.274168  8.142500  8.334167  8.188333  \n","2019-04-15 02:00:00          8.270001  8.112500  8.325833  8.174166  \n","2019-04-15 03:00:00          8.260001  8.082500  8.316667  8.165833  \n","2019-04-15 04:00:00          8.245834  8.055833  8.336667  8.148333  \n","...                               ...       ...       ...       ...  \n","2019-09-30 19:00:00          9.044167  8.356666  8.510000  8.471667  \n","2019-09-30 20:00:00          9.084167  8.390000  8.567500  8.523333  \n","2019-09-30 21:00:00          9.080000  8.405000  8.603333  8.554167  \n","2019-09-30 22:00:00          9.043333  8.395000  8.605000  8.548333  \n","2019-09-30 23:00:00          8.964167  8.360833  8.575000  8.542500  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f2d11798-49e5-4581-9009-27ce30a661f0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-04-15 00:00:00</th>\n","      <td>8.064582</td>\n","      <td>7.958333</td>\n","      <td>8.140000</td>\n","      <td>7.890000</td>\n","      <td>8.194166</td>\n","      <td>8.270834</td>\n","      <td>8.170000</td>\n","      <td>8.320833</td>\n","      <td>8.208333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 01:00:00</th>\n","      <td>8.064608</td>\n","      <td>7.942500</td>\n","      <td>8.132500</td>\n","      <td>7.890000</td>\n","      <td>8.167500</td>\n","      <td>8.274168</td>\n","      <td>8.142500</td>\n","      <td>8.334167</td>\n","      <td>8.188333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 02:00:00</th>\n","      <td>8.064634</td>\n","      <td>7.928333</td>\n","      <td>8.125833</td>\n","      <td>7.890000</td>\n","      <td>8.145833</td>\n","      <td>8.270001</td>\n","      <td>8.112500</td>\n","      <td>8.325833</td>\n","      <td>8.174166</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 03:00:00</th>\n","      <td>8.064660</td>\n","      <td>7.920000</td>\n","      <td>8.111667</td>\n","      <td>7.885833</td>\n","      <td>8.130000</td>\n","      <td>8.260001</td>\n","      <td>8.082500</td>\n","      <td>8.316667</td>\n","      <td>8.165833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 04:00:00</th>\n","      <td>8.064686</td>\n","      <td>7.915833</td>\n","      <td>8.095833</td>\n","      <td>7.875833</td>\n","      <td>8.114166</td>\n","      <td>8.245834</td>\n","      <td>8.055833</td>\n","      <td>8.336667</td>\n","      <td>8.148333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 19:00:00</th>\n","      <td>8.453775</td>\n","      <td>8.480000</td>\n","      <td>8.550000</td>\n","      <td>8.837500</td>\n","      <td>8.827500</td>\n","      <td>9.044167</td>\n","      <td>8.356666</td>\n","      <td>8.510000</td>\n","      <td>8.471667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 20:00:00</th>\n","      <td>8.454371</td>\n","      <td>8.508333</td>\n","      <td>8.585000</td>\n","      <td>8.877500</td>\n","      <td>8.845833</td>\n","      <td>9.084167</td>\n","      <td>8.390000</td>\n","      <td>8.567500</td>\n","      <td>8.523333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 21:00:00</th>\n","      <td>8.454967</td>\n","      <td>8.525833</td>\n","      <td>8.590000</td>\n","      <td>8.899167</td>\n","      <td>8.832500</td>\n","      <td>9.080000</td>\n","      <td>8.405000</td>\n","      <td>8.603333</td>\n","      <td>8.554167</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 22:00:00</th>\n","      <td>8.455563</td>\n","      <td>8.527500</td>\n","      <td>8.570000</td>\n","      <td>8.895833</td>\n","      <td>8.789167</td>\n","      <td>9.043333</td>\n","      <td>8.395000</td>\n","      <td>8.605000</td>\n","      <td>8.548333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 23:00:00</th>\n","      <td>8.456159</td>\n","      <td>8.505000</td>\n","      <td>8.525833</td>\n","      <td>8.868333</td>\n","      <td>8.701667</td>\n","      <td>8.964167</td>\n","      <td>8.360833</td>\n","      <td>8.575000</td>\n","      <td>8.542500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2d11798-49e5-4581-9009-27ce30a661f0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f2d11798-49e5-4581-9009-27ce30a661f0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f2d11798-49e5-4581-9009-27ce30a661f0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["river_flow_2020_summer = river_flow[(river_flow.index >= '2020-04-15 00:00:00') & (river_flow.index < '2020-10-01 00:00:00')]\n","river_flow_2020_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"PpeWCLHvyLVT","executionInfo":{"status":"ok","timestamp":1688064938957,"user_tz":240,"elapsed":189,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"a51b71f4-a04e-47ac-e309-01cc676e1e52"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2020-04-15 00:00:00     6.000015  8.560000  8.395833    8.338333     8.407500   \n","2020-04-15 01:00:00     6.000012  8.509167  8.367500    8.338333     8.365833   \n","2020-04-15 02:00:00     6.000009  8.463333  8.332500    8.335833     8.320000   \n","2020-04-15 03:00:00     6.000006  8.424167  8.298333    8.330000     8.314167   \n","2020-04-15 04:00:00     6.000003  8.392500  8.258333    8.324167     8.315833   \n","...                          ...       ...       ...         ...          ...   \n","2020-09-30 19:00:00     7.210728  7.997774  8.651667    7.170000     8.778333   \n","2020-09-30 20:00:00     7.211008  7.997872  8.679167    7.170000     8.725000   \n","2020-09-30 21:00:00     7.211288  7.997971  8.665833    7.170000     8.672500   \n","2020-09-30 22:00:00     7.211568  7.998069  8.644167    7.170000     8.593333   \n","2020-09-30 23:00:00     7.211848  7.998167  8.606667    7.170000     8.475833   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2020-04-15 00:00:00          7.172888  8.248871  8.352500  8.332501  \n","2020-04-15 01:00:00          7.173162  8.248827  8.320000  8.324168  \n","2020-04-15 02:00:00          7.173436  8.248784  8.285833  8.314168  \n","2020-04-15 03:00:00          7.173710  8.248741  8.260000  8.308334  \n","2020-04-15 04:00:00          7.173984  8.248698  8.245833  8.300834  \n","...                               ...       ...       ...       ...  \n","2020-09-30 19:00:00          8.282930  8.073830  8.166797  7.870001  \n","2020-09-30 20:00:00          8.283204  8.073787  8.166876  7.870001  \n","2020-09-30 21:00:00          8.283478  8.073744  8.166954  7.870001  \n","2020-09-30 22:00:00          8.283752  8.073701  8.167033  7.870001  \n","2020-09-30 23:00:00          8.284026  8.073657  8.167112  7.870001  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-7da085cc-b461-4618-92fc-6eae745eeaba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-04-15 00:00:00</th>\n","      <td>6.000015</td>\n","      <td>8.560000</td>\n","      <td>8.395833</td>\n","      <td>8.338333</td>\n","      <td>8.407500</td>\n","      <td>7.172888</td>\n","      <td>8.248871</td>\n","      <td>8.352500</td>\n","      <td>8.332501</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 01:00:00</th>\n","      <td>6.000012</td>\n","      <td>8.509167</td>\n","      <td>8.367500</td>\n","      <td>8.338333</td>\n","      <td>8.365833</td>\n","      <td>7.173162</td>\n","      <td>8.248827</td>\n","      <td>8.320000</td>\n","      <td>8.324168</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 02:00:00</th>\n","      <td>6.000009</td>\n","      <td>8.463333</td>\n","      <td>8.332500</td>\n","      <td>8.335833</td>\n","      <td>8.320000</td>\n","      <td>7.173436</td>\n","      <td>8.248784</td>\n","      <td>8.285833</td>\n","      <td>8.314168</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 03:00:00</th>\n","      <td>6.000006</td>\n","      <td>8.424167</td>\n","      <td>8.298333</td>\n","      <td>8.330000</td>\n","      <td>8.314167</td>\n","      <td>7.173710</td>\n","      <td>8.248741</td>\n","      <td>8.260000</td>\n","      <td>8.308334</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 04:00:00</th>\n","      <td>6.000003</td>\n","      <td>8.392500</td>\n","      <td>8.258333</td>\n","      <td>8.324167</td>\n","      <td>8.315833</td>\n","      <td>7.173984</td>\n","      <td>8.248698</td>\n","      <td>8.245833</td>\n","      <td>8.300834</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 19:00:00</th>\n","      <td>7.210728</td>\n","      <td>7.997774</td>\n","      <td>8.651667</td>\n","      <td>7.170000</td>\n","      <td>8.778333</td>\n","      <td>8.282930</td>\n","      <td>8.073830</td>\n","      <td>8.166797</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 20:00:00</th>\n","      <td>7.211008</td>\n","      <td>7.997872</td>\n","      <td>8.679167</td>\n","      <td>7.170000</td>\n","      <td>8.725000</td>\n","      <td>8.283204</td>\n","      <td>8.073787</td>\n","      <td>8.166876</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 21:00:00</th>\n","      <td>7.211288</td>\n","      <td>7.997971</td>\n","      <td>8.665833</td>\n","      <td>7.170000</td>\n","      <td>8.672500</td>\n","      <td>8.283478</td>\n","      <td>8.073744</td>\n","      <td>8.166954</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 22:00:00</th>\n","      <td>7.211568</td>\n","      <td>7.998069</td>\n","      <td>8.644167</td>\n","      <td>7.170000</td>\n","      <td>8.593333</td>\n","      <td>8.283752</td>\n","      <td>8.073701</td>\n","      <td>8.167033</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 23:00:00</th>\n","      <td>7.211848</td>\n","      <td>7.998167</td>\n","      <td>8.606667</td>\n","      <td>7.170000</td>\n","      <td>8.475833</td>\n","      <td>8.284026</td>\n","      <td>8.073657</td>\n","      <td>8.167112</td>\n","      <td>7.870001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7da085cc-b461-4618-92fc-6eae745eeaba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7da085cc-b461-4618-92fc-6eae745eeaba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7da085cc-b461-4618-92fc-6eae745eeaba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["river_flow_2021_summer = river_flow[(river_flow.index >= '2021-04-15 00:00:00') & (river_flow.index < '2021-10-01 00:00:00')]\n","river_flow_2021_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"9kLOfcgVyRPP","executionInfo":{"status":"ok","timestamp":1688064942859,"user_tz":240,"elapsed":202,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"884770b0-0f75-4075-9f2e-6af2c6409026"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2021-04-15 00:00:00     8.318333  8.410000  8.340000    8.389166     8.506666   \n","2021-04-15 01:00:00     8.280833  8.410000  8.331667    8.378333     8.484166   \n","2021-04-15 02:00:00     8.270000  8.410000  8.314167    8.365833     8.469166   \n","2021-04-15 03:00:00     8.260833  8.410000  8.302500    8.351666     8.456666   \n","2021-04-15 04:00:00     8.250000  8.410000  8.292500    8.333333     8.447500   \n","...                          ...       ...       ...         ...          ...   \n","2021-09-30 19:00:00     7.639166  8.309167  8.115000    8.086667     8.310000   \n","2021-09-30 20:00:00     7.621666  8.314167  8.130000    8.090000     8.307500   \n","2021-09-30 21:00:00     7.647499  8.312500  8.131667    8.090000     8.293334   \n","2021-09-30 22:00:00     7.649166  8.296667  8.130000    8.091667     8.264167   \n","2021-09-30 23:00:00     7.681666  8.276667  8.120833    8.095000     8.235834   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2021-04-15 00:00:00          8.629167  8.304167  8.348332  8.280834  \n","2021-04-15 01:00:00          8.624167  8.285000  8.349999  8.292500  \n","2021-04-15 02:00:00          8.614167  8.255833  8.352499  8.300834  \n","2021-04-15 03:00:00          8.600834  8.224167  8.354166  8.306667  \n","2021-04-15 04:00:00          8.583334  8.204167  8.353332  8.306667  \n","...                               ...       ...       ...       ...  \n","2021-09-30 19:00:00          8.215833  7.575000  8.075833  8.250000  \n","2021-09-30 20:00:00          8.230000  7.634167  8.080000  8.255833  \n","2021-09-30 21:00:00          8.250833  7.695000  8.074167  8.263333  \n","2021-09-30 22:00:00          8.255833  7.737500  8.065833  8.256667  \n","2021-09-30 23:00:00          8.258333  7.747500  8.050833  8.212500  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-b5246982-2164-482b-ba84-84d6fe206254\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-15 00:00:00</th>\n","      <td>8.318333</td>\n","      <td>8.410000</td>\n","      <td>8.340000</td>\n","      <td>8.389166</td>\n","      <td>8.506666</td>\n","      <td>8.629167</td>\n","      <td>8.304167</td>\n","      <td>8.348332</td>\n","      <td>8.280834</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 01:00:00</th>\n","      <td>8.280833</td>\n","      <td>8.410000</td>\n","      <td>8.331667</td>\n","      <td>8.378333</td>\n","      <td>8.484166</td>\n","      <td>8.624167</td>\n","      <td>8.285000</td>\n","      <td>8.349999</td>\n","      <td>8.292500</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 02:00:00</th>\n","      <td>8.270000</td>\n","      <td>8.410000</td>\n","      <td>8.314167</td>\n","      <td>8.365833</td>\n","      <td>8.469166</td>\n","      <td>8.614167</td>\n","      <td>8.255833</td>\n","      <td>8.352499</td>\n","      <td>8.300834</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 03:00:00</th>\n","      <td>8.260833</td>\n","      <td>8.410000</td>\n","      <td>8.302500</td>\n","      <td>8.351666</td>\n","      <td>8.456666</td>\n","      <td>8.600834</td>\n","      <td>8.224167</td>\n","      <td>8.354166</td>\n","      <td>8.306667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 04:00:00</th>\n","      <td>8.250000</td>\n","      <td>8.410000</td>\n","      <td>8.292500</td>\n","      <td>8.333333</td>\n","      <td>8.447500</td>\n","      <td>8.583334</td>\n","      <td>8.204167</td>\n","      <td>8.353332</td>\n","      <td>8.306667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 19:00:00</th>\n","      <td>7.639166</td>\n","      <td>8.309167</td>\n","      <td>8.115000</td>\n","      <td>8.086667</td>\n","      <td>8.310000</td>\n","      <td>8.215833</td>\n","      <td>7.575000</td>\n","      <td>8.075833</td>\n","      <td>8.250000</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 20:00:00</th>\n","      <td>7.621666</td>\n","      <td>8.314167</td>\n","      <td>8.130000</td>\n","      <td>8.090000</td>\n","      <td>8.307500</td>\n","      <td>8.230000</td>\n","      <td>7.634167</td>\n","      <td>8.080000</td>\n","      <td>8.255833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 21:00:00</th>\n","      <td>7.647499</td>\n","      <td>8.312500</td>\n","      <td>8.131667</td>\n","      <td>8.090000</td>\n","      <td>8.293334</td>\n","      <td>8.250833</td>\n","      <td>7.695000</td>\n","      <td>8.074167</td>\n","      <td>8.263333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 22:00:00</th>\n","      <td>7.649166</td>\n","      <td>8.296667</td>\n","      <td>8.130000</td>\n","      <td>8.091667</td>\n","      <td>8.264167</td>\n","      <td>8.255833</td>\n","      <td>7.737500</td>\n","      <td>8.065833</td>\n","      <td>8.256667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 23:00:00</th>\n","      <td>7.681666</td>\n","      <td>8.276667</td>\n","      <td>8.120833</td>\n","      <td>8.095000</td>\n","      <td>8.235834</td>\n","      <td>8.258333</td>\n","      <td>7.747500</td>\n","      <td>8.050833</td>\n","      <td>8.212500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5246982-2164-482b-ba84-84d6fe206254')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b5246982-2164-482b-ba84-84d6fe206254 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b5246982-2164-482b-ba84-84d6fe206254');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["river_flow_2022_summer = river_flow[(river_flow.index >= '2022-04-15 00:00:00') & (river_flow.index < '2022-10-01 00:00:00')]\n","river_flow_2022_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Vsz9x4iqybjl","executionInfo":{"status":"ok","timestamp":1688064960451,"user_tz":240,"elapsed":208,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"e9cdbe60-034e-4a35-ae14-5c6026163cba"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2022-04-15 00:00:00     6.900726  8.451667  8.551667    8.429167     8.440001   \n","2022-04-15 01:00:00     6.900317  8.402500  8.522500    8.417500     8.397500   \n","2022-04-15 02:00:00     6.899909  8.356667  8.494167    8.402500     8.347501   \n","2022-04-15 03:00:00     6.899501  8.316667  8.467500    8.386667     8.296667   \n","2022-04-15 04:00:00     6.899093  8.280000  8.433333    8.365833     8.260834   \n","...                          ...       ...       ...         ...          ...   \n","2022-09-30 19:00:00     8.315833  8.617500  8.160000    8.125833     8.790000   \n","2022-09-30 20:00:00     8.283333  8.624167  8.160000    8.180833     8.784167   \n","2022-09-30 21:00:00     8.217500  8.611667  8.160000    8.241667     8.761667   \n","2022-09-30 22:00:00     8.159167  8.568333  8.160000    8.289167     8.707500   \n","2022-09-30 23:00:00     8.117500  8.478333  8.160000    8.300000     8.614167   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2022-04-15 00:00:00          8.465834  8.150000  8.543334  8.301666  \n","2022-04-15 01:00:00          8.434167  8.150000  8.495834  8.284166  \n","2022-04-15 02:00:00          8.411667  8.150000  8.445834  8.270000  \n","2022-04-15 03:00:00          8.395834  8.150000  8.400000  8.255833  \n","2022-04-15 04:00:00          8.383334  8.150000  8.362500  8.241666  \n","...                               ...       ...       ...       ...  \n","2022-09-30 19:00:00          8.618333  8.501667  8.454167  8.085833  \n","2022-09-30 20:00:00          8.657500  8.570000  8.520000  8.129167  \n","2022-09-30 21:00:00          8.670000  8.605000  8.564167  8.153333  \n","2022-09-30 22:00:00          8.653333  8.610000  8.579167  8.141667  \n","2022-09-30 23:00:00          8.591667  8.601667  8.555833  8.087500  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-85b934ed-b740-495e-b4e1-daf5fcb51fd8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-04-15 00:00:00</th>\n","      <td>6.900726</td>\n","      <td>8.451667</td>\n","      <td>8.551667</td>\n","      <td>8.429167</td>\n","      <td>8.440001</td>\n","      <td>8.465834</td>\n","      <td>8.150000</td>\n","      <td>8.543334</td>\n","      <td>8.301666</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 01:00:00</th>\n","      <td>6.900317</td>\n","      <td>8.402500</td>\n","      <td>8.522500</td>\n","      <td>8.417500</td>\n","      <td>8.397500</td>\n","      <td>8.434167</td>\n","      <td>8.150000</td>\n","      <td>8.495834</td>\n","      <td>8.284166</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 02:00:00</th>\n","      <td>6.899909</td>\n","      <td>8.356667</td>\n","      <td>8.494167</td>\n","      <td>8.402500</td>\n","      <td>8.347501</td>\n","      <td>8.411667</td>\n","      <td>8.150000</td>\n","      <td>8.445834</td>\n","      <td>8.270000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 03:00:00</th>\n","      <td>6.899501</td>\n","      <td>8.316667</td>\n","      <td>8.467500</td>\n","      <td>8.386667</td>\n","      <td>8.296667</td>\n","      <td>8.395834</td>\n","      <td>8.150000</td>\n","      <td>8.400000</td>\n","      <td>8.255833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 04:00:00</th>\n","      <td>6.899093</td>\n","      <td>8.280000</td>\n","      <td>8.433333</td>\n","      <td>8.365833</td>\n","      <td>8.260834</td>\n","      <td>8.383334</td>\n","      <td>8.150000</td>\n","      <td>8.362500</td>\n","      <td>8.241666</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 19:00:00</th>\n","      <td>8.315833</td>\n","      <td>8.617500</td>\n","      <td>8.160000</td>\n","      <td>8.125833</td>\n","      <td>8.790000</td>\n","      <td>8.618333</td>\n","      <td>8.501667</td>\n","      <td>8.454167</td>\n","      <td>8.085833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 20:00:00</th>\n","      <td>8.283333</td>\n","      <td>8.624167</td>\n","      <td>8.160000</td>\n","      <td>8.180833</td>\n","      <td>8.784167</td>\n","      <td>8.657500</td>\n","      <td>8.570000</td>\n","      <td>8.520000</td>\n","      <td>8.129167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 21:00:00</th>\n","      <td>8.217500</td>\n","      <td>8.611667</td>\n","      <td>8.160000</td>\n","      <td>8.241667</td>\n","      <td>8.761667</td>\n","      <td>8.670000</td>\n","      <td>8.605000</td>\n","      <td>8.564167</td>\n","      <td>8.153333</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 22:00:00</th>\n","      <td>8.159167</td>\n","      <td>8.568333</td>\n","      <td>8.160000</td>\n","      <td>8.289167</td>\n","      <td>8.707500</td>\n","      <td>8.653333</td>\n","      <td>8.610000</td>\n","      <td>8.579167</td>\n","      <td>8.141667</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 23:00:00</th>\n","      <td>8.117500</td>\n","      <td>8.478333</td>\n","      <td>8.160000</td>\n","      <td>8.300000</td>\n","      <td>8.614167</td>\n","      <td>8.591667</td>\n","      <td>8.601667</td>\n","      <td>8.555833</td>\n","      <td>8.087500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85b934ed-b740-495e-b4e1-daf5fcb51fd8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-85b934ed-b740-495e-b4e1-daf5fcb51fd8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-85b934ed-b740-495e-b4e1-daf5fcb51fd8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["river_flow_2018_summer.to_csv(\"pH2018Summer.csv\")\n","river_flow_2019_summer.to_csv(\"pH2019Summer.csv\")\n","river_flow_2020_summer.to_csv(\"pH2020Summer.csv\")\n","river_flow_2021_summer.to_csv(\"pH2021Summer.csv\")\n","river_flow_2022_summer.to_csv(\"pH2022Summer.csv\")"],"metadata":{"id":"w4_mHchGyhsj","executionInfo":{"status":"ok","timestamp":1688064992674,"user_tz":240,"elapsed":405,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","download1 = files.download(\"pH2018Summer.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"axy85HXlyztC","executionInfo":{"status":"ok","timestamp":1688065000698,"user_tz":240,"elapsed":213,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"893c902d-ab96-4de5-ae67-e12a2f3d6a3e"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_a88188a9-50c6-412f-89b2-e2f8b9c29dd0\", \"pH2018Summer.csv\", 455381)"]},"metadata":{}}]},{"cell_type":"code","source":["download2 = files.download(\"pH2019Summer.csv\")\n","download3 = files.download(\"pH2020Summer.csv\")\n","download5 = files.download(\"pH2021Summer.csv\")\n","download4 = files.download(\"pH2022Summer.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"utDKtLlny_zB","executionInfo":{"status":"ok","timestamp":1688065026013,"user_tz":240,"elapsed":185,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"40585610-2580-49ab-d222-8ae129449fd3"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_43533c71-7a40-4659-93f2-7e4d43d773a6\", \"pH2019Summer.csv\", 430617)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_5c6b8870-77b1-45d0-a842-1fd346f93a29\", \"pH2020Summer.csv\", 589177)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_a202f449-b518-4f1a-9286-95a8f34c0f27\", \"pH2021Summer.csv\", 436488)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_ec43678c-b18f-4825-8e71-ad5d70300545\", \"pH2022Summer.csv\", 460681)"]},"metadata":{}}]},{"cell_type":"markdown","source":["# **Winter files pH**"],"metadata":{"id":"JXQJp26u02aT"}},{"cell_type":"code","source":["river_flow_2018_winter = river_flow[(river_flow.index < '2019-04-15 00:00:00') & (river_flow.index >= '2018-10-01 00:00:00')]\n","river_flow_2018_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Qbty_coSzPRU","executionInfo":{"status":"ok","timestamp":1688065044576,"user_tz":240,"elapsed":202,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"575bf0b8-4771-4e6c-b75c-0f871645f168"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2018-10-01 00:00:00     7.770000  7.970000  7.997500    8.104166     8.230000   \n","2018-10-01 01:00:00     7.760000  7.901667  7.949167    8.064999     8.130000   \n","2018-10-01 02:00:00     7.750000  7.835000  7.901667    8.043332     8.030000   \n","2018-10-01 03:00:00     7.730000  7.798333  7.864167    8.008332     7.940000   \n","2018-10-01 04:00:00     7.730000  7.768333  7.834167    7.994999     7.850000   \n","...                          ...       ...       ...         ...          ...   \n","2019-04-14 19:00:00     8.064452  8.044167  8.111667    7.840000     8.279166   \n","2019-04-14 20:00:00     8.064478  8.032500  8.125833    7.854167     8.279166   \n","2019-04-14 21:00:00     8.064504  8.020000  8.140000    7.867500     8.265833   \n","2019-04-14 22:00:00     8.064530  8.000000  8.148333    7.875833     8.244166   \n","2019-04-14 23:00:00     8.064556  7.983333  8.145833    7.882500     8.218333   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2018-10-01 00:00:00          7.706667  8.100000  8.228334  7.999113  \n","2018-10-01 01:00:00          7.706667  8.074167  8.185834  7.999450  \n","2018-10-01 02:00:00          7.683333  8.060833  8.138334  7.999787  \n","2018-10-01 03:00:00          7.645833  8.057500  8.095834  8.000124  \n","2018-10-01 04:00:00          7.629167  8.049167  8.048334  8.000461  \n","...                               ...       ...       ...       ...  \n","2019-04-14 19:00:00          8.229168  8.210000  8.298333  8.253333  \n","2019-04-14 20:00:00          8.238334  8.210000  8.294167  8.263333  \n","2019-04-14 21:00:00          8.252501  8.196667  8.296667  8.255833  \n","2019-04-14 22:00:00          8.262501  8.190000  8.310833  8.240833  \n","2019-04-14 23:00:00          8.270001  8.184167  8.316667  8.226666  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-19696fbc-2856-4c05-9d7a-737bc58805a4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-10-01 00:00:00</th>\n","      <td>7.770000</td>\n","      <td>7.970000</td>\n","      <td>7.997500</td>\n","      <td>8.104166</td>\n","      <td>8.230000</td>\n","      <td>7.706667</td>\n","      <td>8.100000</td>\n","      <td>8.228334</td>\n","      <td>7.999113</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 01:00:00</th>\n","      <td>7.760000</td>\n","      <td>7.901667</td>\n","      <td>7.949167</td>\n","      <td>8.064999</td>\n","      <td>8.130000</td>\n","      <td>7.706667</td>\n","      <td>8.074167</td>\n","      <td>8.185834</td>\n","      <td>7.999450</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 02:00:00</th>\n","      <td>7.750000</td>\n","      <td>7.835000</td>\n","      <td>7.901667</td>\n","      <td>8.043332</td>\n","      <td>8.030000</td>\n","      <td>7.683333</td>\n","      <td>8.060833</td>\n","      <td>8.138334</td>\n","      <td>7.999787</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 03:00:00</th>\n","      <td>7.730000</td>\n","      <td>7.798333</td>\n","      <td>7.864167</td>\n","      <td>8.008332</td>\n","      <td>7.940000</td>\n","      <td>7.645833</td>\n","      <td>8.057500</td>\n","      <td>8.095834</td>\n","      <td>8.000124</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 04:00:00</th>\n","      <td>7.730000</td>\n","      <td>7.768333</td>\n","      <td>7.834167</td>\n","      <td>7.994999</td>\n","      <td>7.850000</td>\n","      <td>7.629167</td>\n","      <td>8.049167</td>\n","      <td>8.048334</td>\n","      <td>8.000461</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 19:00:00</th>\n","      <td>8.064452</td>\n","      <td>8.044167</td>\n","      <td>8.111667</td>\n","      <td>7.840000</td>\n","      <td>8.279166</td>\n","      <td>8.229168</td>\n","      <td>8.210000</td>\n","      <td>8.298333</td>\n","      <td>8.253333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 20:00:00</th>\n","      <td>8.064478</td>\n","      <td>8.032500</td>\n","      <td>8.125833</td>\n","      <td>7.854167</td>\n","      <td>8.279166</td>\n","      <td>8.238334</td>\n","      <td>8.210000</td>\n","      <td>8.294167</td>\n","      <td>8.263333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 21:00:00</th>\n","      <td>8.064504</td>\n","      <td>8.020000</td>\n","      <td>8.140000</td>\n","      <td>7.867500</td>\n","      <td>8.265833</td>\n","      <td>8.252501</td>\n","      <td>8.196667</td>\n","      <td>8.296667</td>\n","      <td>8.255833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 22:00:00</th>\n","      <td>8.064530</td>\n","      <td>8.000000</td>\n","      <td>8.148333</td>\n","      <td>7.875833</td>\n","      <td>8.244166</td>\n","      <td>8.262501</td>\n","      <td>8.190000</td>\n","      <td>8.310833</td>\n","      <td>8.240833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 23:00:00</th>\n","      <td>8.064556</td>\n","      <td>7.983333</td>\n","      <td>8.145833</td>\n","      <td>7.882500</td>\n","      <td>8.218333</td>\n","      <td>8.270001</td>\n","      <td>8.184167</td>\n","      <td>8.316667</td>\n","      <td>8.226666</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19696fbc-2856-4c05-9d7a-737bc58805a4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-19696fbc-2856-4c05-9d7a-737bc58805a4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-19696fbc-2856-4c05-9d7a-737bc58805a4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["river_flow_2019_winter = river_flow[(river_flow.index < '2020-04-15 00:00:00') & (river_flow.index >= '2019-10-01 00:00:00')]\n","river_flow_2019_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"lsSru15szeGF","executionInfo":{"status":"ok","timestamp":1688065045754,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"c1852e01-3054-4383-a0ee-3471148e1b99"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2019-10-01 00:00:00     8.456755  8.459167  8.474167    8.822500     8.594167   \n","2019-10-01 01:00:00     8.457351  8.395833  8.420000    8.776667     8.487500   \n","2019-10-01 02:00:00     8.457947  8.325833  8.360000    8.738333     8.379167   \n","2019-10-01 03:00:00     8.458543  8.265833  8.310000    8.705833     8.270000   \n","2019-10-01 04:00:00     8.459139  8.218333  8.266667    8.671667     8.184167   \n","...                          ...       ...       ...         ...          ...   \n","2020-04-14 19:00:00     6.000029  8.610000  8.384167    8.264167     8.519167   \n","2020-04-14 20:00:00     6.000026  8.615833  8.414167    8.286667     8.560000   \n","2020-04-14 21:00:00     6.000023  8.629167  8.434167    8.306667     8.535000   \n","2020-04-14 22:00:00     6.000020  8.627500  8.434167    8.324167     8.524167   \n","2020-04-14 23:00:00     6.000017  8.605833  8.421667    8.335833     8.460000   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2019-10-01 00:00:00          8.857500  8.294166  8.531667  8.550000  \n","2019-10-01 01:00:00          8.770833  8.216666  8.475833  8.550833  \n","2019-10-01 02:00:00          8.705833  8.152500  8.403333  8.561667  \n","2019-10-01 03:00:00          8.636667  8.126666  8.323333  8.545000  \n","2019-10-01 04:00:00          8.579167  8.132500  8.245833  8.535833  \n","...                               ...       ...       ...       ...  \n","2020-04-14 19:00:00          7.171518  8.249087  8.414167  8.300834  \n","2020-04-14 20:00:00          7.171792  8.249043  8.418333  8.321668  \n","2020-04-14 21:00:00          7.172066  8.249000  8.409167  8.343334  \n","2020-04-14 22:00:00          7.172340  8.248957  8.395000  8.348334  \n","2020-04-14 23:00:00          7.172614  8.248914  8.380000  8.344168  \n","\n","[4728 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-0ebb823d-a854-4b04-a671-2259d42b33b0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-10-01 00:00:00</th>\n","      <td>8.456755</td>\n","      <td>8.459167</td>\n","      <td>8.474167</td>\n","      <td>8.822500</td>\n","      <td>8.594167</td>\n","      <td>8.857500</td>\n","      <td>8.294166</td>\n","      <td>8.531667</td>\n","      <td>8.550000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 01:00:00</th>\n","      <td>8.457351</td>\n","      <td>8.395833</td>\n","      <td>8.420000</td>\n","      <td>8.776667</td>\n","      <td>8.487500</td>\n","      <td>8.770833</td>\n","      <td>8.216666</td>\n","      <td>8.475833</td>\n","      <td>8.550833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 02:00:00</th>\n","      <td>8.457947</td>\n","      <td>8.325833</td>\n","      <td>8.360000</td>\n","      <td>8.738333</td>\n","      <td>8.379167</td>\n","      <td>8.705833</td>\n","      <td>8.152500</td>\n","      <td>8.403333</td>\n","      <td>8.561667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 03:00:00</th>\n","      <td>8.458543</td>\n","      <td>8.265833</td>\n","      <td>8.310000</td>\n","      <td>8.705833</td>\n","      <td>8.270000</td>\n","      <td>8.636667</td>\n","      <td>8.126666</td>\n","      <td>8.323333</td>\n","      <td>8.545000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 04:00:00</th>\n","      <td>8.459139</td>\n","      <td>8.218333</td>\n","      <td>8.266667</td>\n","      <td>8.671667</td>\n","      <td>8.184167</td>\n","      <td>8.579167</td>\n","      <td>8.132500</td>\n","      <td>8.245833</td>\n","      <td>8.535833</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 19:00:00</th>\n","      <td>6.000029</td>\n","      <td>8.610000</td>\n","      <td>8.384167</td>\n","      <td>8.264167</td>\n","      <td>8.519167</td>\n","      <td>7.171518</td>\n","      <td>8.249087</td>\n","      <td>8.414167</td>\n","      <td>8.300834</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 20:00:00</th>\n","      <td>6.000026</td>\n","      <td>8.615833</td>\n","      <td>8.414167</td>\n","      <td>8.286667</td>\n","      <td>8.560000</td>\n","      <td>7.171792</td>\n","      <td>8.249043</td>\n","      <td>8.418333</td>\n","      <td>8.321668</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 21:00:00</th>\n","      <td>6.000023</td>\n","      <td>8.629167</td>\n","      <td>8.434167</td>\n","      <td>8.306667</td>\n","      <td>8.535000</td>\n","      <td>7.172066</td>\n","      <td>8.249000</td>\n","      <td>8.409167</td>\n","      <td>8.343334</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 22:00:00</th>\n","      <td>6.000020</td>\n","      <td>8.627500</td>\n","      <td>8.434167</td>\n","      <td>8.324167</td>\n","      <td>8.524167</td>\n","      <td>7.172340</td>\n","      <td>8.248957</td>\n","      <td>8.395000</td>\n","      <td>8.348334</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 23:00:00</th>\n","      <td>6.000017</td>\n","      <td>8.605833</td>\n","      <td>8.421667</td>\n","      <td>8.335833</td>\n","      <td>8.460000</td>\n","      <td>7.172614</td>\n","      <td>8.248914</td>\n","      <td>8.380000</td>\n","      <td>8.344168</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4728 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ebb823d-a854-4b04-a671-2259d42b33b0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ebb823d-a854-4b04-a671-2259d42b33b0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ebb823d-a854-4b04-a671-2259d42b33b0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["river_flow_2020_winter = river_flow[(river_flow.index < '2021-04-15 00:00:00') & (river_flow.index >= '2020-10-01 00:00:00')]\n","river_flow_2020_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"3MNWqaPGzj4U","executionInfo":{"status":"ok","timestamp":1688065045972,"user_tz":240,"elapsed":6,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"b5f973ec-89d9-46e4-8a22-436064055329"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2020-10-01 00:00:00     7.212128  7.998265  8.564167    7.170000     8.395000   \n","2020-10-01 01:00:00     7.212408  7.998363  8.510000    7.170000     8.322500   \n","2020-10-01 02:00:00     7.212688  7.998461  8.461667    7.170000     8.259167   \n","2020-10-01 03:00:00     7.212968  7.998559  8.420833    7.170000     8.219167   \n","2020-10-01 04:00:00     7.213248  7.998658  8.396667    7.170000     8.205000   \n","...                          ...       ...       ...         ...          ...   \n","2021-04-14 19:00:00     8.532500  8.410000  8.282500    8.310000     8.550000   \n","2021-04-14 20:00:00     8.480000  8.410000  8.310000    8.342500     8.555833   \n","2021-04-14 21:00:00     8.434167  8.410000  8.327500    8.368333     8.551666   \n","2021-04-14 22:00:00     8.374167  8.410000  8.332500    8.380000     8.537500   \n","2021-04-14 23:00:00     8.366667  8.410000  8.340000    8.380000     8.523333   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2020-10-01 00:00:00          8.284300  8.073614  8.167191  7.870001  \n","2020-10-01 01:00:00          8.284574  8.073571  8.167269  7.870001  \n","2020-10-01 02:00:00          8.284848  8.073528  8.167348  7.870001  \n","2020-10-01 03:00:00          8.285122  8.073485  8.167427  7.870001  \n","2020-10-01 04:00:00          8.285396  8.073441  8.167505  7.870001  \n","...                               ...       ...       ...       ...  \n","2021-04-14 19:00:00          8.541667  8.307500  8.327499  8.212500  \n","2021-04-14 20:00:00          8.574167  8.328333  8.335832  8.228334  \n","2021-04-14 21:00:00          8.598334  8.340000  8.334999  8.240834  \n","2021-04-14 22:00:00          8.617500  8.340000  8.344166  8.256667  \n","2021-04-14 23:00:00          8.620000  8.330000  8.344999  8.270834  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-39cb9ab5-b871-4a22-9384-e67ee1c226de\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-10-01 00:00:00</th>\n","      <td>7.212128</td>\n","      <td>7.998265</td>\n","      <td>8.564167</td>\n","      <td>7.170000</td>\n","      <td>8.395000</td>\n","      <td>8.284300</td>\n","      <td>8.073614</td>\n","      <td>8.167191</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 01:00:00</th>\n","      <td>7.212408</td>\n","      <td>7.998363</td>\n","      <td>8.510000</td>\n","      <td>7.170000</td>\n","      <td>8.322500</td>\n","      <td>8.284574</td>\n","      <td>8.073571</td>\n","      <td>8.167269</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 02:00:00</th>\n","      <td>7.212688</td>\n","      <td>7.998461</td>\n","      <td>8.461667</td>\n","      <td>7.170000</td>\n","      <td>8.259167</td>\n","      <td>8.284848</td>\n","      <td>8.073528</td>\n","      <td>8.167348</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 03:00:00</th>\n","      <td>7.212968</td>\n","      <td>7.998559</td>\n","      <td>8.420833</td>\n","      <td>7.170000</td>\n","      <td>8.219167</td>\n","      <td>8.285122</td>\n","      <td>8.073485</td>\n","      <td>8.167427</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 04:00:00</th>\n","      <td>7.213248</td>\n","      <td>7.998658</td>\n","      <td>8.396667</td>\n","      <td>7.170000</td>\n","      <td>8.205000</td>\n","      <td>8.285396</td>\n","      <td>8.073441</td>\n","      <td>8.167505</td>\n","      <td>7.870001</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 19:00:00</th>\n","      <td>8.532500</td>\n","      <td>8.410000</td>\n","      <td>8.282500</td>\n","      <td>8.310000</td>\n","      <td>8.550000</td>\n","      <td>8.541667</td>\n","      <td>8.307500</td>\n","      <td>8.327499</td>\n","      <td>8.212500</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 20:00:00</th>\n","      <td>8.480000</td>\n","      <td>8.410000</td>\n","      <td>8.310000</td>\n","      <td>8.342500</td>\n","      <td>8.555833</td>\n","      <td>8.574167</td>\n","      <td>8.328333</td>\n","      <td>8.335832</td>\n","      <td>8.228334</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 21:00:00</th>\n","      <td>8.434167</td>\n","      <td>8.410000</td>\n","      <td>8.327500</td>\n","      <td>8.368333</td>\n","      <td>8.551666</td>\n","      <td>8.598334</td>\n","      <td>8.340000</td>\n","      <td>8.334999</td>\n","      <td>8.240834</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 22:00:00</th>\n","      <td>8.374167</td>\n","      <td>8.410000</td>\n","      <td>8.332500</td>\n","      <td>8.380000</td>\n","      <td>8.537500</td>\n","      <td>8.617500</td>\n","      <td>8.340000</td>\n","      <td>8.344166</td>\n","      <td>8.256667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 23:00:00</th>\n","      <td>8.366667</td>\n","      <td>8.410000</td>\n","      <td>8.340000</td>\n","      <td>8.380000</td>\n","      <td>8.523333</td>\n","      <td>8.620000</td>\n","      <td>8.330000</td>\n","      <td>8.344999</td>\n","      <td>8.270834</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39cb9ab5-b871-4a22-9384-e67ee1c226de')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-39cb9ab5-b871-4a22-9384-e67ee1c226de button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-39cb9ab5-b871-4a22-9384-e67ee1c226de');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["river_flow_2021_winter = river_flow[(river_flow.index < '2022-04-15 00:00:00') & (river_flow.index >= '2021-10-01 00:00:00')]\n","river_flow_2021_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"mzPZan6vzpwz","executionInfo":{"status":"ok","timestamp":1688065046867,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"00187a71-c63a-4e6f-e1f2-0b028b6dadf5"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair     Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                       \n","2021-10-01 00:00:00     7.669166  8.256667  8.115833    8.084167     8.211667   \n","2021-10-01 01:00:00     7.687499  8.243333  8.103333    8.074167     8.197500   \n","2021-10-01 02:00:00     7.672499  8.233333  8.087500    8.065833     8.190000   \n","2021-10-01 03:00:00     7.676666  8.218333  8.077500    8.055833     8.190000   \n","2021-10-01 04:00:00     7.680833  8.204167  8.064167    8.040000     8.197500   \n","...                          ...       ...       ...         ...          ...   \n","2022-04-14 19:00:00     6.902766  8.475833  8.505833    8.343333     8.400001   \n","2022-04-14 20:00:00     6.902358  8.494167  8.543333    8.380000     8.456667   \n","2022-04-14 21:00:00     6.901950  8.507500  8.563333    8.408333     8.487500   \n","2022-04-14 22:00:00     6.901542  8.507500  8.577500    8.420833     8.489167   \n","2022-04-14 23:00:00     6.901134  8.490833  8.575000    8.430000     8.475001   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2021-10-01 00:00:00          8.251667  7.704167  8.040000  8.194167  \n","2021-10-01 01:00:00          8.252500  7.665833  8.030000  8.187500  \n","2021-10-01 02:00:00          8.242500  7.645833  8.020833  8.175833  \n","2021-10-01 03:00:00          8.231667  7.617500  8.020000  8.170000  \n","2021-10-01 04:00:00          8.210000  7.547500  8.020000  8.164167  \n","...                               ...       ...       ...       ...  \n","2022-04-14 19:00:00          8.459167  8.150000  8.595834  8.280000  \n","2022-04-14 20:00:00          8.483334  8.150000  8.617500  8.295833  \n","2022-04-14 21:00:00          8.497500  8.150000  8.620000  8.309166  \n","2022-04-14 22:00:00          8.500000  8.150000  8.610000  8.310000  \n","2022-04-14 23:00:00          8.488334  8.150000  8.581667  8.310000  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-3b4d90b1-c541-4c01-857c-e7f309eda734\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-10-01 00:00:00</th>\n","      <td>7.669166</td>\n","      <td>8.256667</td>\n","      <td>8.115833</td>\n","      <td>8.084167</td>\n","      <td>8.211667</td>\n","      <td>8.251667</td>\n","      <td>7.704167</td>\n","      <td>8.040000</td>\n","      <td>8.194167</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 01:00:00</th>\n","      <td>7.687499</td>\n","      <td>8.243333</td>\n","      <td>8.103333</td>\n","      <td>8.074167</td>\n","      <td>8.197500</td>\n","      <td>8.252500</td>\n","      <td>7.665833</td>\n","      <td>8.030000</td>\n","      <td>8.187500</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 02:00:00</th>\n","      <td>7.672499</td>\n","      <td>8.233333</td>\n","      <td>8.087500</td>\n","      <td>8.065833</td>\n","      <td>8.190000</td>\n","      <td>8.242500</td>\n","      <td>7.645833</td>\n","      <td>8.020833</td>\n","      <td>8.175833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 03:00:00</th>\n","      <td>7.676666</td>\n","      <td>8.218333</td>\n","      <td>8.077500</td>\n","      <td>8.055833</td>\n","      <td>8.190000</td>\n","      <td>8.231667</td>\n","      <td>7.617500</td>\n","      <td>8.020000</td>\n","      <td>8.170000</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 04:00:00</th>\n","      <td>7.680833</td>\n","      <td>8.204167</td>\n","      <td>8.064167</td>\n","      <td>8.040000</td>\n","      <td>8.197500</td>\n","      <td>8.210000</td>\n","      <td>7.547500</td>\n","      <td>8.020000</td>\n","      <td>8.164167</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 19:00:00</th>\n","      <td>6.902766</td>\n","      <td>8.475833</td>\n","      <td>8.505833</td>\n","      <td>8.343333</td>\n","      <td>8.400001</td>\n","      <td>8.459167</td>\n","      <td>8.150000</td>\n","      <td>8.595834</td>\n","      <td>8.280000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 20:00:00</th>\n","      <td>6.902358</td>\n","      <td>8.494167</td>\n","      <td>8.543333</td>\n","      <td>8.380000</td>\n","      <td>8.456667</td>\n","      <td>8.483334</td>\n","      <td>8.150000</td>\n","      <td>8.617500</td>\n","      <td>8.295833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 21:00:00</th>\n","      <td>6.901950</td>\n","      <td>8.507500</td>\n","      <td>8.563333</td>\n","      <td>8.408333</td>\n","      <td>8.487500</td>\n","      <td>8.497500</td>\n","      <td>8.150000</td>\n","      <td>8.620000</td>\n","      <td>8.309166</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 22:00:00</th>\n","      <td>6.901542</td>\n","      <td>8.507500</td>\n","      <td>8.577500</td>\n","      <td>8.420833</td>\n","      <td>8.489167</td>\n","      <td>8.500000</td>\n","      <td>8.150000</td>\n","      <td>8.610000</td>\n","      <td>8.310000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 23:00:00</th>\n","      <td>6.901134</td>\n","      <td>8.490833</td>\n","      <td>8.575000</td>\n","      <td>8.430000</td>\n","      <td>8.475001</td>\n","      <td>8.488334</td>\n","      <td>8.150000</td>\n","      <td>8.581667</td>\n","      <td>8.310000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b4d90b1-c541-4c01-857c-e7f309eda734')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b4d90b1-c541-4c01-857c-e7f309eda734 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b4d90b1-c541-4c01-857c-e7f309eda734');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["river_flow_2022_winter = river_flow[(river_flow.index < '2023-04-15 00:00:00') & (river_flow.index >= '2022-10-01 00:00:00')]\n","river_flow_2022_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"KcZHPdinzufG","executionInfo":{"status":"ok","timestamp":1688065047464,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"dc44d2c2-f40e-436e-c837-47a136449f59"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand     Blair    Brant  Bridgeport  Glen Morris  \\\n","Timestamp                                                                      \n","2022-10-01 00:00:00     8.090000  8.378333  8.16000    8.275000     8.511667   \n","2022-10-01 01:00:00     8.070000  8.284167  8.16000    8.237500     8.410000   \n","2022-10-01 02:00:00     8.038333  8.198333  8.16000    8.196667     8.302500   \n","2022-10-01 03:00:00     7.977500  8.139167  8.16000    8.158333     8.196667   \n","2022-10-01 04:00:00     7.985833  8.097500  8.16000    8.120000     8.106667   \n","...                          ...       ...      ...         ...          ...   \n","2023-01-01 19:00:00     8.315000  7.730000  8.10625    7.566667     7.887500   \n","2023-01-01 20:00:00     8.315000  7.739167  8.10625    7.560833     7.894167   \n","2023-01-01 21:00:00     8.315000  7.742500  8.10625    7.564167     7.900000   \n","2023-01-01 22:00:00     8.315000  7.750000  8.10625    7.577500     7.900000   \n","2023-01-01 23:00:00     8.315000  7.759167  8.10625    7.580000     7.899167   \n","\n","                     Breslau Victoria    Road32      York    Hanlon  \n","Timestamp                                                            \n","2022-10-01 00:00:00          8.498333  8.583333  8.520000  8.070000  \n","2022-10-01 01:00:00          8.405833  8.558333  8.470000  8.067500  \n","2022-10-01 02:00:00          8.330000  8.534167  8.405833  8.066667  \n","2022-10-01 03:00:00          8.270000  8.524167  8.334167  8.075833  \n","2022-10-01 04:00:00          8.205833  8.538333  8.256667  8.063333  \n","...                               ...       ...       ...       ...  \n","2023-01-01 19:00:00          8.047500  8.102500  7.910001  7.886667  \n","2023-01-01 20:00:00          8.047500  8.117500  7.910001  7.890000  \n","2023-01-01 21:00:00          8.047500  8.120000  7.910001  7.890000  \n","2023-01-01 22:00:00          8.047500  8.117500  7.910001  7.880833  \n","2023-01-01 23:00:00          8.047500  8.104166  7.910001  7.880000  \n","\n","[2233 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-8fb77263-c4d7-4bf0-9b6c-acb71cc038f0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-10-01 00:00:00</th>\n","      <td>8.090000</td>\n","      <td>8.378333</td>\n","      <td>8.16000</td>\n","      <td>8.275000</td>\n","      <td>8.511667</td>\n","      <td>8.498333</td>\n","      <td>8.583333</td>\n","      <td>8.520000</td>\n","      <td>8.070000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 01:00:00</th>\n","      <td>8.070000</td>\n","      <td>8.284167</td>\n","      <td>8.16000</td>\n","      <td>8.237500</td>\n","      <td>8.410000</td>\n","      <td>8.405833</td>\n","      <td>8.558333</td>\n","      <td>8.470000</td>\n","      <td>8.067500</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 02:00:00</th>\n","      <td>8.038333</td>\n","      <td>8.198333</td>\n","      <td>8.16000</td>\n","      <td>8.196667</td>\n","      <td>8.302500</td>\n","      <td>8.330000</td>\n","      <td>8.534167</td>\n","      <td>8.405833</td>\n","      <td>8.066667</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 03:00:00</th>\n","      <td>7.977500</td>\n","      <td>8.139167</td>\n","      <td>8.16000</td>\n","      <td>8.158333</td>\n","      <td>8.196667</td>\n","      <td>8.270000</td>\n","      <td>8.524167</td>\n","      <td>8.334167</td>\n","      <td>8.075833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 04:00:00</th>\n","      <td>7.985833</td>\n","      <td>8.097500</td>\n","      <td>8.16000</td>\n","      <td>8.120000</td>\n","      <td>8.106667</td>\n","      <td>8.205833</td>\n","      <td>8.538333</td>\n","      <td>8.256667</td>\n","      <td>8.063333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 19:00:00</th>\n","      <td>8.315000</td>\n","      <td>7.730000</td>\n","      <td>8.10625</td>\n","      <td>7.566667</td>\n","      <td>7.887500</td>\n","      <td>8.047500</td>\n","      <td>8.102500</td>\n","      <td>7.910001</td>\n","      <td>7.886667</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 20:00:00</th>\n","      <td>8.315000</td>\n","      <td>7.739167</td>\n","      <td>8.10625</td>\n","      <td>7.560833</td>\n","      <td>7.894167</td>\n","      <td>8.047500</td>\n","      <td>8.117500</td>\n","      <td>7.910001</td>\n","      <td>7.890000</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 21:00:00</th>\n","      <td>8.315000</td>\n","      <td>7.742500</td>\n","      <td>8.10625</td>\n","      <td>7.564167</td>\n","      <td>7.900000</td>\n","      <td>8.047500</td>\n","      <td>8.120000</td>\n","      <td>7.910001</td>\n","      <td>7.890000</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 22:00:00</th>\n","      <td>8.315000</td>\n","      <td>7.750000</td>\n","      <td>8.10625</td>\n","      <td>7.577500</td>\n","      <td>7.900000</td>\n","      <td>8.047500</td>\n","      <td>8.117500</td>\n","      <td>7.910001</td>\n","      <td>7.880833</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 23:00:00</th>\n","      <td>8.315000</td>\n","      <td>7.759167</td>\n","      <td>8.10625</td>\n","      <td>7.580000</td>\n","      <td>7.899167</td>\n","      <td>8.047500</td>\n","      <td>8.104166</td>\n","      <td>7.910001</td>\n","      <td>7.880000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2233 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fb77263-c4d7-4bf0-9b6c-acb71cc038f0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8fb77263-c4d7-4bf0-9b6c-acb71cc038f0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8fb77263-c4d7-4bf0-9b6c-acb71cc038f0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["river_flow_2018_winter.to_csv(\"pH2018Winter.csv\")\n","river_flow_2019_winter.to_csv(\"pH2019Winter.csv\")\n","river_flow_2020_winter.to_csv(\"pH2020Winter.csv\")\n","river_flow_2021_winter.to_csv(\"pH2021Winter.csv\")\n","river_flow_2022_winter.to_csv(\"pH2022Winter.csv\")"],"metadata":{"id":"UjkEfkHvzziZ","executionInfo":{"status":"ok","timestamp":1688065064880,"user_tz":240,"elapsed":422,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["download = files.download(\"pH2018Winter.csv\")\n","download = files.download(\"pH2019Winter.csv\")\n","download = files.download(\"pH2020Winter.csv\")\n","download = files.download(\"pH2021Winter.csv\")\n","download = files.download(\"pH2022Winter.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"bgtjYd_qz-p1","executionInfo":{"status":"ok","timestamp":1688065145395,"user_tz":240,"elapsed":186,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"c69d6956-2993-41ec-d7c4-cf1fe98071a8"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_9fff6918-a857-4a39-b6df-77b5072332bd\", \"pH2018Winter.csv\", 535185)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_38b70a7a-cc62-4426-8e4b-91634f615779\", \"pH2019Winter.csv\", 560345)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_a06c04e7-8a98-491f-9b2e-017e318c2678\", \"pH2020Winter.csv\", 636975)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_d5851b85-5381-401e-981d-6382ca28b9c7\", \"pH2021Winter.csv\", 568424)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_e92c10ed-7692-4f2c-a120-bb2cb4ed3310\", \"pH2022Winter.csv\", 240969)"]},"metadata":{}}]},{"cell_type":"markdown","source":["# **Summer Files Conductivity**"],"metadata":{"id":"sndvL1r61Gyv"}},{"cell_type":"code","source":["rainfall = pd.read_csv(\"Conductivity_noNA.csv\")\n","rainfall"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"QiTz1i-T00mR","executionInfo":{"status":"ok","timestamp":1688068721136,"user_tz":240,"elapsed":199,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"25b70cdf-1efb-4d07-d442-8d952d95e01e"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Timestamp  Below Shand        Blair        Brant  Bridgeport  \\\n","0      2018-01-01 00:00:00   563.775551  1075.042832  1075.000000  755.916667   \n","1      2018-01-01 01:00:00   564.275313  1091.036884  1075.000000  756.750000   \n","2      2018-01-01 02:00:00   564.275075  1098.530936  1075.833333  757.916667   \n","3      2018-01-01 03:00:00   564.274837  1098.524988  1077.666667  758.000000   \n","4      2018-01-01 04:00:00   564.274599  1095.519040  1080.250000  758.000000   \n","...                    ...          ...          ...          ...         ...   \n","43843  2023-01-01 19:00:00   459.190833   728.329167  1370.605000  925.060000   \n","43844  2023-01-01 20:00:00   458.920000   732.067500  1370.605000  925.060000   \n","43845  2023-01-01 21:00:00   458.841667   737.284167  1370.605000  925.060000   \n","43846  2023-01-01 22:00:00   458.364167   741.144167  1370.605000  925.060000   \n","43847  2023-01-01 23:00:00   457.371667   743.047500  1370.605000  925.060000   \n","\n","       Glen Morris  Breslau Victoria       Road32         York      Hanlon  \n","0      1100.610445        942.500000  1069.115000  2470.368537  699.126677  \n","1      1112.100710        945.250000  1064.530833  2471.173100  703.625242  \n","2      1122.590974        951.416667  1080.650000  2471.087783  707.623807  \n","3      1131.081238        954.333333  1115.093333  2470.862585  710.122371  \n","4      1138.071503        954.000000  1156.461667  2471.561990  712.120936  \n","...            ...               ...          ...          ...         ...  \n","43843   804.971607       1773.162500   887.349167  1490.550000  684.726667  \n","43844   783.938273       1773.162500   883.860833  1490.550000  680.866667  \n","43845   766.382440       1773.162500   889.647500  1490.550000  677.042500  \n","43846   751.204940       1773.162500   900.971667  1490.550000  674.933333  \n","43847   737.352440       1773.162500   914.252500  1490.550000  672.905833  \n","\n","[43848 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-3628a287-9d5a-48e1-b2e2-cb521d8a6463\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01 00:00:00</td>\n","      <td>563.775551</td>\n","      <td>1075.042832</td>\n","      <td>1075.000000</td>\n","      <td>755.916667</td>\n","      <td>1100.610445</td>\n","      <td>942.500000</td>\n","      <td>1069.115000</td>\n","      <td>2470.368537</td>\n","      <td>699.126677</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-01 01:00:00</td>\n","      <td>564.275313</td>\n","      <td>1091.036884</td>\n","      <td>1075.000000</td>\n","      <td>756.750000</td>\n","      <td>1112.100710</td>\n","      <td>945.250000</td>\n","      <td>1064.530833</td>\n","      <td>2471.173100</td>\n","      <td>703.625242</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-01 02:00:00</td>\n","      <td>564.275075</td>\n","      <td>1098.530936</td>\n","      <td>1075.833333</td>\n","      <td>757.916667</td>\n","      <td>1122.590974</td>\n","      <td>951.416667</td>\n","      <td>1080.650000</td>\n","      <td>2471.087783</td>\n","      <td>707.623807</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-01 03:00:00</td>\n","      <td>564.274837</td>\n","      <td>1098.524988</td>\n","      <td>1077.666667</td>\n","      <td>758.000000</td>\n","      <td>1131.081238</td>\n","      <td>954.333333</td>\n","      <td>1115.093333</td>\n","      <td>2470.862585</td>\n","      <td>710.122371</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-01 04:00:00</td>\n","      <td>564.274599</td>\n","      <td>1095.519040</td>\n","      <td>1080.250000</td>\n","      <td>758.000000</td>\n","      <td>1138.071503</td>\n","      <td>954.000000</td>\n","      <td>1156.461667</td>\n","      <td>2471.561990</td>\n","      <td>712.120936</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>43843</th>\n","      <td>2023-01-01 19:00:00</td>\n","      <td>459.190833</td>\n","      <td>728.329167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>804.971607</td>\n","      <td>1773.162500</td>\n","      <td>887.349167</td>\n","      <td>1490.550000</td>\n","      <td>684.726667</td>\n","    </tr>\n","    <tr>\n","      <th>43844</th>\n","      <td>2023-01-01 20:00:00</td>\n","      <td>458.920000</td>\n","      <td>732.067500</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>783.938273</td>\n","      <td>1773.162500</td>\n","      <td>883.860833</td>\n","      <td>1490.550000</td>\n","      <td>680.866667</td>\n","    </tr>\n","    <tr>\n","      <th>43845</th>\n","      <td>2023-01-01 21:00:00</td>\n","      <td>458.841667</td>\n","      <td>737.284167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>766.382440</td>\n","      <td>1773.162500</td>\n","      <td>889.647500</td>\n","      <td>1490.550000</td>\n","      <td>677.042500</td>\n","    </tr>\n","    <tr>\n","      <th>43846</th>\n","      <td>2023-01-01 22:00:00</td>\n","      <td>458.364167</td>\n","      <td>741.144167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>751.204940</td>\n","      <td>1773.162500</td>\n","      <td>900.971667</td>\n","      <td>1490.550000</td>\n","      <td>674.933333</td>\n","    </tr>\n","    <tr>\n","      <th>43847</th>\n","      <td>2023-01-01 23:00:00</td>\n","      <td>457.371667</td>\n","      <td>743.047500</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>737.352440</td>\n","      <td>1773.162500</td>\n","      <td>914.252500</td>\n","      <td>1490.550000</td>\n","      <td>672.905833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43848 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3628a287-9d5a-48e1-b2e2-cb521d8a6463')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3628a287-9d5a-48e1-b2e2-cb521d8a6463 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3628a287-9d5a-48e1-b2e2-cb521d8a6463');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["rainfall.set_index(\"Timestamp\", inplace= True)\n","rainfall"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"K1UQorlf1TtJ","executionInfo":{"status":"ok","timestamp":1688068723569,"user_tz":240,"elapsed":181,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"a79a2c82-85e9-409a-a418-c3242794dddf"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand        Blair        Brant  Bridgeport  \\\n","Timestamp                                                                \n","2018-01-01 00:00:00   563.775551  1075.042832  1075.000000  755.916667   \n","2018-01-01 01:00:00   564.275313  1091.036884  1075.000000  756.750000   \n","2018-01-01 02:00:00   564.275075  1098.530936  1075.833333  757.916667   \n","2018-01-01 03:00:00   564.274837  1098.524988  1077.666667  758.000000   \n","2018-01-01 04:00:00   564.274599  1095.519040  1080.250000  758.000000   \n","...                          ...          ...          ...         ...   \n","2023-01-01 19:00:00   459.190833   728.329167  1370.605000  925.060000   \n","2023-01-01 20:00:00   458.920000   732.067500  1370.605000  925.060000   \n","2023-01-01 21:00:00   458.841667   737.284167  1370.605000  925.060000   \n","2023-01-01 22:00:00   458.364167   741.144167  1370.605000  925.060000   \n","2023-01-01 23:00:00   457.371667   743.047500  1370.605000  925.060000   \n","\n","                     Glen Morris  Breslau Victoria       Road32         York  \\\n","Timestamp                                                                      \n","2018-01-01 00:00:00  1100.610445        942.500000  1069.115000  2470.368537   \n","2018-01-01 01:00:00  1112.100710        945.250000  1064.530833  2471.173100   \n","2018-01-01 02:00:00  1122.590974        951.416667  1080.650000  2471.087783   \n","2018-01-01 03:00:00  1131.081238        954.333333  1115.093333  2470.862585   \n","2018-01-01 04:00:00  1138.071503        954.000000  1156.461667  2471.561990   \n","...                          ...               ...          ...          ...   \n","2023-01-01 19:00:00   804.971607       1773.162500   887.349167  1490.550000   \n","2023-01-01 20:00:00   783.938273       1773.162500   883.860833  1490.550000   \n","2023-01-01 21:00:00   766.382440       1773.162500   889.647500  1490.550000   \n","2023-01-01 22:00:00   751.204940       1773.162500   900.971667  1490.550000   \n","2023-01-01 23:00:00   737.352440       1773.162500   914.252500  1490.550000   \n","\n","                         Hanlon  \n","Timestamp                        \n","2018-01-01 00:00:00  699.126677  \n","2018-01-01 01:00:00  703.625242  \n","2018-01-01 02:00:00  707.623807  \n","2018-01-01 03:00:00  710.122371  \n","2018-01-01 04:00:00  712.120936  \n","...                         ...  \n","2023-01-01 19:00:00  684.726667  \n","2023-01-01 20:00:00  680.866667  \n","2023-01-01 21:00:00  677.042500  \n","2023-01-01 22:00:00  674.933333  \n","2023-01-01 23:00:00  672.905833  \n","\n","[43848 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-453f6660-7ba4-4124-931c-e2a87545c40d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01 00:00:00</th>\n","      <td>563.775551</td>\n","      <td>1075.042832</td>\n","      <td>1075.000000</td>\n","      <td>755.916667</td>\n","      <td>1100.610445</td>\n","      <td>942.500000</td>\n","      <td>1069.115000</td>\n","      <td>2470.368537</td>\n","      <td>699.126677</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 01:00:00</th>\n","      <td>564.275313</td>\n","      <td>1091.036884</td>\n","      <td>1075.000000</td>\n","      <td>756.750000</td>\n","      <td>1112.100710</td>\n","      <td>945.250000</td>\n","      <td>1064.530833</td>\n","      <td>2471.173100</td>\n","      <td>703.625242</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 02:00:00</th>\n","      <td>564.275075</td>\n","      <td>1098.530936</td>\n","      <td>1075.833333</td>\n","      <td>757.916667</td>\n","      <td>1122.590974</td>\n","      <td>951.416667</td>\n","      <td>1080.650000</td>\n","      <td>2471.087783</td>\n","      <td>707.623807</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 03:00:00</th>\n","      <td>564.274837</td>\n","      <td>1098.524988</td>\n","      <td>1077.666667</td>\n","      <td>758.000000</td>\n","      <td>1131.081238</td>\n","      <td>954.333333</td>\n","      <td>1115.093333</td>\n","      <td>2470.862585</td>\n","      <td>710.122371</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 04:00:00</th>\n","      <td>564.274599</td>\n","      <td>1095.519040</td>\n","      <td>1080.250000</td>\n","      <td>758.000000</td>\n","      <td>1138.071503</td>\n","      <td>954.000000</td>\n","      <td>1156.461667</td>\n","      <td>2471.561990</td>\n","      <td>712.120936</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 19:00:00</th>\n","      <td>459.190833</td>\n","      <td>728.329167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>804.971607</td>\n","      <td>1773.162500</td>\n","      <td>887.349167</td>\n","      <td>1490.550000</td>\n","      <td>684.726667</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 20:00:00</th>\n","      <td>458.920000</td>\n","      <td>732.067500</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>783.938273</td>\n","      <td>1773.162500</td>\n","      <td>883.860833</td>\n","      <td>1490.550000</td>\n","      <td>680.866667</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 21:00:00</th>\n","      <td>458.841667</td>\n","      <td>737.284167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>766.382440</td>\n","      <td>1773.162500</td>\n","      <td>889.647500</td>\n","      <td>1490.550000</td>\n","      <td>677.042500</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 22:00:00</th>\n","      <td>458.364167</td>\n","      <td>741.144167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>751.204940</td>\n","      <td>1773.162500</td>\n","      <td>900.971667</td>\n","      <td>1490.550000</td>\n","      <td>674.933333</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 23:00:00</th>\n","      <td>457.371667</td>\n","      <td>743.047500</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>737.352440</td>\n","      <td>1773.162500</td>\n","      <td>914.252500</td>\n","      <td>1490.550000</td>\n","      <td>672.905833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43848 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-453f6660-7ba4-4124-931c-e2a87545c40d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-453f6660-7ba4-4124-931c-e2a87545c40d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-453f6660-7ba4-4124-931c-e2a87545c40d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["rainfall_2018_summer = rainfall[(rainfall.index >= '2018-04-15 00:00:00') & (rainfall.index < '2018-10-01 00:00:00')]\n","rainfall_2018_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Thf8gnNV1ZgJ","executionInfo":{"status":"ok","timestamp":1688068727010,"user_tz":240,"elapsed":181,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"9d9631d1-3b95-43bc-c248-465601b04fc3"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2018-04-15 00:00:00   310.401687  729.739475  721.166667  469.416667   \n","2018-04-15 01:00:00   310.485845  690.242312  714.833333  464.916667   \n","2018-04-15 02:00:00   310.570004  653.245149  713.916667  460.333333   \n","2018-04-15 03:00:00   310.654163  623.247985  711.916667  457.000000   \n","2018-04-15 04:00:00   310.738321  600.250822  710.166667  455.000000   \n","...                          ...         ...         ...         ...   \n","2018-09-30 19:00:00   352.000000  727.500000  822.460833  386.000000   \n","2018-09-30 20:00:00   352.000000  742.583333  828.178333  386.333333   \n","2018-09-30 21:00:00   352.000000  757.416667  820.177500  387.166667   \n","2018-09-30 22:00:00   352.000000  771.833333  808.583333  389.000000   \n","2018-09-30 23:00:00   352.000000  784.583333  807.677500  391.000000   \n","\n","                     Glen Morris  Breslau Victoria      Road32         York  \\\n","Timestamp                                                                     \n","2018-04-15 00:00:00   723.528317        463.583333  772.392500   795.670708   \n","2018-04-15 01:00:00   732.544392        454.000000  758.520833   797.214907   \n","2018-04-15 02:00:00   713.060466        448.583333  736.212500   797.275774   \n","2018-04-15 03:00:00   695.076540        443.416667  708.060000   797.115235   \n","2018-04-15 04:00:00   696.092615        439.833333  681.689167   796.024094   \n","...                          ...               ...         ...          ...   \n","2018-09-30 19:00:00   771.000000        517.833333  925.450000  1058.488815   \n","2018-09-30 20:00:00   772.000000        518.000000  902.200000  1036.869613   \n","2018-09-30 21:00:00   773.000000        518.000000  883.792500  1019.879578   \n","2018-09-30 22:00:00   778.000000        518.000000  869.045833  1020.676210   \n","2018-09-30 23:00:00   784.000000        518.000000  859.579167   981.090341   \n","\n","                         Hanlon  \n","Timestamp                        \n","2018-04-15 00:00:00  583.943411  \n","2018-04-15 01:00:00  583.436461  \n","2018-04-15 02:00:00  583.929512  \n","2018-04-15 03:00:00  583.922562  \n","2018-04-15 04:00:00  578.915612  \n","...                         ...  \n","2018-09-30 19:00:00  558.541667  \n","2018-09-30 20:00:00  558.563433  \n","2018-09-30 21:00:00  558.585199  \n","2018-09-30 22:00:00  558.606965  \n","2018-09-30 23:00:00  558.628731  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-4c7c2301-dd64-4060-a4fa-2ce2848cdfd7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-04-15 00:00:00</th>\n","      <td>310.401687</td>\n","      <td>729.739475</td>\n","      <td>721.166667</td>\n","      <td>469.416667</td>\n","      <td>723.528317</td>\n","      <td>463.583333</td>\n","      <td>772.392500</td>\n","      <td>795.670708</td>\n","      <td>583.943411</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 01:00:00</th>\n","      <td>310.485845</td>\n","      <td>690.242312</td>\n","      <td>714.833333</td>\n","      <td>464.916667</td>\n","      <td>732.544392</td>\n","      <td>454.000000</td>\n","      <td>758.520833</td>\n","      <td>797.214907</td>\n","      <td>583.436461</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 02:00:00</th>\n","      <td>310.570004</td>\n","      <td>653.245149</td>\n","      <td>713.916667</td>\n","      <td>460.333333</td>\n","      <td>713.060466</td>\n","      <td>448.583333</td>\n","      <td>736.212500</td>\n","      <td>797.275774</td>\n","      <td>583.929512</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 03:00:00</th>\n","      <td>310.654163</td>\n","      <td>623.247985</td>\n","      <td>711.916667</td>\n","      <td>457.000000</td>\n","      <td>695.076540</td>\n","      <td>443.416667</td>\n","      <td>708.060000</td>\n","      <td>797.115235</td>\n","      <td>583.922562</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 04:00:00</th>\n","      <td>310.738321</td>\n","      <td>600.250822</td>\n","      <td>710.166667</td>\n","      <td>455.000000</td>\n","      <td>696.092615</td>\n","      <td>439.833333</td>\n","      <td>681.689167</td>\n","      <td>796.024094</td>\n","      <td>578.915612</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 19:00:00</th>\n","      <td>352.000000</td>\n","      <td>727.500000</td>\n","      <td>822.460833</td>\n","      <td>386.000000</td>\n","      <td>771.000000</td>\n","      <td>517.833333</td>\n","      <td>925.450000</td>\n","      <td>1058.488815</td>\n","      <td>558.541667</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 20:00:00</th>\n","      <td>352.000000</td>\n","      <td>742.583333</td>\n","      <td>828.178333</td>\n","      <td>386.333333</td>\n","      <td>772.000000</td>\n","      <td>518.000000</td>\n","      <td>902.200000</td>\n","      <td>1036.869613</td>\n","      <td>558.563433</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 21:00:00</th>\n","      <td>352.000000</td>\n","      <td>757.416667</td>\n","      <td>820.177500</td>\n","      <td>387.166667</td>\n","      <td>773.000000</td>\n","      <td>518.000000</td>\n","      <td>883.792500</td>\n","      <td>1019.879578</td>\n","      <td>558.585199</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 22:00:00</th>\n","      <td>352.000000</td>\n","      <td>771.833333</td>\n","      <td>808.583333</td>\n","      <td>389.000000</td>\n","      <td>778.000000</td>\n","      <td>518.000000</td>\n","      <td>869.045833</td>\n","      <td>1020.676210</td>\n","      <td>558.606965</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 23:00:00</th>\n","      <td>352.000000</td>\n","      <td>784.583333</td>\n","      <td>807.677500</td>\n","      <td>391.000000</td>\n","      <td>784.000000</td>\n","      <td>518.000000</td>\n","      <td>859.579167</td>\n","      <td>981.090341</td>\n","      <td>558.628731</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c7c2301-dd64-4060-a4fa-2ce2848cdfd7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4c7c2301-dd64-4060-a4fa-2ce2848cdfd7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4c7c2301-dd64-4060-a4fa-2ce2848cdfd7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["rainfall_2019_summer = rainfall[(rainfall.index >= '2019-04-15 00:00:00') & (rainfall.index < '2019-10-01 00:00:00')]\n","rainfall_2019_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"6KHvAZMf10hf","executionInfo":{"status":"ok","timestamp":1688068727385,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"d1f1b54d-32f1-41ac-94de-d356e807ca35"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2019-04-15 00:00:00   335.000000  603.666667  608.245000  438.583333   \n","2019-04-15 01:00:00   333.000000  603.833333  605.815233  438.000000   \n","2019-04-15 02:00:00   327.000000  610.166667  603.896667  438.666667   \n","2019-04-15 03:00:00   328.000000  610.333333  601.496667  441.250000   \n","2019-04-15 04:00:00   327.000000  616.083333  601.268333  443.833333   \n","...                          ...         ...         ...         ...   \n","2019-09-30 19:00:00   399.079470  790.100833  876.063333  480.472500   \n","2019-09-30 20:00:00   398.986755  800.884167  870.050833  474.472500   \n","2019-09-30 21:00:00   398.894040  808.420000  868.230000  473.932500   \n","2019-09-30 22:00:00   398.801325  812.335833  868.408333  471.980833   \n","2019-09-30 23:00:00   398.708609  815.502500  867.534167  474.005000   \n","\n","                     Glen Morris  Breslau Victoria       Road32        York  \\\n","Timestamp                                                                     \n","2019-04-15 00:00:00   543.677520        466.000000   595.290833  621.857825   \n","2019-04-15 01:00:00   546.009187        465.416667   588.669167  619.818339   \n","2019-04-15 02:00:00   551.679187        465.666667   586.567500  604.073854   \n","2019-04-15 03:00:00   557.705853        469.833333   578.047500  566.581034   \n","2019-04-15 04:00:00   563.865853        485.416667   567.060833  555.525716   \n","...                          ...               ...          ...         ...   \n","2019-09-30 19:00:00   797.899137        633.016667  1059.762500  891.608869   \n","2019-09-30 20:00:00   798.362470        628.174167  1020.171667  885.189511   \n","2019-09-30 21:00:00   802.620803        622.062500   989.829167  881.678486   \n","2019-09-30 22:00:00   811.244970        616.579167   972.799167  881.501628   \n","2019-09-30 23:00:00   823.795803        616.909167   964.540000  885.788937   \n","\n","                         Hanlon  \n","Timestamp                        \n","2019-04-15 00:00:00  529.833333  \n","2019-04-15 01:00:00  521.666667  \n","2019-04-15 02:00:00  519.083333  \n","2019-04-15 03:00:00  517.166667  \n","2019-04-15 04:00:00  523.083333  \n","...                         ...  \n","2019-09-30 19:00:00  592.370000  \n","2019-09-30 20:00:00  592.176667  \n","2019-09-30 21:00:00  589.514167  \n","2019-09-30 22:00:00  592.761667  \n","2019-09-30 23:00:00  594.065000  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-079a387f-390d-4ab1-b209-d98478a95cb5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-04-15 00:00:00</th>\n","      <td>335.000000</td>\n","      <td>603.666667</td>\n","      <td>608.245000</td>\n","      <td>438.583333</td>\n","      <td>543.677520</td>\n","      <td>466.000000</td>\n","      <td>595.290833</td>\n","      <td>621.857825</td>\n","      <td>529.833333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 01:00:00</th>\n","      <td>333.000000</td>\n","      <td>603.833333</td>\n","      <td>605.815233</td>\n","      <td>438.000000</td>\n","      <td>546.009187</td>\n","      <td>465.416667</td>\n","      <td>588.669167</td>\n","      <td>619.818339</td>\n","      <td>521.666667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 02:00:00</th>\n","      <td>327.000000</td>\n","      <td>610.166667</td>\n","      <td>603.896667</td>\n","      <td>438.666667</td>\n","      <td>551.679187</td>\n","      <td>465.666667</td>\n","      <td>586.567500</td>\n","      <td>604.073854</td>\n","      <td>519.083333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 03:00:00</th>\n","      <td>328.000000</td>\n","      <td>610.333333</td>\n","      <td>601.496667</td>\n","      <td>441.250000</td>\n","      <td>557.705853</td>\n","      <td>469.833333</td>\n","      <td>578.047500</td>\n","      <td>566.581034</td>\n","      <td>517.166667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 04:00:00</th>\n","      <td>327.000000</td>\n","      <td>616.083333</td>\n","      <td>601.268333</td>\n","      <td>443.833333</td>\n","      <td>563.865853</td>\n","      <td>485.416667</td>\n","      <td>567.060833</td>\n","      <td>555.525716</td>\n","      <td>523.083333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 19:00:00</th>\n","      <td>399.079470</td>\n","      <td>790.100833</td>\n","      <td>876.063333</td>\n","      <td>480.472500</td>\n","      <td>797.899137</td>\n","      <td>633.016667</td>\n","      <td>1059.762500</td>\n","      <td>891.608869</td>\n","      <td>592.370000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 20:00:00</th>\n","      <td>398.986755</td>\n","      <td>800.884167</td>\n","      <td>870.050833</td>\n","      <td>474.472500</td>\n","      <td>798.362470</td>\n","      <td>628.174167</td>\n","      <td>1020.171667</td>\n","      <td>885.189511</td>\n","      <td>592.176667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 21:00:00</th>\n","      <td>398.894040</td>\n","      <td>808.420000</td>\n","      <td>868.230000</td>\n","      <td>473.932500</td>\n","      <td>802.620803</td>\n","      <td>622.062500</td>\n","      <td>989.829167</td>\n","      <td>881.678486</td>\n","      <td>589.514167</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 22:00:00</th>\n","      <td>398.801325</td>\n","      <td>812.335833</td>\n","      <td>868.408333</td>\n","      <td>471.980833</td>\n","      <td>811.244970</td>\n","      <td>616.579167</td>\n","      <td>972.799167</td>\n","      <td>881.501628</td>\n","      <td>592.761667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 23:00:00</th>\n","      <td>398.708609</td>\n","      <td>815.502500</td>\n","      <td>867.534167</td>\n","      <td>474.005000</td>\n","      <td>823.795803</td>\n","      <td>616.909167</td>\n","      <td>964.540000</td>\n","      <td>885.788937</td>\n","      <td>594.065000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-079a387f-390d-4ab1-b209-d98478a95cb5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-079a387f-390d-4ab1-b209-d98478a95cb5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-079a387f-390d-4ab1-b209-d98478a95cb5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["rainfall_2020_summer = rainfall[(rainfall.index >= '2020-04-15 00:00:00') & (rainfall.index < '2020-10-01 00:00:00')]\n","rainfall_2020_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"ml6nN2iO13cZ","executionInfo":{"status":"ok","timestamp":1688068727772,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"f6bdbb01-4739-4b01-e2b9-63072ff5e7fe"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2020-04-15 00:00:00   425.000000  761.456667  740.610000  656.634167   \n","2020-04-15 01:00:00   426.000000  762.669167  742.599167  656.552500   \n","2020-04-15 02:00:00   426.000000  765.143333  745.304167  656.643333   \n","2020-04-15 03:00:00   426.000000  769.125833  748.310833  656.771667   \n","2020-04-15 04:00:00   426.000000  773.437500  750.766667  656.644167   \n","...                          ...         ...         ...         ...   \n","2020-09-30 19:00:00   442.230895  347.712333  731.947500   90.580000   \n","2020-09-30 20:00:00   442.212814  347.826372  729.074167   90.580000   \n","2020-09-30 21:00:00   442.194732  347.940411  724.820833   90.580000   \n","2020-09-30 22:00:00   442.176651  348.054450  719.927500   90.580000   \n","2020-09-30 23:00:00   442.158570  348.168489  720.859167   90.580000   \n","\n","                     Glen Morris  Breslau Victoria      Road32        York  \\\n","Timestamp                                                                    \n","2020-04-15 00:00:00   766.322510       1026.770833  684.408612  780.299167   \n","2020-04-15 01:00:00   766.366677       1027.227500  684.472863  780.330000   \n","2020-04-15 02:00:00   766.440010       1027.501667  684.537114  778.612500   \n","2020-04-15 03:00:00   766.217510       1027.784167  684.601364  776.440000   \n","2020-04-15 04:00:00   766.197510       1027.909167  684.665615  775.003333   \n","...                          ...               ...         ...         ...   \n","2020-09-30 19:00:00   612.370010        492.271687  944.688361  846.588395   \n","2020-09-30 20:00:00   610.113343        492.470715  944.752612  846.544495   \n","2020-09-30 21:00:00   611.523343        492.669742  944.816863  846.500596   \n","2020-09-30 22:00:00   613.320843        492.868770  944.881113  846.456697   \n","2020-09-30 23:00:00   618.955010        493.067798  944.945364  846.412798   \n","\n","                         Hanlon  \n","Timestamp                        \n","2020-04-15 00:00:00  597.110000  \n","2020-04-15 01:00:00  598.744167  \n","2020-04-15 02:00:00  599.162500  \n","2020-04-15 03:00:00  600.810000  \n","2020-04-15 04:00:00  600.779167  \n","...                         ...  \n","2020-09-30 19:00:00  626.917699  \n","2020-09-30 20:00:00  626.915576  \n","2020-09-30 21:00:00  626.913454  \n","2020-09-30 22:00:00  626.911331  \n","2020-09-30 23:00:00  626.909208  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-07ccb18d-b40c-405c-aad3-771c9fa6bdf4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-04-15 00:00:00</th>\n","      <td>425.000000</td>\n","      <td>761.456667</td>\n","      <td>740.610000</td>\n","      <td>656.634167</td>\n","      <td>766.322510</td>\n","      <td>1026.770833</td>\n","      <td>684.408612</td>\n","      <td>780.299167</td>\n","      <td>597.110000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 01:00:00</th>\n","      <td>426.000000</td>\n","      <td>762.669167</td>\n","      <td>742.599167</td>\n","      <td>656.552500</td>\n","      <td>766.366677</td>\n","      <td>1027.227500</td>\n","      <td>684.472863</td>\n","      <td>780.330000</td>\n","      <td>598.744167</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 02:00:00</th>\n","      <td>426.000000</td>\n","      <td>765.143333</td>\n","      <td>745.304167</td>\n","      <td>656.643333</td>\n","      <td>766.440010</td>\n","      <td>1027.501667</td>\n","      <td>684.537114</td>\n","      <td>778.612500</td>\n","      <td>599.162500</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 03:00:00</th>\n","      <td>426.000000</td>\n","      <td>769.125833</td>\n","      <td>748.310833</td>\n","      <td>656.771667</td>\n","      <td>766.217510</td>\n","      <td>1027.784167</td>\n","      <td>684.601364</td>\n","      <td>776.440000</td>\n","      <td>600.810000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 04:00:00</th>\n","      <td>426.000000</td>\n","      <td>773.437500</td>\n","      <td>750.766667</td>\n","      <td>656.644167</td>\n","      <td>766.197510</td>\n","      <td>1027.909167</td>\n","      <td>684.665615</td>\n","      <td>775.003333</td>\n","      <td>600.779167</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 19:00:00</th>\n","      <td>442.230895</td>\n","      <td>347.712333</td>\n","      <td>731.947500</td>\n","      <td>90.580000</td>\n","      <td>612.370010</td>\n","      <td>492.271687</td>\n","      <td>944.688361</td>\n","      <td>846.588395</td>\n","      <td>626.917699</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 20:00:00</th>\n","      <td>442.212814</td>\n","      <td>347.826372</td>\n","      <td>729.074167</td>\n","      <td>90.580000</td>\n","      <td>610.113343</td>\n","      <td>492.470715</td>\n","      <td>944.752612</td>\n","      <td>846.544495</td>\n","      <td>626.915576</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 21:00:00</th>\n","      <td>442.194732</td>\n","      <td>347.940411</td>\n","      <td>724.820833</td>\n","      <td>90.580000</td>\n","      <td>611.523343</td>\n","      <td>492.669742</td>\n","      <td>944.816863</td>\n","      <td>846.500596</td>\n","      <td>626.913454</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 22:00:00</th>\n","      <td>442.176651</td>\n","      <td>348.054450</td>\n","      <td>719.927500</td>\n","      <td>90.580000</td>\n","      <td>613.320843</td>\n","      <td>492.868770</td>\n","      <td>944.881113</td>\n","      <td>846.456697</td>\n","      <td>626.911331</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 23:00:00</th>\n","      <td>442.158570</td>\n","      <td>348.168489</td>\n","      <td>720.859167</td>\n","      <td>90.580000</td>\n","      <td>618.955010</td>\n","      <td>493.067798</td>\n","      <td>944.945364</td>\n","      <td>846.412798</td>\n","      <td>626.909208</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07ccb18d-b40c-405c-aad3-771c9fa6bdf4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-07ccb18d-b40c-405c-aad3-771c9fa6bdf4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-07ccb18d-b40c-405c-aad3-771c9fa6bdf4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["rainfall_2021_summer = rainfall[(rainfall.index >= '2021-04-15 00:00:00') & (rainfall.index < '2021-10-01 00:00:00')]\n","rainfall_2021_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"W1816NmM16-u","executionInfo":{"status":"ok","timestamp":1688068728221,"user_tz":240,"elapsed":242,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"705c784a-0b53-432a-ff8c-812891e75c24"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2021-04-15 00:00:00   399.438333  757.540000  664.592500  616.090000   \n","2021-04-15 01:00:00   403.876667  761.363333  665.790833  615.633333   \n","2021-04-15 02:00:00   405.898333  766.795833  666.255000  615.676667   \n","2021-04-15 03:00:00   407.134167  771.543333  669.365833  616.262500   \n","2021-04-15 04:00:00   407.320000  775.892500  671.651667  617.411667   \n","...                          ...         ...         ...         ...   \n","2021-09-30 19:00:00   429.265000  626.881667  697.928333  521.730833   \n","2021-09-30 20:00:00   431.621667  626.148333  699.161667  520.490000   \n","2021-09-30 21:00:00   432.002500  625.275000  701.063333  519.360000   \n","2021-09-30 22:00:00   437.373333  625.519167  702.660000  518.343333   \n","2021-09-30 23:00:00   442.698333  628.182500  703.799167  518.080833   \n","\n","                     Glen Morris  Breslau Victoria      Road32        York  \\\n","Timestamp                                                                    \n","2021-04-15 00:00:00   718.595833        672.882500  840.520833  773.862019   \n","2021-04-15 01:00:00   720.420833        671.560833  844.490833  774.051112   \n","2021-04-15 02:00:00   721.655000        671.804167  847.598333  774.185205   \n","2021-04-15 03:00:00   722.190000        671.769167  846.052500  774.243465   \n","2021-04-15 04:00:00   723.168333        675.325833  842.192500  774.213391   \n","...                          ...               ...         ...         ...   \n","2021-09-30 19:00:00   626.824990       1012.081667  948.024167  658.492063   \n","2021-09-30 20:00:00   628.184990        869.309167  942.245000  659.915423   \n","2021-09-30 21:00:00   631.089990       1045.623333  949.870833  661.230448   \n","2021-09-30 22:00:00   633.409990        808.315000  973.320833  662.642974   \n","2021-09-30 23:00:00   635.519990       1004.025833  998.835833  664.013000   \n","\n","                         Hanlon  \n","Timestamp                        \n","2021-04-15 00:00:00  617.218333  \n","2021-04-15 01:00:00  616.345000  \n","2021-04-15 02:00:00  615.680000  \n","2021-04-15 03:00:00  614.788333  \n","2021-04-15 04:00:00  614.398333  \n","...                         ...  \n","2021-09-30 19:00:00  611.666667  \n","2021-09-30 20:00:00  611.720000  \n","2021-09-30 21:00:00  613.822500  \n","2021-09-30 22:00:00  615.575833  \n","2021-09-30 23:00:00  617.652500  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-941f2c16-130c-4280-ba7a-3a06ac263ce1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-15 00:00:00</th>\n","      <td>399.438333</td>\n","      <td>757.540000</td>\n","      <td>664.592500</td>\n","      <td>616.090000</td>\n","      <td>718.595833</td>\n","      <td>672.882500</td>\n","      <td>840.520833</td>\n","      <td>773.862019</td>\n","      <td>617.218333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 01:00:00</th>\n","      <td>403.876667</td>\n","      <td>761.363333</td>\n","      <td>665.790833</td>\n","      <td>615.633333</td>\n","      <td>720.420833</td>\n","      <td>671.560833</td>\n","      <td>844.490833</td>\n","      <td>774.051112</td>\n","      <td>616.345000</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 02:00:00</th>\n","      <td>405.898333</td>\n","      <td>766.795833</td>\n","      <td>666.255000</td>\n","      <td>615.676667</td>\n","      <td>721.655000</td>\n","      <td>671.804167</td>\n","      <td>847.598333</td>\n","      <td>774.185205</td>\n","      <td>615.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 03:00:00</th>\n","      <td>407.134167</td>\n","      <td>771.543333</td>\n","      <td>669.365833</td>\n","      <td>616.262500</td>\n","      <td>722.190000</td>\n","      <td>671.769167</td>\n","      <td>846.052500</td>\n","      <td>774.243465</td>\n","      <td>614.788333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 04:00:00</th>\n","      <td>407.320000</td>\n","      <td>775.892500</td>\n","      <td>671.651667</td>\n","      <td>617.411667</td>\n","      <td>723.168333</td>\n","      <td>675.325833</td>\n","      <td>842.192500</td>\n","      <td>774.213391</td>\n","      <td>614.398333</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 19:00:00</th>\n","      <td>429.265000</td>\n","      <td>626.881667</td>\n","      <td>697.928333</td>\n","      <td>521.730833</td>\n","      <td>626.824990</td>\n","      <td>1012.081667</td>\n","      <td>948.024167</td>\n","      <td>658.492063</td>\n","      <td>611.666667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 20:00:00</th>\n","      <td>431.621667</td>\n","      <td>626.148333</td>\n","      <td>699.161667</td>\n","      <td>520.490000</td>\n","      <td>628.184990</td>\n","      <td>869.309167</td>\n","      <td>942.245000</td>\n","      <td>659.915423</td>\n","      <td>611.720000</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 21:00:00</th>\n","      <td>432.002500</td>\n","      <td>625.275000</td>\n","      <td>701.063333</td>\n","      <td>519.360000</td>\n","      <td>631.089990</td>\n","      <td>1045.623333</td>\n","      <td>949.870833</td>\n","      <td>661.230448</td>\n","      <td>613.822500</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 22:00:00</th>\n","      <td>437.373333</td>\n","      <td>625.519167</td>\n","      <td>702.660000</td>\n","      <td>518.343333</td>\n","      <td>633.409990</td>\n","      <td>808.315000</td>\n","      <td>973.320833</td>\n","      <td>662.642974</td>\n","      <td>615.575833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 23:00:00</th>\n","      <td>442.698333</td>\n","      <td>628.182500</td>\n","      <td>703.799167</td>\n","      <td>518.080833</td>\n","      <td>635.519990</td>\n","      <td>1004.025833</td>\n","      <td>998.835833</td>\n","      <td>664.013000</td>\n","      <td>617.652500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-941f2c16-130c-4280-ba7a-3a06ac263ce1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-941f2c16-130c-4280-ba7a-3a06ac263ce1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-941f2c16-130c-4280-ba7a-3a06ac263ce1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["rainfall_2022_summer = rainfall[(rainfall.index >= '2022-04-15 00:00:00') & (rainfall.index < '2022-10-01 00:00:00')]\n","rainfall_2022_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"OC384yln1-nS","executionInfo":{"status":"ok","timestamp":1688068728618,"user_tz":240,"elapsed":196,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"0a1ea2f1-45af-4f40-c78e-15fb8ba2380b"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2022-04-15 00:00:00   403.578571  872.115000  745.970833  609.794167   \n","2022-04-15 01:00:00   403.536706  871.802500  749.409167  609.491667   \n","2022-04-15 02:00:00   403.494841  875.855000  753.615833  610.270833   \n","2022-04-15 03:00:00   403.452977  883.145000  759.086667  609.980833   \n","2022-04-15 04:00:00   403.411112  891.253333  764.684167  609.992500   \n","...                          ...         ...         ...         ...   \n","2022-09-30 19:00:00   357.040000  740.675000  865.246667  464.353333   \n","2022-09-30 20:00:00   357.773333  744.778333  854.725000  438.104167   \n","2022-09-30 21:00:00   358.864167  745.944167  673.593333  418.840833   \n","2022-09-30 22:00:00   360.130000  748.701667  856.811667  414.204167   \n","2022-09-30 23:00:00   360.953333  754.630000  795.252500  396.643333   \n","\n","                     Glen Morris  Breslau Victoria       Road32        York  \\\n","Timestamp                                                                     \n","2022-04-15 00:00:00   773.160050       1162.565000   861.470000  750.221667   \n","2022-04-15 01:00:00   777.443383       1162.944167   861.470000  753.842500   \n","2022-04-15 02:00:00   781.782550       1160.771667   861.470000  757.207500   \n","2022-04-15 03:00:00   785.044217       1158.824167   861.470000  760.017500   \n","2022-04-15 04:00:00   788.221717       1155.620833   861.470000  762.554167   \n","...                          ...               ...          ...         ...   \n","2022-09-30 19:00:00   752.023313        971.752500  1158.163333  883.090833   \n","2022-09-30 20:00:00   750.509147        965.610833  1128.521667  879.676667   \n","2022-09-30 21:00:00   750.871647        970.833333  1088.554167  876.473333   \n","2022-09-30 22:00:00   754.729147        966.456667  1043.940000  874.643333   \n","2022-09-30 23:00:00   762.600813        959.898333  1009.605000  874.504167   \n","\n","                         Hanlon  \n","Timestamp                        \n","2022-04-15 00:00:00  610.199167  \n","2022-04-15 01:00:00  610.775833  \n","2022-04-15 02:00:00  610.791667  \n","2022-04-15 03:00:00  610.606667  \n","2022-04-15 04:00:00  610.741667  \n","...                         ...  \n","2022-09-30 19:00:00  537.370833  \n","2022-09-30 20:00:00  533.579167  \n","2022-09-30 21:00:00  531.279167  \n","2022-09-30 22:00:00  531.714167  \n","2022-09-30 23:00:00  535.157500  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-a8aefcff-963b-410a-a0dc-27e97826446b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-04-15 00:00:00</th>\n","      <td>403.578571</td>\n","      <td>872.115000</td>\n","      <td>745.970833</td>\n","      <td>609.794167</td>\n","      <td>773.160050</td>\n","      <td>1162.565000</td>\n","      <td>861.470000</td>\n","      <td>750.221667</td>\n","      <td>610.199167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 01:00:00</th>\n","      <td>403.536706</td>\n","      <td>871.802500</td>\n","      <td>749.409167</td>\n","      <td>609.491667</td>\n","      <td>777.443383</td>\n","      <td>1162.944167</td>\n","      <td>861.470000</td>\n","      <td>753.842500</td>\n","      <td>610.775833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 02:00:00</th>\n","      <td>403.494841</td>\n","      <td>875.855000</td>\n","      <td>753.615833</td>\n","      <td>610.270833</td>\n","      <td>781.782550</td>\n","      <td>1160.771667</td>\n","      <td>861.470000</td>\n","      <td>757.207500</td>\n","      <td>610.791667</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 03:00:00</th>\n","      <td>403.452977</td>\n","      <td>883.145000</td>\n","      <td>759.086667</td>\n","      <td>609.980833</td>\n","      <td>785.044217</td>\n","      <td>1158.824167</td>\n","      <td>861.470000</td>\n","      <td>760.017500</td>\n","      <td>610.606667</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 04:00:00</th>\n","      <td>403.411112</td>\n","      <td>891.253333</td>\n","      <td>764.684167</td>\n","      <td>609.992500</td>\n","      <td>788.221717</td>\n","      <td>1155.620833</td>\n","      <td>861.470000</td>\n","      <td>762.554167</td>\n","      <td>610.741667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 19:00:00</th>\n","      <td>357.040000</td>\n","      <td>740.675000</td>\n","      <td>865.246667</td>\n","      <td>464.353333</td>\n","      <td>752.023313</td>\n","      <td>971.752500</td>\n","      <td>1158.163333</td>\n","      <td>883.090833</td>\n","      <td>537.370833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 20:00:00</th>\n","      <td>357.773333</td>\n","      <td>744.778333</td>\n","      <td>854.725000</td>\n","      <td>438.104167</td>\n","      <td>750.509147</td>\n","      <td>965.610833</td>\n","      <td>1128.521667</td>\n","      <td>879.676667</td>\n","      <td>533.579167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 21:00:00</th>\n","      <td>358.864167</td>\n","      <td>745.944167</td>\n","      <td>673.593333</td>\n","      <td>418.840833</td>\n","      <td>750.871647</td>\n","      <td>970.833333</td>\n","      <td>1088.554167</td>\n","      <td>876.473333</td>\n","      <td>531.279167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 22:00:00</th>\n","      <td>360.130000</td>\n","      <td>748.701667</td>\n","      <td>856.811667</td>\n","      <td>414.204167</td>\n","      <td>754.729147</td>\n","      <td>966.456667</td>\n","      <td>1043.940000</td>\n","      <td>874.643333</td>\n","      <td>531.714167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 23:00:00</th>\n","      <td>360.953333</td>\n","      <td>754.630000</td>\n","      <td>795.252500</td>\n","      <td>396.643333</td>\n","      <td>762.600813</td>\n","      <td>959.898333</td>\n","      <td>1009.605000</td>\n","      <td>874.504167</td>\n","      <td>535.157500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8aefcff-963b-410a-a0dc-27e97826446b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a8aefcff-963b-410a-a0dc-27e97826446b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a8aefcff-963b-410a-a0dc-27e97826446b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["rainfall_2018_summer.to_csv(\"Conductivity2018Summer.csv\")\n","rainfall_2019_summer.to_csv(\"Conductivity2019Summer.csv\")\n","rainfall_2020_summer.to_csv(\"Conductivity2020Summer.csv\")\n","rainfall_2021_summer.to_csv(\"Conductivity2021Summer.csv\")\n","rainfall_2022_summer.to_csv(\"Conductivity2022Summer.csv\")"],"metadata":{"id":"8dj9Ic1T2D15","executionInfo":{"status":"ok","timestamp":1688068745228,"user_tz":240,"elapsed":627,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["download = files.download(\"Conductivity2018Summer.csv\")\n","download = files.download(\"Conductivity2019Summer.csv\")\n","download = files.download(\"Conductivity2020Summer.csv\")\n","download = files.download(\"Conductivity2021Summer.csv\")\n","download = files.download(\"Conductivity2022Summer.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"BgLgv2CC2NlX","executionInfo":{"status":"ok","timestamp":1688068757823,"user_tz":240,"elapsed":203,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"1f6ade24-4d0d-4c4f-e6a5-424c1f368bef"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_e066704c-96cb-4f28-8443-4c7d66ccd9dc\", \"Conductivity2018Summer.csv\", 470610)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_31aa1b50-2f73-44cd-ac35-fab3dad5d74d\", \"Conductivity2019Summer.csv\", 452231)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_52c32184-94db-4ec7-a3b2-8dcf70b020ba\", \"Conductivity2020Summer.csv\", 550895)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_4a6514d7-a376-4ec2-8033-1996af08ccd8\", \"Conductivity2021Summer.csv\", 483754)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_1461503d-02a8-4d8c-9409-c904c3a2294b\", \"Conductivity2022Summer.csv\", 491102)"]},"metadata":{}}]},{"cell_type":"markdown","source":["# **Winter Rainfall**"],"metadata":{"id":"LOSxJhEQ2gqe"}},{"cell_type":"code","source":["rainfall_2018_winter = rainfall[(rainfall.index < '2019-04-15 00:00:00') & (rainfall.index >= '2018-10-01 00:00:00')]\n","rainfall_2018_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068772882,"user_tz":240,"elapsed":228,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"d8c4c901-1c88-4b49-f75c-92deb5edd583","id":"Ngy6UIVj2ebD"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2018-10-01 00:00:00        352.0  792.916667  806.891667  393.000000   \n","2018-10-01 01:00:00        352.0  794.916667  804.987500  394.000000   \n","2018-10-01 02:00:00        352.0  792.000000  800.534167  393.916667   \n","2018-10-01 03:00:00        352.0  789.166667  795.772500  393.000000   \n","2018-10-01 04:00:00        350.0  783.583333  790.758333  392.916667   \n","...                          ...         ...         ...         ...   \n","2019-04-14 19:00:00        347.0  569.750000  609.455000  441.083333   \n","2019-04-14 20:00:00        351.0  593.583333  611.792500  440.250000   \n","2019-04-14 21:00:00        350.0  606.416667  609.889167  439.583333   \n","2019-04-14 22:00:00        343.0  607.333333  608.466667  438.750000   \n","2019-04-14 23:00:00        338.0  607.916667  608.881667  438.916667   \n","\n","                     Glen Morris  Breslau Victoria      Road32         York  \\\n","Timestamp                                                                     \n","2018-10-01 00:00:00   791.000000        518.000000  860.940000  1094.581140   \n","2018-10-01 01:00:00   794.000000        518.000000  875.276667  1096.409438   \n","2018-10-01 02:00:00   794.000000        518.000000  904.683333  1077.349403   \n","2018-10-01 03:00:00   791.000000        518.000000  934.950000  1052.554368   \n","2018-10-01 04:00:00   788.000000        518.000000  960.792500  1099.675166   \n","...                          ...               ...         ...          ...   \n","2019-04-14 19:00:00   540.287520        481.416667  600.136667   608.714419   \n","2019-04-14 20:00:00   540.210853        482.666667  610.948333   611.624100   \n","2019-04-14 21:00:00   540.303353        477.583333  610.030833   615.195448   \n","2019-04-14 22:00:00   540.795853        471.000000  605.149167   618.794296   \n","2019-04-14 23:00:00   542.005020        467.916667  600.985833   622.183144   \n","\n","                         Hanlon  \n","Timestamp                        \n","2018-10-01 00:00:00  558.650498  \n","2018-10-01 01:00:00  558.672264  \n","2018-10-01 02:00:00  558.694030  \n","2018-10-01 03:00:00  558.715796  \n","2018-10-01 04:00:00  558.737562  \n","...                         ...  \n","2019-04-14 19:00:00  543.333333  \n","2019-04-14 20:00:00  543.333333  \n","2019-04-14 21:00:00  540.583333  \n","2019-04-14 22:00:00  536.000000  \n","2019-04-14 23:00:00  536.916667  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-3f1ec4ae-d417-4939-b5f1-b2f20d615ef7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-10-01 00:00:00</th>\n","      <td>352.0</td>\n","      <td>792.916667</td>\n","      <td>806.891667</td>\n","      <td>393.000000</td>\n","      <td>791.000000</td>\n","      <td>518.000000</td>\n","      <td>860.940000</td>\n","      <td>1094.581140</td>\n","      <td>558.650498</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 01:00:00</th>\n","      <td>352.0</td>\n","      <td>794.916667</td>\n","      <td>804.987500</td>\n","      <td>394.000000</td>\n","      <td>794.000000</td>\n","      <td>518.000000</td>\n","      <td>875.276667</td>\n","      <td>1096.409438</td>\n","      <td>558.672264</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 02:00:00</th>\n","      <td>352.0</td>\n","      <td>792.000000</td>\n","      <td>800.534167</td>\n","      <td>393.916667</td>\n","      <td>794.000000</td>\n","      <td>518.000000</td>\n","      <td>904.683333</td>\n","      <td>1077.349403</td>\n","      <td>558.694030</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 03:00:00</th>\n","      <td>352.0</td>\n","      <td>789.166667</td>\n","      <td>795.772500</td>\n","      <td>393.000000</td>\n","      <td>791.000000</td>\n","      <td>518.000000</td>\n","      <td>934.950000</td>\n","      <td>1052.554368</td>\n","      <td>558.715796</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 04:00:00</th>\n","      <td>350.0</td>\n","      <td>783.583333</td>\n","      <td>790.758333</td>\n","      <td>392.916667</td>\n","      <td>788.000000</td>\n","      <td>518.000000</td>\n","      <td>960.792500</td>\n","      <td>1099.675166</td>\n","      <td>558.737562</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 19:00:00</th>\n","      <td>347.0</td>\n","      <td>569.750000</td>\n","      <td>609.455000</td>\n","      <td>441.083333</td>\n","      <td>540.287520</td>\n","      <td>481.416667</td>\n","      <td>600.136667</td>\n","      <td>608.714419</td>\n","      <td>543.333333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 20:00:00</th>\n","      <td>351.0</td>\n","      <td>593.583333</td>\n","      <td>611.792500</td>\n","      <td>440.250000</td>\n","      <td>540.210853</td>\n","      <td>482.666667</td>\n","      <td>610.948333</td>\n","      <td>611.624100</td>\n","      <td>543.333333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 21:00:00</th>\n","      <td>350.0</td>\n","      <td>606.416667</td>\n","      <td>609.889167</td>\n","      <td>439.583333</td>\n","      <td>540.303353</td>\n","      <td>477.583333</td>\n","      <td>610.030833</td>\n","      <td>615.195448</td>\n","      <td>540.583333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 22:00:00</th>\n","      <td>343.0</td>\n","      <td>607.333333</td>\n","      <td>608.466667</td>\n","      <td>438.750000</td>\n","      <td>540.795853</td>\n","      <td>471.000000</td>\n","      <td>605.149167</td>\n","      <td>618.794296</td>\n","      <td>536.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 23:00:00</th>\n","      <td>338.0</td>\n","      <td>607.916667</td>\n","      <td>608.881667</td>\n","      <td>438.916667</td>\n","      <td>542.005020</td>\n","      <td>467.916667</td>\n","      <td>600.985833</td>\n","      <td>622.183144</td>\n","      <td>536.916667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f1ec4ae-d417-4939-b5f1-b2f20d615ef7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3f1ec4ae-d417-4939-b5f1-b2f20d615ef7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3f1ec4ae-d417-4939-b5f1-b2f20d615ef7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["rainfall_2019_winter = rainfall[(rainfall.index < '2020-04-15 00:00:00') & (rainfall.index >= '2019-10-01 00:00:00')]\n","rainfall_2019_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068773574,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"d9137ce4-fda0-43a5-8820-59ba93a2dfb3","id":"7Nx1hOod2ebD"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2019-10-01 00:00:00   398.615894  819.194167  867.354167  476.850833   \n","2019-10-01 01:00:00   398.523179  822.280000  870.876667  481.820833   \n","2019-10-01 02:00:00   398.430464  824.292500  871.991667  484.375000   \n","2019-10-01 03:00:00   398.337748  825.894167  871.336667  487.426667   \n","2019-10-01 04:00:00   398.245033  828.166667  869.664167  488.920000   \n","...                          ...         ...         ...         ...   \n","2020-04-14 19:00:00   423.000000  760.273333  752.798333  658.484167   \n","2020-04-14 20:00:00   423.000000  762.662500  748.120833  657.805000   \n","2020-04-14 21:00:00   423.000000  762.488333  744.206667  657.301667   \n","2020-04-14 22:00:00   424.000000  761.580000  741.901667  657.023333   \n","2020-04-14 23:00:00   425.000000  761.192500  740.422500  656.657500   \n","\n","                     Glen Morris  Breslau Victoria       Road32        York  \\\n","Timestamp                                                                     \n","2019-10-01 00:00:00   836.713303        618.955833   969.459167  888.616246   \n","2019-10-01 01:00:00   846.121637        616.582500   989.965833  891.150221   \n","2019-10-01 02:00:00   853.713303        618.488333  1016.376667  894.755863   \n","2019-10-01 03:00:00   858.829137        624.840000  1042.944167  898.600672   \n","2019-10-01 04:00:00   861.392470        635.572500  1062.520000  901.909647   \n","...                          ...               ...          ...         ...   \n","2020-04-14 19:00:00   773.700010       1023.407500   684.087358  773.921667   \n","2020-04-14 20:00:00   771.682510       1024.390833   684.151609  775.440000   \n","2020-04-14 21:00:00   769.590010       1024.964167   684.215860  777.344167   \n","2020-04-14 22:00:00   769.084177       1025.657500   684.280111  778.677500   \n","2020-04-14 23:00:00   766.270010       1026.339167   684.344361  779.915000   \n","\n","                         Hanlon  \n","Timestamp                        \n","2019-10-01 00:00:00  595.771667  \n","2019-10-01 01:00:00  598.825000  \n","2019-10-01 02:00:00  597.409167  \n","2019-10-01 03:00:00  598.365833  \n","2019-10-01 04:00:00  598.466667  \n","...                         ...  \n","2020-04-14 19:00:00  600.412500  \n","2020-04-14 20:00:00  600.239167  \n","2020-04-14 21:00:00  599.558333  \n","2020-04-14 22:00:00  598.697500  \n","2020-04-14 23:00:00  598.610000  \n","\n","[4728 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-339f2ecc-3eeb-4fad-925c-db6c65b9ad7f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-10-01 00:00:00</th>\n","      <td>398.615894</td>\n","      <td>819.194167</td>\n","      <td>867.354167</td>\n","      <td>476.850833</td>\n","      <td>836.713303</td>\n","      <td>618.955833</td>\n","      <td>969.459167</td>\n","      <td>888.616246</td>\n","      <td>595.771667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 01:00:00</th>\n","      <td>398.523179</td>\n","      <td>822.280000</td>\n","      <td>870.876667</td>\n","      <td>481.820833</td>\n","      <td>846.121637</td>\n","      <td>616.582500</td>\n","      <td>989.965833</td>\n","      <td>891.150221</td>\n","      <td>598.825000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 02:00:00</th>\n","      <td>398.430464</td>\n","      <td>824.292500</td>\n","      <td>871.991667</td>\n","      <td>484.375000</td>\n","      <td>853.713303</td>\n","      <td>618.488333</td>\n","      <td>1016.376667</td>\n","      <td>894.755863</td>\n","      <td>597.409167</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 03:00:00</th>\n","      <td>398.337748</td>\n","      <td>825.894167</td>\n","      <td>871.336667</td>\n","      <td>487.426667</td>\n","      <td>858.829137</td>\n","      <td>624.840000</td>\n","      <td>1042.944167</td>\n","      <td>898.600672</td>\n","      <td>598.365833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 04:00:00</th>\n","      <td>398.245033</td>\n","      <td>828.166667</td>\n","      <td>869.664167</td>\n","      <td>488.920000</td>\n","      <td>861.392470</td>\n","      <td>635.572500</td>\n","      <td>1062.520000</td>\n","      <td>901.909647</td>\n","      <td>598.466667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 19:00:00</th>\n","      <td>423.000000</td>\n","      <td>760.273333</td>\n","      <td>752.798333</td>\n","      <td>658.484167</td>\n","      <td>773.700010</td>\n","      <td>1023.407500</td>\n","      <td>684.087358</td>\n","      <td>773.921667</td>\n","      <td>600.412500</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 20:00:00</th>\n","      <td>423.000000</td>\n","      <td>762.662500</td>\n","      <td>748.120833</td>\n","      <td>657.805000</td>\n","      <td>771.682510</td>\n","      <td>1024.390833</td>\n","      <td>684.151609</td>\n","      <td>775.440000</td>\n","      <td>600.239167</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 21:00:00</th>\n","      <td>423.000000</td>\n","      <td>762.488333</td>\n","      <td>744.206667</td>\n","      <td>657.301667</td>\n","      <td>769.590010</td>\n","      <td>1024.964167</td>\n","      <td>684.215860</td>\n","      <td>777.344167</td>\n","      <td>599.558333</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 22:00:00</th>\n","      <td>424.000000</td>\n","      <td>761.580000</td>\n","      <td>741.901667</td>\n","      <td>657.023333</td>\n","      <td>769.084177</td>\n","      <td>1025.657500</td>\n","      <td>684.280111</td>\n","      <td>778.677500</td>\n","      <td>598.697500</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 23:00:00</th>\n","      <td>425.000000</td>\n","      <td>761.192500</td>\n","      <td>740.422500</td>\n","      <td>656.657500</td>\n","      <td>766.270010</td>\n","      <td>1026.339167</td>\n","      <td>684.344361</td>\n","      <td>779.915000</td>\n","      <td>598.610000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4728 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-339f2ecc-3eeb-4fad-925c-db6c65b9ad7f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-339f2ecc-3eeb-4fad-925c-db6c65b9ad7f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-339f2ecc-3eeb-4fad-925c-db6c65b9ad7f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["rainfall_2020_winter = rainfall[(rainfall.index < '2021-04-15 00:00:00') & (rainfall.index >= '2020-10-01 00:00:00')]\n","rainfall_2020_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068774525,"user_tz":240,"elapsed":6,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"5c15ced6-4049-4707-afee-740491310c9e","id":"WUJKgVrT2ebD"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2020-10-01 00:00:00   442.140489  348.282527  719.553333   90.580000   \n","2020-10-01 01:00:00   442.122408  348.396566  718.062500   90.580000   \n","2020-10-01 02:00:00   442.104326  348.510605  715.059167   90.580000   \n","2020-10-01 03:00:00   442.086245  348.624644  713.546667   90.580000   \n","2020-10-01 04:00:00   442.068164  348.738683  712.076667   90.580000   \n","...                          ...         ...         ...         ...   \n","2021-04-14 19:00:00   403.438333  755.108333  657.567500  628.007500   \n","2021-04-14 20:00:00   403.337500  755.522500  658.723333  624.193333   \n","2021-04-14 21:00:00   403.500000  756.000833  659.176667  621.069167   \n","2021-04-14 22:00:00   401.640833  756.399167  660.585833  618.901667   \n","2021-04-14 23:00:00   399.287500  756.833333  662.076667  617.388333   \n","\n","                     Glen Morris  Breslau Victoria      Road32        York  \\\n","Timestamp                                                                    \n","2020-10-01 00:00:00   626.290010        493.266825  945.009615  846.368899   \n","2020-10-01 01:00:00   623.166677        493.465853  945.073866  846.325000   \n","2020-10-01 02:00:00   614.290010        493.664881  945.138116  846.281101   \n","2020-10-01 03:00:00   608.950010        493.863909  945.202367  846.237202   \n","2020-10-01 04:00:00   612.440843        494.062936  945.266618  846.193303   \n","...                          ...               ...         ...         ...   \n","2021-04-14 19:00:00   706.228333        683.195000  788.067500  773.192387   \n","2021-04-14 20:00:00   707.195000        681.001667  798.748333  773.356480   \n","2021-04-14 21:00:00   709.644167        678.270000  810.252500  773.553073   \n","2021-04-14 22:00:00   713.281667        677.290000  820.375833  773.596333   \n","2021-04-14 23:00:00   716.399167        675.130000  831.523333  773.749593   \n","\n","                         Hanlon  \n","Timestamp                        \n","2020-10-01 00:00:00  626.907086  \n","2020-10-01 01:00:00  626.904963  \n","2020-10-01 02:00:00  626.902840  \n","2020-10-01 03:00:00  626.900718  \n","2020-10-01 04:00:00  626.898595  \n","...                         ...  \n","2021-04-14 19:00:00  620.080833  \n","2021-04-14 20:00:00  619.519167  \n","2021-04-14 21:00:00  619.503333  \n","2021-04-14 22:00:00  618.878333  \n","2021-04-14 23:00:00  618.117500  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-eec4d58c-0f8d-42b0-b60d-ba05cd7f9945\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-10-01 00:00:00</th>\n","      <td>442.140489</td>\n","      <td>348.282527</td>\n","      <td>719.553333</td>\n","      <td>90.580000</td>\n","      <td>626.290010</td>\n","      <td>493.266825</td>\n","      <td>945.009615</td>\n","      <td>846.368899</td>\n","      <td>626.907086</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 01:00:00</th>\n","      <td>442.122408</td>\n","      <td>348.396566</td>\n","      <td>718.062500</td>\n","      <td>90.580000</td>\n","      <td>623.166677</td>\n","      <td>493.465853</td>\n","      <td>945.073866</td>\n","      <td>846.325000</td>\n","      <td>626.904963</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 02:00:00</th>\n","      <td>442.104326</td>\n","      <td>348.510605</td>\n","      <td>715.059167</td>\n","      <td>90.580000</td>\n","      <td>614.290010</td>\n","      <td>493.664881</td>\n","      <td>945.138116</td>\n","      <td>846.281101</td>\n","      <td>626.902840</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 03:00:00</th>\n","      <td>442.086245</td>\n","      <td>348.624644</td>\n","      <td>713.546667</td>\n","      <td>90.580000</td>\n","      <td>608.950010</td>\n","      <td>493.863909</td>\n","      <td>945.202367</td>\n","      <td>846.237202</td>\n","      <td>626.900718</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 04:00:00</th>\n","      <td>442.068164</td>\n","      <td>348.738683</td>\n","      <td>712.076667</td>\n","      <td>90.580000</td>\n","      <td>612.440843</td>\n","      <td>494.062936</td>\n","      <td>945.266618</td>\n","      <td>846.193303</td>\n","      <td>626.898595</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 19:00:00</th>\n","      <td>403.438333</td>\n","      <td>755.108333</td>\n","      <td>657.567500</td>\n","      <td>628.007500</td>\n","      <td>706.228333</td>\n","      <td>683.195000</td>\n","      <td>788.067500</td>\n","      <td>773.192387</td>\n","      <td>620.080833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 20:00:00</th>\n","      <td>403.337500</td>\n","      <td>755.522500</td>\n","      <td>658.723333</td>\n","      <td>624.193333</td>\n","      <td>707.195000</td>\n","      <td>681.001667</td>\n","      <td>798.748333</td>\n","      <td>773.356480</td>\n","      <td>619.519167</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 21:00:00</th>\n","      <td>403.500000</td>\n","      <td>756.000833</td>\n","      <td>659.176667</td>\n","      <td>621.069167</td>\n","      <td>709.644167</td>\n","      <td>678.270000</td>\n","      <td>810.252500</td>\n","      <td>773.553073</td>\n","      <td>619.503333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 22:00:00</th>\n","      <td>401.640833</td>\n","      <td>756.399167</td>\n","      <td>660.585833</td>\n","      <td>618.901667</td>\n","      <td>713.281667</td>\n","      <td>677.290000</td>\n","      <td>820.375833</td>\n","      <td>773.596333</td>\n","      <td>618.878333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 23:00:00</th>\n","      <td>399.287500</td>\n","      <td>756.833333</td>\n","      <td>662.076667</td>\n","      <td>617.388333</td>\n","      <td>716.399167</td>\n","      <td>675.130000</td>\n","      <td>831.523333</td>\n","      <td>773.749593</td>\n","      <td>618.117500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eec4d58c-0f8d-42b0-b60d-ba05cd7f9945')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eec4d58c-0f8d-42b0-b60d-ba05cd7f9945 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eec4d58c-0f8d-42b0-b60d-ba05cd7f9945');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["rainfall_2021_winter = rainfall[(rainfall.index < '2022-04-15 00:00:00') & (rainfall.index >= '2021-10-01 00:00:00')]\n","rainfall_2021_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068774525,"user_tz":240,"elapsed":5,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"c70735de-9337-4df2-fae3-f70f84a0e0e5","id":"AzkHRCfy2ebE"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair       Brant  Bridgeport  \\\n","Timestamp                                                              \n","2021-10-01 00:00:00   450.422500  632.766667  704.520000  518.150000   \n","2021-10-01 01:00:00   462.728333  637.124167  704.736667  518.825833   \n","2021-10-01 02:00:00   471.714167  640.996667  704.919167  519.651667   \n","2021-10-01 03:00:00   474.290833  645.503333  705.463333  520.524167   \n","2021-10-01 04:00:00   474.381667  648.135000  706.435833  522.383333   \n","...                          ...         ...         ...         ...   \n","2022-04-14 19:00:00   403.787895  881.145833  756.702500  611.325833   \n","2022-04-14 20:00:00   403.746030  878.687500  751.489167  610.851667   \n","2022-04-14 21:00:00   403.704166  877.834167  747.957500  610.661667   \n","2022-04-14 22:00:00   403.662301  876.090000  745.330000  610.570000   \n","2022-04-14 23:00:00   403.620436  874.198333  744.122500  610.191667   \n","\n","                     Glen Morris  Breslau Victoria       Road32        York  \\\n","Timestamp                                                                     \n","2021-10-01 00:00:00   637.064990        775.885833  1019.094167  665.283859   \n","2021-10-01 01:00:00   639.689990        950.248333  1034.908333  666.569718   \n","2021-10-01 02:00:00   640.329990        726.635000  1052.664167  667.778078   \n","2021-10-01 03:00:00   639.064990        989.845000  1073.790833  668.913103   \n","2021-10-01 04:00:00   638.189990        805.249167  1092.025833  670.009796   \n","...                          ...               ...          ...         ...   \n","2022-04-14 19:00:00   756.429217       1186.732500   861.470000  745.373333   \n","2022-04-14 20:00:00   760.019217       1184.908333   861.470000  743.428333   \n","2022-04-14 21:00:00   763.196717       1171.050000   861.470000  743.230833   \n","2022-04-14 22:00:00   766.047550       1167.066667   861.470000  744.512500   \n","2022-04-14 23:00:00   769.017550       1166.299167   861.470000  747.024167   \n","\n","                         Hanlon  \n","Timestamp                        \n","2021-10-01 00:00:00  618.516667  \n","2021-10-01 01:00:00  617.044167  \n","2021-10-01 02:00:00  615.185833  \n","2021-10-01 03:00:00  614.735833  \n","2021-10-01 04:00:00  615.035833  \n","...                         ...  \n","2022-04-14 19:00:00  610.974167  \n","2022-04-14 20:00:00  610.440000  \n","2022-04-14 21:00:00  609.975000  \n","2022-04-14 22:00:00  610.358333  \n","2022-04-14 23:00:00  610.020833  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-c6ad7ffd-5063-489f-bd08-7bd705a6112d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-10-01 00:00:00</th>\n","      <td>450.422500</td>\n","      <td>632.766667</td>\n","      <td>704.520000</td>\n","      <td>518.150000</td>\n","      <td>637.064990</td>\n","      <td>775.885833</td>\n","      <td>1019.094167</td>\n","      <td>665.283859</td>\n","      <td>618.516667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 01:00:00</th>\n","      <td>462.728333</td>\n","      <td>637.124167</td>\n","      <td>704.736667</td>\n","      <td>518.825833</td>\n","      <td>639.689990</td>\n","      <td>950.248333</td>\n","      <td>1034.908333</td>\n","      <td>666.569718</td>\n","      <td>617.044167</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 02:00:00</th>\n","      <td>471.714167</td>\n","      <td>640.996667</td>\n","      <td>704.919167</td>\n","      <td>519.651667</td>\n","      <td>640.329990</td>\n","      <td>726.635000</td>\n","      <td>1052.664167</td>\n","      <td>667.778078</td>\n","      <td>615.185833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 03:00:00</th>\n","      <td>474.290833</td>\n","      <td>645.503333</td>\n","      <td>705.463333</td>\n","      <td>520.524167</td>\n","      <td>639.064990</td>\n","      <td>989.845000</td>\n","      <td>1073.790833</td>\n","      <td>668.913103</td>\n","      <td>614.735833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 04:00:00</th>\n","      <td>474.381667</td>\n","      <td>648.135000</td>\n","      <td>706.435833</td>\n","      <td>522.383333</td>\n","      <td>638.189990</td>\n","      <td>805.249167</td>\n","      <td>1092.025833</td>\n","      <td>670.009796</td>\n","      <td>615.035833</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 19:00:00</th>\n","      <td>403.787895</td>\n","      <td>881.145833</td>\n","      <td>756.702500</td>\n","      <td>611.325833</td>\n","      <td>756.429217</td>\n","      <td>1186.732500</td>\n","      <td>861.470000</td>\n","      <td>745.373333</td>\n","      <td>610.974167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 20:00:00</th>\n","      <td>403.746030</td>\n","      <td>878.687500</td>\n","      <td>751.489167</td>\n","      <td>610.851667</td>\n","      <td>760.019217</td>\n","      <td>1184.908333</td>\n","      <td>861.470000</td>\n","      <td>743.428333</td>\n","      <td>610.440000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 21:00:00</th>\n","      <td>403.704166</td>\n","      <td>877.834167</td>\n","      <td>747.957500</td>\n","      <td>610.661667</td>\n","      <td>763.196717</td>\n","      <td>1171.050000</td>\n","      <td>861.470000</td>\n","      <td>743.230833</td>\n","      <td>609.975000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 22:00:00</th>\n","      <td>403.662301</td>\n","      <td>876.090000</td>\n","      <td>745.330000</td>\n","      <td>610.570000</td>\n","      <td>766.047550</td>\n","      <td>1167.066667</td>\n","      <td>861.470000</td>\n","      <td>744.512500</td>\n","      <td>610.358333</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 23:00:00</th>\n","      <td>403.620436</td>\n","      <td>874.198333</td>\n","      <td>744.122500</td>\n","      <td>610.191667</td>\n","      <td>769.017550</td>\n","      <td>1166.299167</td>\n","      <td>861.470000</td>\n","      <td>747.024167</td>\n","      <td>610.020833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6ad7ffd-5063-489f-bd08-7bd705a6112d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c6ad7ffd-5063-489f-bd08-7bd705a6112d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c6ad7ffd-5063-489f-bd08-7bd705a6112d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["rainfall_2022_winter = rainfall[(rainfall.index < '2023-04-15 00:00:00') & (rainfall.index >= '2022-10-01 00:00:00')]\n","rainfall_2022_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068774723,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"300f376a-42e2-43b5-e0db-805a996c88a4","id":"5PTzAK1-2ebE"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand       Blair        Brant  Bridgeport  \\\n","Timestamp                                                               \n","2022-10-01 00:00:00   361.475833  762.320000   784.512500  457.139167   \n","2022-10-01 01:00:00   358.639167  769.427500   766.684167  458.972500   \n","2022-10-01 02:00:00   356.199167  774.378333   689.070833  463.196667   \n","2022-10-01 03:00:00   359.021667  778.362500   777.324167  420.345000   \n","2022-10-01 04:00:00   360.388333  783.643333   687.963333  408.221667   \n","...                          ...         ...          ...         ...   \n","2023-01-01 19:00:00   459.190833  728.329167  1370.605000  925.060000   \n","2023-01-01 20:00:00   458.920000  732.067500  1370.605000  925.060000   \n","2023-01-01 21:00:00   458.841667  737.284167  1370.605000  925.060000   \n","2023-01-01 22:00:00   458.364167  741.144167  1370.605000  925.060000   \n","2023-01-01 23:00:00   457.371667  743.047500  1370.605000  925.060000   \n","\n","                     Glen Morris  Breslau Victoria       Road32         York  \\\n","Timestamp                                                                      \n","2022-10-01 00:00:00   770.893313        956.983333   989.775000   875.280833   \n","2022-10-01 01:00:00   778.732480        958.598333   992.807500   876.772500   \n","2022-10-01 02:00:00   786.873313        961.125833  1021.318333   879.100833   \n","2022-10-01 03:00:00   794.226647        965.475833  1067.837500   881.935833   \n","2022-10-01 04:00:00   799.614980        977.975833  1109.185000   884.743333   \n","...                          ...               ...          ...          ...   \n","2023-01-01 19:00:00   804.971607       1773.162500   887.349167  1490.550000   \n","2023-01-01 20:00:00   783.938273       1773.162500   883.860833  1490.550000   \n","2023-01-01 21:00:00   766.382440       1773.162500   889.647500  1490.550000   \n","2023-01-01 22:00:00   751.204940       1773.162500   900.971667  1490.550000   \n","2023-01-01 23:00:00   737.352440       1773.162500   914.252500  1490.550000   \n","\n","                         Hanlon  \n","Timestamp                        \n","2022-10-01 00:00:00  536.538333  \n","2022-10-01 01:00:00  537.363333  \n","2022-10-01 02:00:00  538.164167  \n","2022-10-01 03:00:00  540.510833  \n","2022-10-01 04:00:00  540.521667  \n","...                         ...  \n","2023-01-01 19:00:00  684.726667  \n","2023-01-01 20:00:00  680.866667  \n","2023-01-01 21:00:00  677.042500  \n","2023-01-01 22:00:00  674.933333  \n","2023-01-01 23:00:00  672.905833  \n","\n","[2232 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-a7b9e2be-ed85-4350-9251-a6a45af76ed8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-10-01 00:00:00</th>\n","      <td>361.475833</td>\n","      <td>762.320000</td>\n","      <td>784.512500</td>\n","      <td>457.139167</td>\n","      <td>770.893313</td>\n","      <td>956.983333</td>\n","      <td>989.775000</td>\n","      <td>875.280833</td>\n","      <td>536.538333</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 01:00:00</th>\n","      <td>358.639167</td>\n","      <td>769.427500</td>\n","      <td>766.684167</td>\n","      <td>458.972500</td>\n","      <td>778.732480</td>\n","      <td>958.598333</td>\n","      <td>992.807500</td>\n","      <td>876.772500</td>\n","      <td>537.363333</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 02:00:00</th>\n","      <td>356.199167</td>\n","      <td>774.378333</td>\n","      <td>689.070833</td>\n","      <td>463.196667</td>\n","      <td>786.873313</td>\n","      <td>961.125833</td>\n","      <td>1021.318333</td>\n","      <td>879.100833</td>\n","      <td>538.164167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 03:00:00</th>\n","      <td>359.021667</td>\n","      <td>778.362500</td>\n","      <td>777.324167</td>\n","      <td>420.345000</td>\n","      <td>794.226647</td>\n","      <td>965.475833</td>\n","      <td>1067.837500</td>\n","      <td>881.935833</td>\n","      <td>540.510833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 04:00:00</th>\n","      <td>360.388333</td>\n","      <td>783.643333</td>\n","      <td>687.963333</td>\n","      <td>408.221667</td>\n","      <td>799.614980</td>\n","      <td>977.975833</td>\n","      <td>1109.185000</td>\n","      <td>884.743333</td>\n","      <td>540.521667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 19:00:00</th>\n","      <td>459.190833</td>\n","      <td>728.329167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>804.971607</td>\n","      <td>1773.162500</td>\n","      <td>887.349167</td>\n","      <td>1490.550000</td>\n","      <td>684.726667</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 20:00:00</th>\n","      <td>458.920000</td>\n","      <td>732.067500</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>783.938273</td>\n","      <td>1773.162500</td>\n","      <td>883.860833</td>\n","      <td>1490.550000</td>\n","      <td>680.866667</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 21:00:00</th>\n","      <td>458.841667</td>\n","      <td>737.284167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>766.382440</td>\n","      <td>1773.162500</td>\n","      <td>889.647500</td>\n","      <td>1490.550000</td>\n","      <td>677.042500</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 22:00:00</th>\n","      <td>458.364167</td>\n","      <td>741.144167</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>751.204940</td>\n","      <td>1773.162500</td>\n","      <td>900.971667</td>\n","      <td>1490.550000</td>\n","      <td>674.933333</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 23:00:00</th>\n","      <td>457.371667</td>\n","      <td>743.047500</td>\n","      <td>1370.605000</td>\n","      <td>925.060000</td>\n","      <td>737.352440</td>\n","      <td>1773.162500</td>\n","      <td>914.252500</td>\n","      <td>1490.550000</td>\n","      <td>672.905833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2232 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7b9e2be-ed85-4350-9251-a6a45af76ed8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a7b9e2be-ed85-4350-9251-a6a45af76ed8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a7b9e2be-ed85-4350-9251-a6a45af76ed8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["rainfall_2018_winter.to_csv(\"Conductivity2018winter.csv\")\n","rainfall_2019_winter.to_csv(\"Conductivity2019winter.csv\")\n","rainfall_2020_winter.to_csv(\"Conductivity2020winter.csv\")\n","rainfall_2021_winter.to_csv(\"Conductivity2021winter.csv\")\n","rainfall_2022_winter.to_csv(\"Conductivity2022winter.csv\")"],"metadata":{"id":"fLcVGkx62ebE","executionInfo":{"status":"ok","timestamp":1688068786818,"user_tz":240,"elapsed":381,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["download = files.download(\"Conductivity2018winter.csv\")\n","download = files.download(\"Conductivity2019winter.csv\")\n","download = files.download(\"Conductivity2020winter.csv\")\n","download = files.download(\"Conductivity2021winter.csv\")\n","download = files.download(\"Conductivity2022winter.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"executionInfo":{"status":"ok","timestamp":1688068799457,"user_tz":240,"elapsed":179,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"159a504a-812b-492d-d2c2-9a4481b1ef67","id":"qk-iUqys2ebE"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_4796e7ac-9c51-4ae0-bde4-65c61281b62e\", \"Conductivity2018winter.csv\", 511259)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_8b299049-1b36-495b-8bc9-2e56995f3fea\", \"Conductivity2019winter.csv\", 539386)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_1cd46459-9141-4fce-ae13-21bcfb72af98\", \"Conductivity2020winter.csv\", 678331)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_34f4fccf-7e99-4b53-bca0-0124c358df1f\", \"Conductivity2021winter.csv\", 622974)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_96f7fa2a-e492-40b6-9627-e23c6c502e24\", \"Conductivity2022winter.csv\", 266697)"]},"metadata":{}}]},{"cell_type":"markdown","source":["# New Section"],"metadata":{"id":"Hp_1cSBvvggJ"}},{"cell_type":"markdown","source":["# **Summer Files DO**"],"metadata":{"id":"oZU_RVX7vgmU"}},{"cell_type":"code","source":["rainfall = pd.read_csv(\"DO_noNA.csv\")\n","rainfall"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1688068831053,"user_tz":240,"elapsed":216,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"0bdcb6cc-f5cc-4b19-c91f-279ceed3366d","id":"pILZO7PJvgmU"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 Timestamp  Below Shand      Blair      Brant  Bridgeport  \\\n","0      2018-01-01 00:00:00    12.100000  16.383997  15.084167   13.110000   \n","1      2018-01-01 01:00:00    12.080000  15.815805  15.182500   12.875000   \n","2      2018-01-01 02:00:00    12.080000  15.342613  15.171667   12.702500   \n","3      2018-01-01 03:00:00    12.070000  15.014421  15.033333   12.644167   \n","4      2018-01-01 04:00:00    12.060000  14.781229  14.795000   12.664167   \n","...                    ...          ...        ...        ...         ...   \n","43843  2023-01-01 19:00:00    13.272499  13.390833  13.568750   13.400000   \n","43844  2023-01-01 20:00:00    13.272499  13.398333  13.568750   13.400000   \n","43845  2023-01-01 21:00:00    13.272499  13.402500  13.568750   13.400000   \n","43846  2023-01-01 22:00:00    13.272499  13.410000  13.568750   13.400000   \n","43847  2023-01-01 23:00:00    13.272499  13.420000  13.568750   13.400000   \n","\n","       Glen Morris  Breslau Victoria     Road32       York     Hanlon  \n","0        17.670000         13.411667  14.497501   4.905833  13.470990  \n","1        16.950000         13.026667  14.443334   4.864167  13.365030  \n","2        16.360000         12.778333  14.366668   4.789167  13.274071  \n","3        15.880000         12.628333  14.215001   4.541667  13.193111  \n","4        15.470000         12.499167  13.968334   4.440000  13.107152  \n","...            ...               ...        ...        ...        ...  \n","43843    13.995832         14.495000  13.490000  14.190000  13.522500  \n","43844    13.946666         14.495000  13.601667  14.190000  13.540833  \n","43845    13.894999         14.495000  13.612500  14.190000  13.517500  \n","43846    13.828332         14.495000  13.495833  14.190000  13.468333  \n","43847    13.725832         14.495000  13.344167  14.190000  13.447500  \n","\n","[43848 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-4b4e25ac-17c4-49f2-8a5e-b34a3fb7f7a7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01 00:00:00</td>\n","      <td>12.100000</td>\n","      <td>16.383997</td>\n","      <td>15.084167</td>\n","      <td>13.110000</td>\n","      <td>17.670000</td>\n","      <td>13.411667</td>\n","      <td>14.497501</td>\n","      <td>4.905833</td>\n","      <td>13.470990</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-01 01:00:00</td>\n","      <td>12.080000</td>\n","      <td>15.815805</td>\n","      <td>15.182500</td>\n","      <td>12.875000</td>\n","      <td>16.950000</td>\n","      <td>13.026667</td>\n","      <td>14.443334</td>\n","      <td>4.864167</td>\n","      <td>13.365030</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-01 02:00:00</td>\n","      <td>12.080000</td>\n","      <td>15.342613</td>\n","      <td>15.171667</td>\n","      <td>12.702500</td>\n","      <td>16.360000</td>\n","      <td>12.778333</td>\n","      <td>14.366668</td>\n","      <td>4.789167</td>\n","      <td>13.274071</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-01 03:00:00</td>\n","      <td>12.070000</td>\n","      <td>15.014421</td>\n","      <td>15.033333</td>\n","      <td>12.644167</td>\n","      <td>15.880000</td>\n","      <td>12.628333</td>\n","      <td>14.215001</td>\n","      <td>4.541667</td>\n","      <td>13.193111</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-01 04:00:00</td>\n","      <td>12.060000</td>\n","      <td>14.781229</td>\n","      <td>14.795000</td>\n","      <td>12.664167</td>\n","      <td>15.470000</td>\n","      <td>12.499167</td>\n","      <td>13.968334</td>\n","      <td>4.440000</td>\n","      <td>13.107152</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>43843</th>\n","      <td>2023-01-01 19:00:00</td>\n","      <td>13.272499</td>\n","      <td>13.390833</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.995832</td>\n","      <td>14.495000</td>\n","      <td>13.490000</td>\n","      <td>14.190000</td>\n","      <td>13.522500</td>\n","    </tr>\n","    <tr>\n","      <th>43844</th>\n","      <td>2023-01-01 20:00:00</td>\n","      <td>13.272499</td>\n","      <td>13.398333</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.946666</td>\n","      <td>14.495000</td>\n","      <td>13.601667</td>\n","      <td>14.190000</td>\n","      <td>13.540833</td>\n","    </tr>\n","    <tr>\n","      <th>43845</th>\n","      <td>2023-01-01 21:00:00</td>\n","      <td>13.272499</td>\n","      <td>13.402500</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.894999</td>\n","      <td>14.495000</td>\n","      <td>13.612500</td>\n","      <td>14.190000</td>\n","      <td>13.517500</td>\n","    </tr>\n","    <tr>\n","      <th>43846</th>\n","      <td>2023-01-01 22:00:00</td>\n","      <td>13.272499</td>\n","      <td>13.410000</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.828332</td>\n","      <td>14.495000</td>\n","      <td>13.495833</td>\n","      <td>14.190000</td>\n","      <td>13.468333</td>\n","    </tr>\n","    <tr>\n","      <th>43847</th>\n","      <td>2023-01-01 23:00:00</td>\n","      <td>13.272499</td>\n","      <td>13.420000</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.725832</td>\n","      <td>14.495000</td>\n","      <td>13.344167</td>\n","      <td>14.190000</td>\n","      <td>13.447500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43848 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b4e25ac-17c4-49f2-8a5e-b34a3fb7f7a7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4b4e25ac-17c4-49f2-8a5e-b34a3fb7f7a7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4b4e25ac-17c4-49f2-8a5e-b34a3fb7f7a7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["rainfall.set_index(\"Timestamp\", inplace= True)\n","rainfall"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068832426,"user_tz":240,"elapsed":193,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"3444677e-bce0-4b05-f591-1172bdc8fad9","id":"H9-RdTufvgmV"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2018-01-01 00:00:00    12.100000  16.383997  15.084167   13.110000   \n","2018-01-01 01:00:00    12.080000  15.815805  15.182500   12.875000   \n","2018-01-01 02:00:00    12.080000  15.342613  15.171667   12.702500   \n","2018-01-01 03:00:00    12.070000  15.014421  15.033333   12.644167   \n","2018-01-01 04:00:00    12.060000  14.781229  14.795000   12.664167   \n","...                          ...        ...        ...         ...   \n","2023-01-01 19:00:00    13.272499  13.390833  13.568750   13.400000   \n","2023-01-01 20:00:00    13.272499  13.398333  13.568750   13.400000   \n","2023-01-01 21:00:00    13.272499  13.402500  13.568750   13.400000   \n","2023-01-01 22:00:00    13.272499  13.410000  13.568750   13.400000   \n","2023-01-01 23:00:00    13.272499  13.420000  13.568750   13.400000   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2018-01-01 00:00:00    17.670000         13.411667  14.497501   4.905833   \n","2018-01-01 01:00:00    16.950000         13.026667  14.443334   4.864167   \n","2018-01-01 02:00:00    16.360000         12.778333  14.366668   4.789167   \n","2018-01-01 03:00:00    15.880000         12.628333  14.215001   4.541667   \n","2018-01-01 04:00:00    15.470000         12.499167  13.968334   4.440000   \n","...                          ...               ...        ...        ...   \n","2023-01-01 19:00:00    13.995832         14.495000  13.490000  14.190000   \n","2023-01-01 20:00:00    13.946666         14.495000  13.601667  14.190000   \n","2023-01-01 21:00:00    13.894999         14.495000  13.612500  14.190000   \n","2023-01-01 22:00:00    13.828332         14.495000  13.495833  14.190000   \n","2023-01-01 23:00:00    13.725832         14.495000  13.344167  14.190000   \n","\n","                        Hanlon  \n","Timestamp                       \n","2018-01-01 00:00:00  13.470990  \n","2018-01-01 01:00:00  13.365030  \n","2018-01-01 02:00:00  13.274071  \n","2018-01-01 03:00:00  13.193111  \n","2018-01-01 04:00:00  13.107152  \n","...                        ...  \n","2023-01-01 19:00:00  13.522500  \n","2023-01-01 20:00:00  13.540833  \n","2023-01-01 21:00:00  13.517500  \n","2023-01-01 22:00:00  13.468333  \n","2023-01-01 23:00:00  13.447500  \n","\n","[43848 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f5a9aefc-e155-4da8-94f5-184f97abc8be\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01 00:00:00</th>\n","      <td>12.100000</td>\n","      <td>16.383997</td>\n","      <td>15.084167</td>\n","      <td>13.110000</td>\n","      <td>17.670000</td>\n","      <td>13.411667</td>\n","      <td>14.497501</td>\n","      <td>4.905833</td>\n","      <td>13.470990</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 01:00:00</th>\n","      <td>12.080000</td>\n","      <td>15.815805</td>\n","      <td>15.182500</td>\n","      <td>12.875000</td>\n","      <td>16.950000</td>\n","      <td>13.026667</td>\n","      <td>14.443334</td>\n","      <td>4.864167</td>\n","      <td>13.365030</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 02:00:00</th>\n","      <td>12.080000</td>\n","      <td>15.342613</td>\n","      <td>15.171667</td>\n","      <td>12.702500</td>\n","      <td>16.360000</td>\n","      <td>12.778333</td>\n","      <td>14.366668</td>\n","      <td>4.789167</td>\n","      <td>13.274071</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 03:00:00</th>\n","      <td>12.070000</td>\n","      <td>15.014421</td>\n","      <td>15.033333</td>\n","      <td>12.644167</td>\n","      <td>15.880000</td>\n","      <td>12.628333</td>\n","      <td>14.215001</td>\n","      <td>4.541667</td>\n","      <td>13.193111</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-01 04:00:00</th>\n","      <td>12.060000</td>\n","      <td>14.781229</td>\n","      <td>14.795000</td>\n","      <td>12.664167</td>\n","      <td>15.470000</td>\n","      <td>12.499167</td>\n","      <td>13.968334</td>\n","      <td>4.440000</td>\n","      <td>13.107152</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 19:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.390833</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.995832</td>\n","      <td>14.495000</td>\n","      <td>13.490000</td>\n","      <td>14.190000</td>\n","      <td>13.522500</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 20:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.398333</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.946666</td>\n","      <td>14.495000</td>\n","      <td>13.601667</td>\n","      <td>14.190000</td>\n","      <td>13.540833</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 21:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.402500</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.894999</td>\n","      <td>14.495000</td>\n","      <td>13.612500</td>\n","      <td>14.190000</td>\n","      <td>13.517500</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 22:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.410000</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.828332</td>\n","      <td>14.495000</td>\n","      <td>13.495833</td>\n","      <td>14.190000</td>\n","      <td>13.468333</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 23:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.420000</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.725832</td>\n","      <td>14.495000</td>\n","      <td>13.344167</td>\n","      <td>14.190000</td>\n","      <td>13.447500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43848 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5a9aefc-e155-4da8-94f5-184f97abc8be')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f5a9aefc-e155-4da8-94f5-184f97abc8be button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f5a9aefc-e155-4da8-94f5-184f97abc8be');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["rainfall_2018_summer = rainfall[(rainfall.index >= '2018-04-15 00:00:00') & (rainfall.index < '2018-10-01 00:00:00')]\n","rainfall_2018_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068833583,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"1d5c931d-0759-4eea-b46c-c485f9cf262b","id":"z_YCS-QavgmV"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2018-04-15 00:00:00    13.031592  16.298695  12.930833   13.463333   \n","2018-04-15 01:00:00    13.029716  16.369186  12.915833   13.521667   \n","2018-04-15 02:00:00    13.027840  16.459677  12.871667   13.566667   \n","2018-04-15 03:00:00    13.025963  16.545167  12.855000   13.586667   \n","2018-04-15 04:00:00    13.024087  16.605658  12.869167   13.590000   \n","...                          ...        ...        ...         ...   \n","2018-09-30 19:00:00     7.940000  12.055833  11.445832   10.077500   \n","2018-09-30 20:00:00     7.860000  12.105833  11.861666   10.235833   \n","2018-09-30 21:00:00     7.730000  11.985000  11.997499   10.275833   \n","2018-09-30 22:00:00     7.680000  11.290833  11.867499   10.118333   \n","2018-09-30 23:00:00     7.520000  10.650833  11.540832    9.859167   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2018-04-15 00:00:00        14.39         13.640000  12.879168  12.735000   \n","2018-04-15 01:00:00        14.27         13.702500  12.923334  12.532500   \n","2018-04-15 02:00:00        14.25         13.764167  12.970001  12.412500   \n","2018-04-15 03:00:00        14.33         13.817500  12.990834  12.338333   \n","2018-04-15 04:00:00        14.45         13.857500  13.005834  12.308333   \n","...                          ...               ...        ...        ...   \n","2018-09-30 19:00:00        11.97          6.312500  10.653333  10.688333   \n","2018-09-30 20:00:00        11.99          6.388333  10.814167  11.164167   \n","2018-09-30 21:00:00        12.03          6.515000  10.622500  11.193333   \n","2018-09-30 22:00:00        11.59          6.639167  10.530000  10.932500   \n","2018-09-30 23:00:00        10.88          6.656667  10.341667  10.578333   \n","\n","                        Hanlon  \n","Timestamp                       \n","2018-04-15 00:00:00  14.070217  \n","2018-04-15 01:00:00  14.089794  \n","2018-04-15 02:00:00  14.134371  \n","2018-04-15 03:00:00  14.158948  \n","2018-04-15 04:00:00  14.168525  \n","...                        ...  \n","2018-09-30 19:00:00   7.990000  \n","2018-09-30 20:00:00   7.990000  \n","2018-09-30 21:00:00   7.990000  \n","2018-09-30 22:00:00   7.990000  \n","2018-09-30 23:00:00   7.990000  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-9270043a-f7b1-44cf-8cc9-349c1eea675e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-04-15 00:00:00</th>\n","      <td>13.031592</td>\n","      <td>16.298695</td>\n","      <td>12.930833</td>\n","      <td>13.463333</td>\n","      <td>14.39</td>\n","      <td>13.640000</td>\n","      <td>12.879168</td>\n","      <td>12.735000</td>\n","      <td>14.070217</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 01:00:00</th>\n","      <td>13.029716</td>\n","      <td>16.369186</td>\n","      <td>12.915833</td>\n","      <td>13.521667</td>\n","      <td>14.27</td>\n","      <td>13.702500</td>\n","      <td>12.923334</td>\n","      <td>12.532500</td>\n","      <td>14.089794</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 02:00:00</th>\n","      <td>13.027840</td>\n","      <td>16.459677</td>\n","      <td>12.871667</td>\n","      <td>13.566667</td>\n","      <td>14.25</td>\n","      <td>13.764167</td>\n","      <td>12.970001</td>\n","      <td>12.412500</td>\n","      <td>14.134371</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 03:00:00</th>\n","      <td>13.025963</td>\n","      <td>16.545167</td>\n","      <td>12.855000</td>\n","      <td>13.586667</td>\n","      <td>14.33</td>\n","      <td>13.817500</td>\n","      <td>12.990834</td>\n","      <td>12.338333</td>\n","      <td>14.158948</td>\n","    </tr>\n","    <tr>\n","      <th>2018-04-15 04:00:00</th>\n","      <td>13.024087</td>\n","      <td>16.605658</td>\n","      <td>12.869167</td>\n","      <td>13.590000</td>\n","      <td>14.45</td>\n","      <td>13.857500</td>\n","      <td>13.005834</td>\n","      <td>12.308333</td>\n","      <td>14.168525</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 19:00:00</th>\n","      <td>7.940000</td>\n","      <td>12.055833</td>\n","      <td>11.445832</td>\n","      <td>10.077500</td>\n","      <td>11.97</td>\n","      <td>6.312500</td>\n","      <td>10.653333</td>\n","      <td>10.688333</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 20:00:00</th>\n","      <td>7.860000</td>\n","      <td>12.105833</td>\n","      <td>11.861666</td>\n","      <td>10.235833</td>\n","      <td>11.99</td>\n","      <td>6.388333</td>\n","      <td>10.814167</td>\n","      <td>11.164167</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 21:00:00</th>\n","      <td>7.730000</td>\n","      <td>11.985000</td>\n","      <td>11.997499</td>\n","      <td>10.275833</td>\n","      <td>12.03</td>\n","      <td>6.515000</td>\n","      <td>10.622500</td>\n","      <td>11.193333</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 22:00:00</th>\n","      <td>7.680000</td>\n","      <td>11.290833</td>\n","      <td>11.867499</td>\n","      <td>10.118333</td>\n","      <td>11.59</td>\n","      <td>6.639167</td>\n","      <td>10.530000</td>\n","      <td>10.932500</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-09-30 23:00:00</th>\n","      <td>7.520000</td>\n","      <td>10.650833</td>\n","      <td>11.540832</td>\n","      <td>9.859167</td>\n","      <td>10.88</td>\n","      <td>6.656667</td>\n","      <td>10.341667</td>\n","      <td>10.578333</td>\n","      <td>7.990000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9270043a-f7b1-44cf-8cc9-349c1eea675e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9270043a-f7b1-44cf-8cc9-349c1eea675e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9270043a-f7b1-44cf-8cc9-349c1eea675e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["rainfall_2019_summer = rainfall[(rainfall.index >= '2019-04-15 00:00:00') & (rainfall.index < '2019-10-01 00:00:00')]\n","rainfall_2019_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068834165,"user_tz":240,"elapsed":273,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"e7197a3a-b012-4a46-97a1-aa554a7dc78a","id":"NC9_uUd4vgmV"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2019-04-15 00:00:00     0.570000  12.055000  12.100833   12.647500   \n","2019-04-15 01:00:00     0.570000  12.045000  12.074533   12.564167   \n","2019-04-15 02:00:00     0.570000  12.037500  12.037500   12.468333   \n","2019-04-15 03:00:00     0.570000  12.041667  11.992500   12.355000   \n","2019-04-15 04:00:00     0.570000  12.030833  11.988333   12.238333   \n","...                          ...        ...        ...         ...   \n","2019-09-30 19:00:00     7.888146  11.909167  14.384167   13.902500   \n","2019-09-30 20:00:00     7.903642  12.031667  14.805833   14.286667   \n","2019-09-30 21:00:00     7.919139  11.975000  14.857500   14.356667   \n","2019-09-30 22:00:00     7.934636  11.725833  14.438333   14.001667   \n","2019-09-30 23:00:00     7.950132  11.270000  13.668333   13.294167   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2019-04-15 00:00:00    12.428333         12.951667  12.691667  12.480000   \n","2019-04-15 01:00:00    12.385000         12.895833  12.512500  12.394167   \n","2019-04-15 02:00:00    12.385000         12.818333  12.370000  12.325833   \n","2019-04-15 03:00:00    12.410000         12.727500  12.274167  12.310000   \n","2019-04-15 04:00:00    12.440000         12.611667  12.218333  12.295000   \n","...                          ...               ...        ...        ...   \n","2019-09-30 19:00:00    14.836667         14.631667  13.804167  13.189167   \n","2019-09-30 20:00:00    14.741667         14.753333  14.030000  13.645833   \n","2019-09-30 21:00:00    14.315000         14.587500  14.020000  14.008333   \n","2019-09-30 22:00:00    13.474167         14.137500  13.762500  13.582500   \n","2019-09-30 23:00:00    12.040833         13.419167  13.134167  12.771667   \n","\n","                        Hanlon  \n","Timestamp                       \n","2019-04-15 00:00:00  12.758333  \n","2019-04-15 01:00:00  12.709167  \n","2019-04-15 02:00:00  12.655000  \n","2019-04-15 03:00:00  12.581667  \n","2019-04-15 04:00:00  12.517500  \n","...                        ...  \n","2019-09-30 19:00:00  11.247500  \n","2019-09-30 20:00:00  11.321667  \n","2019-09-30 21:00:00  11.248333  \n","2019-09-30 22:00:00  10.778333  \n","2019-09-30 23:00:00  10.223333  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-dec3325e-d31a-4fac-9845-267b2c9ad70d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-04-15 00:00:00</th>\n","      <td>0.570000</td>\n","      <td>12.055000</td>\n","      <td>12.100833</td>\n","      <td>12.647500</td>\n","      <td>12.428333</td>\n","      <td>12.951667</td>\n","      <td>12.691667</td>\n","      <td>12.480000</td>\n","      <td>12.758333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 01:00:00</th>\n","      <td>0.570000</td>\n","      <td>12.045000</td>\n","      <td>12.074533</td>\n","      <td>12.564167</td>\n","      <td>12.385000</td>\n","      <td>12.895833</td>\n","      <td>12.512500</td>\n","      <td>12.394167</td>\n","      <td>12.709167</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 02:00:00</th>\n","      <td>0.570000</td>\n","      <td>12.037500</td>\n","      <td>12.037500</td>\n","      <td>12.468333</td>\n","      <td>12.385000</td>\n","      <td>12.818333</td>\n","      <td>12.370000</td>\n","      <td>12.325833</td>\n","      <td>12.655000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 03:00:00</th>\n","      <td>0.570000</td>\n","      <td>12.041667</td>\n","      <td>11.992500</td>\n","      <td>12.355000</td>\n","      <td>12.410000</td>\n","      <td>12.727500</td>\n","      <td>12.274167</td>\n","      <td>12.310000</td>\n","      <td>12.581667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-15 04:00:00</th>\n","      <td>0.570000</td>\n","      <td>12.030833</td>\n","      <td>11.988333</td>\n","      <td>12.238333</td>\n","      <td>12.440000</td>\n","      <td>12.611667</td>\n","      <td>12.218333</td>\n","      <td>12.295000</td>\n","      <td>12.517500</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 19:00:00</th>\n","      <td>7.888146</td>\n","      <td>11.909167</td>\n","      <td>14.384167</td>\n","      <td>13.902500</td>\n","      <td>14.836667</td>\n","      <td>14.631667</td>\n","      <td>13.804167</td>\n","      <td>13.189167</td>\n","      <td>11.247500</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 20:00:00</th>\n","      <td>7.903642</td>\n","      <td>12.031667</td>\n","      <td>14.805833</td>\n","      <td>14.286667</td>\n","      <td>14.741667</td>\n","      <td>14.753333</td>\n","      <td>14.030000</td>\n","      <td>13.645833</td>\n","      <td>11.321667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 21:00:00</th>\n","      <td>7.919139</td>\n","      <td>11.975000</td>\n","      <td>14.857500</td>\n","      <td>14.356667</td>\n","      <td>14.315000</td>\n","      <td>14.587500</td>\n","      <td>14.020000</td>\n","      <td>14.008333</td>\n","      <td>11.248333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 22:00:00</th>\n","      <td>7.934636</td>\n","      <td>11.725833</td>\n","      <td>14.438333</td>\n","      <td>14.001667</td>\n","      <td>13.474167</td>\n","      <td>14.137500</td>\n","      <td>13.762500</td>\n","      <td>13.582500</td>\n","      <td>10.778333</td>\n","    </tr>\n","    <tr>\n","      <th>2019-09-30 23:00:00</th>\n","      <td>7.950132</td>\n","      <td>11.270000</td>\n","      <td>13.668333</td>\n","      <td>13.294167</td>\n","      <td>12.040833</td>\n","      <td>13.419167</td>\n","      <td>13.134167</td>\n","      <td>12.771667</td>\n","      <td>10.223333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dec3325e-d31a-4fac-9845-267b2c9ad70d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dec3325e-d31a-4fac-9845-267b2c9ad70d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dec3325e-d31a-4fac-9845-267b2c9ad70d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["rainfall_2020_summer = rainfall[(rainfall.index >= '2020-04-15 00:00:00') & (rainfall.index < '2020-10-01 00:00:00')]\n","rainfall_2020_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068834167,"user_tz":240,"elapsed":6,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"aff8efac-50ec-4459-e5c2-7ec643abdfe6","id":"3hNcGL2TvgmV"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2020-04-15 00:00:00     0.170000  14.855000  13.034167   13.754166   \n","2020-04-15 01:00:00     0.170000  13.822500  12.597500   13.510832   \n","2020-04-15 02:00:00     0.170000  13.152500  12.239167   13.302499   \n","2020-04-15 03:00:00     0.170000  12.742500  12.032500   13.124166   \n","2020-04-15 04:00:00     0.170000  12.499167  11.864167   12.958332   \n","...                          ...        ...        ...         ...   \n","2020-09-30 19:00:00     0.186429   9.100000  11.930833   10.419999   \n","2020-09-30 20:00:00     0.186450   9.100000  11.852500   10.419999   \n","2020-09-30 21:00:00     0.186471   9.100000  11.462500   10.419999   \n","2020-09-30 22:00:00     0.186491   9.100000  11.069167   10.419999   \n","2020-09-30 23:00:00     0.186512   9.100000  10.592500   10.419999   \n","\n","                     Glen Morris  Breslau Victoria  Road32       York  \\\n","Timestamp                                                               \n","2020-04-15 00:00:00    22.076543              0.19    0.39  12.634166   \n","2020-04-15 01:00:00    22.064520              0.19    0.39  12.174166   \n","2020-04-15 02:00:00    22.052496              0.19    0.39  11.779166   \n","2020-04-15 03:00:00    22.040473              0.19    0.39  11.519999   \n","2020-04-15 04:00:00    22.028450              0.19    0.39  11.381666   \n","...                          ...               ...     ...        ...   \n","2020-09-30 19:00:00    11.818333              0.19    0.39  10.370241   \n","2020-09-30 20:00:00    11.172500              0.19    0.39  10.371540   \n","2020-09-30 21:00:00    10.867500              0.19    0.39  10.372840   \n","2020-09-30 22:00:00    10.395000              0.19    0.39  10.374140   \n","2020-09-30 23:00:00     9.725833              0.19    0.39  10.375439   \n","\n","                        Hanlon  \n","Timestamp                       \n","2020-04-15 00:00:00  12.700000  \n","2020-04-15 01:00:00  12.620833  \n","2020-04-15 02:00:00  12.582500  \n","2020-04-15 03:00:00  12.549167  \n","2020-04-15 04:00:00  12.499167  \n","...                        ...  \n","2020-09-30 19:00:00   8.680000  \n","2020-09-30 20:00:00   8.680000  \n","2020-09-30 21:00:00   8.680000  \n","2020-09-30 22:00:00   8.680000  \n","2020-09-30 23:00:00   8.680000  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-4976bee1-691b-42f9-8c35-11a21b11522f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-04-15 00:00:00</th>\n","      <td>0.170000</td>\n","      <td>14.855000</td>\n","      <td>13.034167</td>\n","      <td>13.754166</td>\n","      <td>22.076543</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>12.634166</td>\n","      <td>12.700000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 01:00:00</th>\n","      <td>0.170000</td>\n","      <td>13.822500</td>\n","      <td>12.597500</td>\n","      <td>13.510832</td>\n","      <td>22.064520</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>12.174166</td>\n","      <td>12.620833</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 02:00:00</th>\n","      <td>0.170000</td>\n","      <td>13.152500</td>\n","      <td>12.239167</td>\n","      <td>13.302499</td>\n","      <td>22.052496</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>11.779166</td>\n","      <td>12.582500</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 03:00:00</th>\n","      <td>0.170000</td>\n","      <td>12.742500</td>\n","      <td>12.032500</td>\n","      <td>13.124166</td>\n","      <td>22.040473</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>11.519999</td>\n","      <td>12.549167</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-15 04:00:00</th>\n","      <td>0.170000</td>\n","      <td>12.499167</td>\n","      <td>11.864167</td>\n","      <td>12.958332</td>\n","      <td>22.028450</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>11.381666</td>\n","      <td>12.499167</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 19:00:00</th>\n","      <td>0.186429</td>\n","      <td>9.100000</td>\n","      <td>11.930833</td>\n","      <td>10.419999</td>\n","      <td>11.818333</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>10.370241</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 20:00:00</th>\n","      <td>0.186450</td>\n","      <td>9.100000</td>\n","      <td>11.852500</td>\n","      <td>10.419999</td>\n","      <td>11.172500</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>10.371540</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 21:00:00</th>\n","      <td>0.186471</td>\n","      <td>9.100000</td>\n","      <td>11.462500</td>\n","      <td>10.419999</td>\n","      <td>10.867500</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>10.372840</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 22:00:00</th>\n","      <td>0.186491</td>\n","      <td>9.100000</td>\n","      <td>11.069167</td>\n","      <td>10.419999</td>\n","      <td>10.395000</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>10.374140</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-09-30 23:00:00</th>\n","      <td>0.186512</td>\n","      <td>9.100000</td>\n","      <td>10.592500</td>\n","      <td>10.419999</td>\n","      <td>9.725833</td>\n","      <td>0.19</td>\n","      <td>0.39</td>\n","      <td>10.375439</td>\n","      <td>8.680000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4976bee1-691b-42f9-8c35-11a21b11522f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4976bee1-691b-42f9-8c35-11a21b11522f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4976bee1-691b-42f9-8c35-11a21b11522f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["rainfall_2021_summer = rainfall[(rainfall.index >= '2021-04-15 00:00:00') & (rainfall.index < '2021-10-01 00:00:00')]\n","rainfall_2021_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068834461,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"989342b7-19e6-4fed-b675-32e750ee9001","id":"-ErhA6amvgmV"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2021-04-15 00:00:00    11.698333  11.522500  10.442500   11.801666   \n","2021-04-15 01:00:00    11.475000  11.099167  10.308333   11.551666   \n","2021-04-15 02:00:00    11.370833  10.755000  10.194167   11.195833   \n","2021-04-15 03:00:00    11.335000  10.511667  10.085833   10.853333   \n","2021-04-15 04:00:00    11.327500  10.305833  10.050000   10.578333   \n","...                          ...        ...        ...         ...   \n","2021-09-30 19:00:00     8.890846  11.070000  10.798333    7.068333   \n","2021-09-30 20:00:00     8.882077  11.094167  10.788333    7.137500   \n","2021-09-30 21:00:00     8.873308  11.000000  10.695833    7.199167   \n","2021-09-30 22:00:00     8.864538  10.788333  10.499167    7.265000   \n","2021-09-30 23:00:00     8.855769  10.608333  10.275000    7.320833   \n","\n","                     Glen Morris  Breslau Victoria     Road32      York  \\\n","Timestamp                                                                 \n","2021-04-15 00:00:00    11.576667         11.738333  10.985000  8.477500   \n","2021-04-15 01:00:00    10.983333         11.584167  10.644167  8.476667   \n","2021-04-15 02:00:00    10.586667         11.340833  10.279167  8.468333   \n","2021-04-15 03:00:00    10.325833         11.140833   9.903334  8.450833   \n","2021-04-15 04:00:00    10.202500         10.898333   9.665000  8.451667   \n","...                          ...               ...        ...       ...   \n","2021-09-30 19:00:00    12.765000         10.281667  11.872500  9.264167   \n","2021-09-30 20:00:00    12.628333         10.414167  12.306667  9.286667   \n","2021-09-30 21:00:00    12.390000         10.520000  12.655833  9.263333   \n","2021-09-30 22:00:00    11.984167         10.470000  12.841667  9.175000   \n","2021-09-30 23:00:00    11.609167         10.405833  12.576667  9.050000   \n","\n","                        Hanlon  \n","Timestamp                       \n","2021-04-15 00:00:00  10.548333  \n","2021-04-15 01:00:00  10.540000  \n","2021-04-15 02:00:00  10.473333  \n","2021-04-15 03:00:00  10.356667  \n","2021-04-15 04:00:00  10.171667  \n","...                        ...  \n","2021-09-30 19:00:00  10.565833  \n","2021-09-30 20:00:00  10.383333  \n","2021-09-30 21:00:00  10.375833  \n","2021-09-30 22:00:00  10.146667  \n","2021-09-30 23:00:00   9.712500  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-effd17e8-832d-454a-a430-9592eee289fe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-04-15 00:00:00</th>\n","      <td>11.698333</td>\n","      <td>11.522500</td>\n","      <td>10.442500</td>\n","      <td>11.801666</td>\n","      <td>11.576667</td>\n","      <td>11.738333</td>\n","      <td>10.985000</td>\n","      <td>8.477500</td>\n","      <td>10.548333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 01:00:00</th>\n","      <td>11.475000</td>\n","      <td>11.099167</td>\n","      <td>10.308333</td>\n","      <td>11.551666</td>\n","      <td>10.983333</td>\n","      <td>11.584167</td>\n","      <td>10.644167</td>\n","      <td>8.476667</td>\n","      <td>10.540000</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 02:00:00</th>\n","      <td>11.370833</td>\n","      <td>10.755000</td>\n","      <td>10.194167</td>\n","      <td>11.195833</td>\n","      <td>10.586667</td>\n","      <td>11.340833</td>\n","      <td>10.279167</td>\n","      <td>8.468333</td>\n","      <td>10.473333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 03:00:00</th>\n","      <td>11.335000</td>\n","      <td>10.511667</td>\n","      <td>10.085833</td>\n","      <td>10.853333</td>\n","      <td>10.325833</td>\n","      <td>11.140833</td>\n","      <td>9.903334</td>\n","      <td>8.450833</td>\n","      <td>10.356667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-15 04:00:00</th>\n","      <td>11.327500</td>\n","      <td>10.305833</td>\n","      <td>10.050000</td>\n","      <td>10.578333</td>\n","      <td>10.202500</td>\n","      <td>10.898333</td>\n","      <td>9.665000</td>\n","      <td>8.451667</td>\n","      <td>10.171667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 19:00:00</th>\n","      <td>8.890846</td>\n","      <td>11.070000</td>\n","      <td>10.798333</td>\n","      <td>7.068333</td>\n","      <td>12.765000</td>\n","      <td>10.281667</td>\n","      <td>11.872500</td>\n","      <td>9.264167</td>\n","      <td>10.565833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 20:00:00</th>\n","      <td>8.882077</td>\n","      <td>11.094167</td>\n","      <td>10.788333</td>\n","      <td>7.137500</td>\n","      <td>12.628333</td>\n","      <td>10.414167</td>\n","      <td>12.306667</td>\n","      <td>9.286667</td>\n","      <td>10.383333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 21:00:00</th>\n","      <td>8.873308</td>\n","      <td>11.000000</td>\n","      <td>10.695833</td>\n","      <td>7.199167</td>\n","      <td>12.390000</td>\n","      <td>10.520000</td>\n","      <td>12.655833</td>\n","      <td>9.263333</td>\n","      <td>10.375833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 22:00:00</th>\n","      <td>8.864538</td>\n","      <td>10.788333</td>\n","      <td>10.499167</td>\n","      <td>7.265000</td>\n","      <td>11.984167</td>\n","      <td>10.470000</td>\n","      <td>12.841667</td>\n","      <td>9.175000</td>\n","      <td>10.146667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-09-30 23:00:00</th>\n","      <td>8.855769</td>\n","      <td>10.608333</td>\n","      <td>10.275000</td>\n","      <td>7.320833</td>\n","      <td>11.609167</td>\n","      <td>10.405833</td>\n","      <td>12.576667</td>\n","      <td>9.050000</td>\n","      <td>9.712500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-effd17e8-832d-454a-a430-9592eee289fe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-effd17e8-832d-454a-a430-9592eee289fe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-effd17e8-832d-454a-a430-9592eee289fe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["rainfall_2022_summer = rainfall[(rainfall.index >= '2022-04-15 00:00:00') & (rainfall.index < '2022-10-01 00:00:00')]\n","rainfall_2022_summer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068835137,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"e4a2901b-e9ac-4e3e-932c-e266cfe42f20","id":"-0Y0F5G-vgmW"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2022-04-15 00:00:00    13.324315  12.593333  12.225833   12.789167   \n","2022-04-15 01:00:00    13.326901  11.582500  11.467500   12.282500   \n","2022-04-15 02:00:00    13.329488  10.875000  10.861667   11.796667   \n","2022-04-15 03:00:00    13.332074  10.453333  10.458333   11.390833   \n","2022-04-15 04:00:00    13.334660  10.164167  10.205833   11.010833   \n","...                          ...        ...        ...         ...   \n","2022-09-30 19:00:00    10.010000  15.132500  14.263333   12.941667   \n","2022-09-30 20:00:00     9.740833  15.016667  14.678333   13.486667   \n","2022-09-30 21:00:00     9.274167  14.635833  14.755833   13.950833   \n","2022-09-30 22:00:00     8.915833  13.927500  14.387500   14.201667   \n","2022-09-30 23:00:00     8.682500  12.866667  13.767500   13.966667   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2022-04-15 00:00:00    10.825833         12.870000  12.149999  12.393333   \n","2022-04-15 01:00:00    10.230000         12.229167  12.149999  11.587500   \n","2022-04-15 02:00:00     9.670000         11.745833  12.149999  10.896667   \n","2022-04-15 03:00:00     9.193333         11.369167  12.149999  10.390833   \n","2022-04-15 04:00:00     8.805000         11.034167  12.149999  10.097500   \n","...                          ...               ...        ...        ...   \n","2022-09-30 19:00:00    15.660833         15.319166  13.922500  14.066667   \n","2022-09-30 20:00:00    15.557500         15.541666  14.282500  14.547500   \n","2022-09-30 21:00:00    15.119167         15.355832  14.315000  14.846667   \n","2022-09-30 22:00:00    14.199167         14.840832  14.090833  14.540000   \n","2022-09-30 23:00:00    12.809167         13.759999  13.680833  13.784167   \n","\n","                        Hanlon  \n","Timestamp                       \n","2022-04-15 00:00:00  11.200834  \n","2022-04-15 01:00:00  11.048334  \n","2022-04-15 02:00:00  10.970001  \n","2022-04-15 03:00:00  10.919168  \n","2022-04-15 04:00:00  10.828334  \n","...                        ...  \n","2022-09-30 19:00:00  11.015833  \n","2022-09-30 20:00:00  11.125833  \n","2022-09-30 21:00:00  11.115000  \n","2022-09-30 22:00:00  10.759167  \n","2022-09-30 23:00:00  10.215000  \n","\n","[4056 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-a2d0f47c-d66e-4d22-bc1d-994d375be6a6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-04-15 00:00:00</th>\n","      <td>13.324315</td>\n","      <td>12.593333</td>\n","      <td>12.225833</td>\n","      <td>12.789167</td>\n","      <td>10.825833</td>\n","      <td>12.870000</td>\n","      <td>12.149999</td>\n","      <td>12.393333</td>\n","      <td>11.200834</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 01:00:00</th>\n","      <td>13.326901</td>\n","      <td>11.582500</td>\n","      <td>11.467500</td>\n","      <td>12.282500</td>\n","      <td>10.230000</td>\n","      <td>12.229167</td>\n","      <td>12.149999</td>\n","      <td>11.587500</td>\n","      <td>11.048334</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 02:00:00</th>\n","      <td>13.329488</td>\n","      <td>10.875000</td>\n","      <td>10.861667</td>\n","      <td>11.796667</td>\n","      <td>9.670000</td>\n","      <td>11.745833</td>\n","      <td>12.149999</td>\n","      <td>10.896667</td>\n","      <td>10.970001</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 03:00:00</th>\n","      <td>13.332074</td>\n","      <td>10.453333</td>\n","      <td>10.458333</td>\n","      <td>11.390833</td>\n","      <td>9.193333</td>\n","      <td>11.369167</td>\n","      <td>12.149999</td>\n","      <td>10.390833</td>\n","      <td>10.919168</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-15 04:00:00</th>\n","      <td>13.334660</td>\n","      <td>10.164167</td>\n","      <td>10.205833</td>\n","      <td>11.010833</td>\n","      <td>8.805000</td>\n","      <td>11.034167</td>\n","      <td>12.149999</td>\n","      <td>10.097500</td>\n","      <td>10.828334</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 19:00:00</th>\n","      <td>10.010000</td>\n","      <td>15.132500</td>\n","      <td>14.263333</td>\n","      <td>12.941667</td>\n","      <td>15.660833</td>\n","      <td>15.319166</td>\n","      <td>13.922500</td>\n","      <td>14.066667</td>\n","      <td>11.015833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 20:00:00</th>\n","      <td>9.740833</td>\n","      <td>15.016667</td>\n","      <td>14.678333</td>\n","      <td>13.486667</td>\n","      <td>15.557500</td>\n","      <td>15.541666</td>\n","      <td>14.282500</td>\n","      <td>14.547500</td>\n","      <td>11.125833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 21:00:00</th>\n","      <td>9.274167</td>\n","      <td>14.635833</td>\n","      <td>14.755833</td>\n","      <td>13.950833</td>\n","      <td>15.119167</td>\n","      <td>15.355832</td>\n","      <td>14.315000</td>\n","      <td>14.846667</td>\n","      <td>11.115000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 22:00:00</th>\n","      <td>8.915833</td>\n","      <td>13.927500</td>\n","      <td>14.387500</td>\n","      <td>14.201667</td>\n","      <td>14.199167</td>\n","      <td>14.840832</td>\n","      <td>14.090833</td>\n","      <td>14.540000</td>\n","      <td>10.759167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-09-30 23:00:00</th>\n","      <td>8.682500</td>\n","      <td>12.866667</td>\n","      <td>13.767500</td>\n","      <td>13.966667</td>\n","      <td>12.809167</td>\n","      <td>13.759999</td>\n","      <td>13.680833</td>\n","      <td>13.784167</td>\n","      <td>10.215000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4056 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2d0f47c-d66e-4d22-bc1d-994d375be6a6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a2d0f47c-d66e-4d22-bc1d-994d375be6a6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a2d0f47c-d66e-4d22-bc1d-994d375be6a6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["rainfall_2018_summer.to_csv(\"DO2018Summer.csv\")\n","rainfall_2019_summer.to_csv(\"DO2019Summer.csv\")\n","rainfall_2019_summer.to_csv(\"DO2019Summer.csv\")\n","rainfall_2020_summer.to_csv(\"DO2020Summer.csv\")\n","rainfall_2021_summer.to_csv(\"DO2021Summer.csv\")\n","rainfall_2022_summer.to_csv(\"DO2022Summer.csv\")"],"metadata":{"executionInfo":{"status":"ok","timestamp":1688068865329,"user_tz":240,"elapsed":690,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"id":"xgoBHOgPvgmW"},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["download = files.download(\"DO2018Summer.csv\")\n","download = files.download(\"DO2019Summer.csv\")\n","download = files.download(\"DO2020Summer.csv\")\n","download = files.download(\"DO2021Summer.csv\")\n","download = files.download(\"DO2022Summer.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"executionInfo":{"status":"ok","timestamp":1688068886176,"user_tz":240,"elapsed":191,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"5ef8ccd1-e9cd-4769-dccc-cdc4c77794a3","id":"Yg4zIbk3vgmW"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_31a32cc1-ff04-4da8-8c0b-91fab2db7e70\", \"DO2018Summer.csv\", 445528)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_9d0fdac8-f4fc-46b2-9965-efea7ec85837\", \"DO2019Summer.csv\", 442752)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_7339b612-c789-47fb-beaf-e70cff89144b\", \"DO2020Summer.csv\", 423268)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_c0f2f587-351b-4b29-bcad-83a3579989f0\", \"DO2021Summer.csv\", 456382)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_5e5a3082-ab88-44b1-8776-c5c0a13a2996\", \"DO2022Summer.csv\", 471037)"]},"metadata":{}}]},{"cell_type":"markdown","source":["# **Winter Rainfall**"],"metadata":{"id":"ROfYXxmavgmW"}},{"cell_type":"code","source":["rainfall_2018_winter = rainfall[(rainfall.index < '2019-04-15 00:00:00') & (rainfall.index >= '2018-10-01 00:00:00')]\n","rainfall_2018_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068898622,"user_tz":240,"elapsed":205,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"b3b1b837-6dda-4c00-c490-2f2855344136","id":"gPNMX_YevgmW"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2018-10-01 00:00:00         7.38  10.138333  11.011666    9.579167   \n","2018-10-01 01:00:00         7.34   9.758333  10.421666    9.335000   \n","2018-10-01 02:00:00         7.35   9.492500   9.915832    9.126667   \n","2018-10-01 03:00:00         7.33   9.361667   9.528332    8.960000   \n","2018-10-01 04:00:00         7.40   9.247500   9.262499    8.829167   \n","...                          ...        ...        ...         ...   \n","2019-04-14 19:00:00         0.57  12.084167  12.169167   12.519167   \n","2019-04-14 20:00:00         0.57  12.095833  12.197500   12.628333   \n","2019-04-14 21:00:00         0.57  12.083333  12.200833   12.694167   \n","2019-04-14 22:00:00         0.57  12.093333  12.176667   12.713333   \n","2019-04-14 23:00:00         0.57  12.080000  12.129167   12.700000   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2018-10-01 00:00:00    10.150000          6.589167   9.933333  10.154167   \n","2018-10-01 01:00:00     9.510000          6.494167   9.594167   9.650833   \n","2018-10-01 02:00:00     9.080000          6.170833   9.409167   9.200000   \n","2018-10-01 03:00:00     8.770000          5.705000   9.309167   8.840000   \n","2018-10-01 04:00:00     8.580000          5.941667   9.216667   8.505000   \n","...                          ...               ...        ...        ...   \n","2019-04-14 19:00:00    12.958333         12.805833  13.465833  12.815833   \n","2019-04-14 20:00:00    12.890000         12.901667  13.348333  12.754167   \n","2019-04-14 21:00:00    12.736667         12.972500  13.164167  12.716667   \n","2019-04-14 22:00:00    12.610000         13.000833  12.998333  12.662500   \n","2019-04-14 23:00:00    12.497500         12.991667  12.857500  12.577500   \n","\n","                        Hanlon  \n","Timestamp                       \n","2018-10-01 00:00:00   7.990000  \n","2018-10-01 01:00:00   7.990000  \n","2018-10-01 02:00:00   7.990000  \n","2018-10-01 03:00:00   7.990000  \n","2018-10-01 04:00:00   7.990000  \n","...                        ...  \n","2019-04-14 19:00:00  12.931667  \n","2019-04-14 20:00:00  12.990000  \n","2019-04-14 21:00:00  12.950833  \n","2019-04-14 22:00:00  12.876667  \n","2019-04-14 23:00:00  12.825000  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-816e3e7d-9681-4240-98a1-6278351ded00\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-10-01 00:00:00</th>\n","      <td>7.38</td>\n","      <td>10.138333</td>\n","      <td>11.011666</td>\n","      <td>9.579167</td>\n","      <td>10.150000</td>\n","      <td>6.589167</td>\n","      <td>9.933333</td>\n","      <td>10.154167</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 01:00:00</th>\n","      <td>7.34</td>\n","      <td>9.758333</td>\n","      <td>10.421666</td>\n","      <td>9.335000</td>\n","      <td>9.510000</td>\n","      <td>6.494167</td>\n","      <td>9.594167</td>\n","      <td>9.650833</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 02:00:00</th>\n","      <td>7.35</td>\n","      <td>9.492500</td>\n","      <td>9.915832</td>\n","      <td>9.126667</td>\n","      <td>9.080000</td>\n","      <td>6.170833</td>\n","      <td>9.409167</td>\n","      <td>9.200000</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 03:00:00</th>\n","      <td>7.33</td>\n","      <td>9.361667</td>\n","      <td>9.528332</td>\n","      <td>8.960000</td>\n","      <td>8.770000</td>\n","      <td>5.705000</td>\n","      <td>9.309167</td>\n","      <td>8.840000</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-10-01 04:00:00</th>\n","      <td>7.40</td>\n","      <td>9.247500</td>\n","      <td>9.262499</td>\n","      <td>8.829167</td>\n","      <td>8.580000</td>\n","      <td>5.941667</td>\n","      <td>9.216667</td>\n","      <td>8.505000</td>\n","      <td>7.990000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 19:00:00</th>\n","      <td>0.57</td>\n","      <td>12.084167</td>\n","      <td>12.169167</td>\n","      <td>12.519167</td>\n","      <td>12.958333</td>\n","      <td>12.805833</td>\n","      <td>13.465833</td>\n","      <td>12.815833</td>\n","      <td>12.931667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 20:00:00</th>\n","      <td>0.57</td>\n","      <td>12.095833</td>\n","      <td>12.197500</td>\n","      <td>12.628333</td>\n","      <td>12.890000</td>\n","      <td>12.901667</td>\n","      <td>13.348333</td>\n","      <td>12.754167</td>\n","      <td>12.990000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 21:00:00</th>\n","      <td>0.57</td>\n","      <td>12.083333</td>\n","      <td>12.200833</td>\n","      <td>12.694167</td>\n","      <td>12.736667</td>\n","      <td>12.972500</td>\n","      <td>13.164167</td>\n","      <td>12.716667</td>\n","      <td>12.950833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 22:00:00</th>\n","      <td>0.57</td>\n","      <td>12.093333</td>\n","      <td>12.176667</td>\n","      <td>12.713333</td>\n","      <td>12.610000</td>\n","      <td>13.000833</td>\n","      <td>12.998333</td>\n","      <td>12.662500</td>\n","      <td>12.876667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-04-14 23:00:00</th>\n","      <td>0.57</td>\n","      <td>12.080000</td>\n","      <td>12.129167</td>\n","      <td>12.700000</td>\n","      <td>12.497500</td>\n","      <td>12.991667</td>\n","      <td>12.857500</td>\n","      <td>12.577500</td>\n","      <td>12.825000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-816e3e7d-9681-4240-98a1-6278351ded00')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-816e3e7d-9681-4240-98a1-6278351ded00 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-816e3e7d-9681-4240-98a1-6278351ded00');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["rainfall_2019_winter = rainfall[(rainfall.index < '2020-04-15 00:00:00') & (rainfall.index >= '2019-10-01 00:00:00')]\n","rainfall_2019_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068899029,"user_tz":240,"elapsed":4,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"37b1f9e6-823b-4ff9-f9d5-463bb6118912","id":"Ms6txoWxvgmX"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2019-10-01 00:00:00     7.965629  10.622500  12.807500   12.445000   \n","2019-10-01 01:00:00     7.981126   9.929167  11.890000   11.660000   \n","2019-10-01 02:00:00     7.996623   9.284167  11.045833   11.012500   \n","2019-10-01 03:00:00     8.012119   8.767500  10.335000   10.484167   \n","2019-10-01 04:00:00     8.027616   8.397500   9.788333    9.993333   \n","...                          ...        ...        ...         ...   \n","2020-04-14 19:00:00     0.170000  17.744167  14.344167   13.836666   \n","2020-04-14 20:00:00     0.170000  17.560833  14.414167   14.020832   \n","2020-04-14 21:00:00     0.170000  17.485833  14.258333   14.124166   \n","2020-04-14 22:00:00     0.170000  17.034167  13.978333   14.116666   \n","2020-04-14 23:00:00     0.170000  16.051667  13.542500   13.977499   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2019-10-01 00:00:00    10.655833         12.582500  12.010000  11.948333   \n","2019-10-01 01:00:00     9.710833         12.070833  10.884167  11.085000   \n","2019-10-01 02:00:00     9.057500         11.666667  10.007500  10.184167   \n","2019-10-01 03:00:00     8.615833         11.304167   9.540000   9.395000   \n","2019-10-01 04:00:00     8.320000         11.085000   9.333333   8.750000   \n","...                          ...               ...        ...        ...   \n","2020-04-14 19:00:00    22.136660          0.190000   0.390000  14.200832   \n","2020-04-14 20:00:00    22.124636          0.190000   0.390000  14.048332   \n","2020-04-14 21:00:00    22.112613          0.190000   0.390000  13.800832   \n","2020-04-14 22:00:00    22.100590          0.190000   0.390000  13.489166   \n","2020-04-14 23:00:00    22.088566          0.190000   0.390000  13.104166   \n","\n","                        Hanlon  \n","Timestamp                       \n","2019-10-01 00:00:00  10.087500  \n","2019-10-01 01:00:00  10.146667  \n","2019-10-01 02:00:00  10.175000  \n","2019-10-01 03:00:00  10.135833  \n","2019-10-01 04:00:00  10.132500  \n","...                        ...  \n","2020-04-14 19:00:00  12.946667  \n","2020-04-14 20:00:00  13.019167  \n","2020-04-14 21:00:00  13.060833  \n","2020-04-14 22:00:00  13.017500  \n","2020-04-14 23:00:00  12.876667  \n","\n","[4728 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-81ddb4c1-e189-48b1-b8d5-1637ff45a9d2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-10-01 00:00:00</th>\n","      <td>7.965629</td>\n","      <td>10.622500</td>\n","      <td>12.807500</td>\n","      <td>12.445000</td>\n","      <td>10.655833</td>\n","      <td>12.582500</td>\n","      <td>12.010000</td>\n","      <td>11.948333</td>\n","      <td>10.087500</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 01:00:00</th>\n","      <td>7.981126</td>\n","      <td>9.929167</td>\n","      <td>11.890000</td>\n","      <td>11.660000</td>\n","      <td>9.710833</td>\n","      <td>12.070833</td>\n","      <td>10.884167</td>\n","      <td>11.085000</td>\n","      <td>10.146667</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 02:00:00</th>\n","      <td>7.996623</td>\n","      <td>9.284167</td>\n","      <td>11.045833</td>\n","      <td>11.012500</td>\n","      <td>9.057500</td>\n","      <td>11.666667</td>\n","      <td>10.007500</td>\n","      <td>10.184167</td>\n","      <td>10.175000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 03:00:00</th>\n","      <td>8.012119</td>\n","      <td>8.767500</td>\n","      <td>10.335000</td>\n","      <td>10.484167</td>\n","      <td>8.615833</td>\n","      <td>11.304167</td>\n","      <td>9.540000</td>\n","      <td>9.395000</td>\n","      <td>10.135833</td>\n","    </tr>\n","    <tr>\n","      <th>2019-10-01 04:00:00</th>\n","      <td>8.027616</td>\n","      <td>8.397500</td>\n","      <td>9.788333</td>\n","      <td>9.993333</td>\n","      <td>8.320000</td>\n","      <td>11.085000</td>\n","      <td>9.333333</td>\n","      <td>8.750000</td>\n","      <td>10.132500</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 19:00:00</th>\n","      <td>0.170000</td>\n","      <td>17.744167</td>\n","      <td>14.344167</td>\n","      <td>13.836666</td>\n","      <td>22.136660</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>14.200832</td>\n","      <td>12.946667</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 20:00:00</th>\n","      <td>0.170000</td>\n","      <td>17.560833</td>\n","      <td>14.414167</td>\n","      <td>14.020832</td>\n","      <td>22.124636</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>14.048332</td>\n","      <td>13.019167</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 21:00:00</th>\n","      <td>0.170000</td>\n","      <td>17.485833</td>\n","      <td>14.258333</td>\n","      <td>14.124166</td>\n","      <td>22.112613</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>13.800832</td>\n","      <td>13.060833</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 22:00:00</th>\n","      <td>0.170000</td>\n","      <td>17.034167</td>\n","      <td>13.978333</td>\n","      <td>14.116666</td>\n","      <td>22.100590</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>13.489166</td>\n","      <td>13.017500</td>\n","    </tr>\n","    <tr>\n","      <th>2020-04-14 23:00:00</th>\n","      <td>0.170000</td>\n","      <td>16.051667</td>\n","      <td>13.542500</td>\n","      <td>13.977499</td>\n","      <td>22.088566</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>13.104166</td>\n","      <td>12.876667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4728 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-81ddb4c1-e189-48b1-b8d5-1637ff45a9d2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-81ddb4c1-e189-48b1-b8d5-1637ff45a9d2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-81ddb4c1-e189-48b1-b8d5-1637ff45a9d2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["rainfall_2020_winter = rainfall[(rainfall.index < '2021-04-15 00:00:00') & (rainfall.index >= '2020-10-01 00:00:00')]\n","rainfall_2020_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068899347,"user_tz":240,"elapsed":5,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"a1072801-fa86-47e6-b7a1-ffd8e6a763b8","id":"ZuM_TC2KvgmX"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2020-10-01 00:00:00     0.186533   9.100000  10.146667   10.419999   \n","2020-10-01 01:00:00     0.186553   9.100000   9.668333   10.419999   \n","2020-10-01 02:00:00     0.186574   9.100000   9.285833   10.419999   \n","2020-10-01 03:00:00     0.186595   9.100000   9.022500   10.419999   \n","2020-10-01 04:00:00     0.186615   9.100000   8.865000   10.419999   \n","...                          ...        ...        ...         ...   \n","2021-04-14 19:00:00    13.698333  13.345000  10.846667   11.574166   \n","2021-04-14 20:00:00    13.260833  13.459167  10.915000   11.887500   \n","2021-04-14 21:00:00    12.857500  13.178333  10.865000   12.068333   \n","2021-04-14 22:00:00    12.279167  12.606667  10.717500   11.989166   \n","2021-04-14 23:00:00    12.150000  11.945833  10.590000   11.862500   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2020-10-01 00:00:00     9.247500          0.190000   0.390000  10.376739   \n","2020-10-01 01:00:00     8.925000          0.190000   0.390000  10.378038   \n","2020-10-01 02:00:00     8.724167          0.190000   0.390000  10.379338   \n","2020-10-01 03:00:00     8.574167          0.190000   0.390000  10.380638   \n","2020-10-01 04:00:00     8.527500          0.190000   0.390000  10.381937   \n","...                          ...               ...        ...        ...   \n","2021-04-14 19:00:00    13.703333         11.672500  11.815834   8.467500   \n","2021-04-14 20:00:00    13.621667         11.880833  12.043334   8.481667   \n","2021-04-14 21:00:00    13.336667         11.953333  12.103334   8.485000   \n","2021-04-14 22:00:00    12.726667         11.915000  11.881667   8.474167   \n","2021-04-14 23:00:00    12.185000         11.781667  11.501667   8.479167   \n","\n","                        Hanlon  \n","Timestamp                       \n","2020-10-01 00:00:00   8.680000  \n","2020-10-01 01:00:00   8.680000  \n","2020-10-01 02:00:00   8.680000  \n","2020-10-01 03:00:00   8.680000  \n","2020-10-01 04:00:00   8.680000  \n","...                        ...  \n","2021-04-14 19:00:00   9.931667  \n","2021-04-14 20:00:00  10.162500  \n","2021-04-14 21:00:00  10.373333  \n","2021-04-14 22:00:00  10.513333  \n","2021-04-14 23:00:00  10.585833  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-33f6050e-3a69-40cd-9cbc-5e37815ad756\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-10-01 00:00:00</th>\n","      <td>0.186533</td>\n","      <td>9.100000</td>\n","      <td>10.146667</td>\n","      <td>10.419999</td>\n","      <td>9.247500</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>10.376739</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 01:00:00</th>\n","      <td>0.186553</td>\n","      <td>9.100000</td>\n","      <td>9.668333</td>\n","      <td>10.419999</td>\n","      <td>8.925000</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>10.378038</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 02:00:00</th>\n","      <td>0.186574</td>\n","      <td>9.100000</td>\n","      <td>9.285833</td>\n","      <td>10.419999</td>\n","      <td>8.724167</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>10.379338</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 03:00:00</th>\n","      <td>0.186595</td>\n","      <td>9.100000</td>\n","      <td>9.022500</td>\n","      <td>10.419999</td>\n","      <td>8.574167</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>10.380638</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-10-01 04:00:00</th>\n","      <td>0.186615</td>\n","      <td>9.100000</td>\n","      <td>8.865000</td>\n","      <td>10.419999</td>\n","      <td>8.527500</td>\n","      <td>0.190000</td>\n","      <td>0.390000</td>\n","      <td>10.381937</td>\n","      <td>8.680000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 19:00:00</th>\n","      <td>13.698333</td>\n","      <td>13.345000</td>\n","      <td>10.846667</td>\n","      <td>11.574166</td>\n","      <td>13.703333</td>\n","      <td>11.672500</td>\n","      <td>11.815834</td>\n","      <td>8.467500</td>\n","      <td>9.931667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 20:00:00</th>\n","      <td>13.260833</td>\n","      <td>13.459167</td>\n","      <td>10.915000</td>\n","      <td>11.887500</td>\n","      <td>13.621667</td>\n","      <td>11.880833</td>\n","      <td>12.043334</td>\n","      <td>8.481667</td>\n","      <td>10.162500</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 21:00:00</th>\n","      <td>12.857500</td>\n","      <td>13.178333</td>\n","      <td>10.865000</td>\n","      <td>12.068333</td>\n","      <td>13.336667</td>\n","      <td>11.953333</td>\n","      <td>12.103334</td>\n","      <td>8.485000</td>\n","      <td>10.373333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 22:00:00</th>\n","      <td>12.279167</td>\n","      <td>12.606667</td>\n","      <td>10.717500</td>\n","      <td>11.989166</td>\n","      <td>12.726667</td>\n","      <td>11.915000</td>\n","      <td>11.881667</td>\n","      <td>8.474167</td>\n","      <td>10.513333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-04-14 23:00:00</th>\n","      <td>12.150000</td>\n","      <td>11.945833</td>\n","      <td>10.590000</td>\n","      <td>11.862500</td>\n","      <td>12.185000</td>\n","      <td>11.781667</td>\n","      <td>11.501667</td>\n","      <td>8.479167</td>\n","      <td>10.585833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33f6050e-3a69-40cd-9cbc-5e37815ad756')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-33f6050e-3a69-40cd-9cbc-5e37815ad756 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-33f6050e-3a69-40cd-9cbc-5e37815ad756');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["rainfall_2021_winter = rainfall[(rainfall.index < '2022-04-15 00:00:00') & (rainfall.index >= '2021-10-01 00:00:00')]\n","rainfall_2021_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068899847,"user_tz":240,"elapsed":4,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"1d8bcca5-1d57-4823-a552-20ffc60bc76b","id":"WrlIkjWDvgmX"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2021-10-01 00:00:00     8.847000  10.453333  10.085000    7.167500   \n","2021-10-01 01:00:00     8.838231  10.354167   9.939167    6.926667   \n","2021-10-01 02:00:00     8.829462  10.315000   9.856667    6.690000   \n","2021-10-01 03:00:00     8.820692  10.267500   9.816667    6.435000   \n","2021-10-01 04:00:00     8.811923  10.225833   9.800000    6.215000   \n","...                          ...        ...        ...         ...   \n","2022-04-14 19:00:00    13.311384  15.301667  13.745000   13.427500   \n","2022-04-14 20:00:00    13.313970  15.224167  13.956667   13.687500   \n","2022-04-14 21:00:00    13.316557  14.927500  13.881667   13.645000   \n","2022-04-14 22:00:00    13.319143  14.369167  13.562500   13.450833   \n","2022-04-14 23:00:00    13.321729  13.636667  12.970000   13.226667   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2021-10-01 00:00:00    11.353333         10.256667  11.632500   8.930000   \n","2021-10-01 01:00:00    11.203333         10.143333  10.817500   8.822500   \n","2021-10-01 02:00:00    11.135000          9.947500  10.391667   8.737500   \n","2021-10-01 03:00:00    11.110833          9.815833  10.000833   8.708333   \n","2021-10-01 04:00:00    11.110000          9.610000   9.442500   8.719167   \n","...                          ...               ...        ...        ...   \n","2022-04-14 19:00:00    11.980833         13.898333  12.149999  14.420833   \n","2022-04-14 20:00:00    12.227500         14.207500  12.149999  14.573333   \n","2022-04-14 21:00:00    12.203333         14.267500  12.149999  14.390000   \n","2022-04-14 22:00:00    11.866667         14.067500  12.149999  13.930000   \n","2022-04-14 23:00:00    11.405000         13.565833  12.149999  13.208333   \n","\n","                        Hanlon  \n","Timestamp                       \n","2021-10-01 00:00:00   9.598333  \n","2021-10-01 01:00:00   9.576667  \n","2021-10-01 02:00:00   9.542500  \n","2021-10-01 03:00:00   9.495833  \n","2021-10-01 04:00:00   9.512500  \n","...                        ...  \n","2022-04-14 19:00:00  11.599168  \n","2022-04-14 20:00:00  11.578334  \n","2022-04-14 21:00:00  11.530001  \n","2022-04-14 22:00:00  11.437501  \n","2022-04-14 23:00:00  11.359168  \n","\n","[4704 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-539b25d8-f0ad-42b9-879b-4cb45b59b466\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2021-10-01 00:00:00</th>\n","      <td>8.847000</td>\n","      <td>10.453333</td>\n","      <td>10.085000</td>\n","      <td>7.167500</td>\n","      <td>11.353333</td>\n","      <td>10.256667</td>\n","      <td>11.632500</td>\n","      <td>8.930000</td>\n","      <td>9.598333</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 01:00:00</th>\n","      <td>8.838231</td>\n","      <td>10.354167</td>\n","      <td>9.939167</td>\n","      <td>6.926667</td>\n","      <td>11.203333</td>\n","      <td>10.143333</td>\n","      <td>10.817500</td>\n","      <td>8.822500</td>\n","      <td>9.576667</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 02:00:00</th>\n","      <td>8.829462</td>\n","      <td>10.315000</td>\n","      <td>9.856667</td>\n","      <td>6.690000</td>\n","      <td>11.135000</td>\n","      <td>9.947500</td>\n","      <td>10.391667</td>\n","      <td>8.737500</td>\n","      <td>9.542500</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 03:00:00</th>\n","      <td>8.820692</td>\n","      <td>10.267500</td>\n","      <td>9.816667</td>\n","      <td>6.435000</td>\n","      <td>11.110833</td>\n","      <td>9.815833</td>\n","      <td>10.000833</td>\n","      <td>8.708333</td>\n","      <td>9.495833</td>\n","    </tr>\n","    <tr>\n","      <th>2021-10-01 04:00:00</th>\n","      <td>8.811923</td>\n","      <td>10.225833</td>\n","      <td>9.800000</td>\n","      <td>6.215000</td>\n","      <td>11.110000</td>\n","      <td>9.610000</td>\n","      <td>9.442500</td>\n","      <td>8.719167</td>\n","      <td>9.512500</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 19:00:00</th>\n","      <td>13.311384</td>\n","      <td>15.301667</td>\n","      <td>13.745000</td>\n","      <td>13.427500</td>\n","      <td>11.980833</td>\n","      <td>13.898333</td>\n","      <td>12.149999</td>\n","      <td>14.420833</td>\n","      <td>11.599168</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 20:00:00</th>\n","      <td>13.313970</td>\n","      <td>15.224167</td>\n","      <td>13.956667</td>\n","      <td>13.687500</td>\n","      <td>12.227500</td>\n","      <td>14.207500</td>\n","      <td>12.149999</td>\n","      <td>14.573333</td>\n","      <td>11.578334</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 21:00:00</th>\n","      <td>13.316557</td>\n","      <td>14.927500</td>\n","      <td>13.881667</td>\n","      <td>13.645000</td>\n","      <td>12.203333</td>\n","      <td>14.267500</td>\n","      <td>12.149999</td>\n","      <td>14.390000</td>\n","      <td>11.530001</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 22:00:00</th>\n","      <td>13.319143</td>\n","      <td>14.369167</td>\n","      <td>13.562500</td>\n","      <td>13.450833</td>\n","      <td>11.866667</td>\n","      <td>14.067500</td>\n","      <td>12.149999</td>\n","      <td>13.930000</td>\n","      <td>11.437501</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-14 23:00:00</th>\n","      <td>13.321729</td>\n","      <td>13.636667</td>\n","      <td>12.970000</td>\n","      <td>13.226667</td>\n","      <td>11.405000</td>\n","      <td>13.565833</td>\n","      <td>12.149999</td>\n","      <td>13.208333</td>\n","      <td>11.359168</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4704 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-539b25d8-f0ad-42b9-879b-4cb45b59b466')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-539b25d8-f0ad-42b9-879b-4cb45b59b466 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-539b25d8-f0ad-42b9-879b-4cb45b59b466');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["rainfall_2022_winter = rainfall[(rainfall.index < '2023-04-15 00:00:00') & (rainfall.index >= '2022-10-01 00:00:00')]\n","rainfall_2022_winter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1688068900566,"user_tz":240,"elapsed":3,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"68be98ac-a4eb-4c71-d345-e964d2e50937","id":"wFS9ztpDvgmX"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Below Shand      Blair      Brant  Bridgeport  \\\n","Timestamp                                                            \n","2022-10-01 00:00:00     8.560833  11.780000  13.025000   13.279167   \n","2022-10-01 01:00:00     8.497500  10.955833  12.160833   12.520833   \n","2022-10-01 02:00:00     8.397500  10.353333  11.299167   11.773333   \n","2022-10-01 03:00:00     8.220833   9.948333  10.570833   11.148333   \n","2022-10-01 04:00:00     8.253333   9.679167   9.998333   10.607500   \n","...                          ...        ...        ...         ...   \n","2023-01-01 19:00:00    13.272499  13.390833  13.568750   13.400000   \n","2023-01-01 20:00:00    13.272499  13.398333  13.568750   13.400000   \n","2023-01-01 21:00:00    13.272499  13.402500  13.568750   13.400000   \n","2023-01-01 22:00:00    13.272499  13.410000  13.568750   13.400000   \n","2023-01-01 23:00:00    13.272499  13.420000  13.568750   13.400000   \n","\n","                     Glen Morris  Breslau Victoria     Road32       York  \\\n","Timestamp                                                                  \n","2022-10-01 00:00:00    11.590833         12.494999  13.414167  12.981667   \n","2022-10-01 01:00:00    10.747500         11.464999  12.225000  12.216667   \n","2022-10-01 02:00:00    10.161667         10.737499  11.477500  11.452500   \n","2022-10-01 03:00:00     9.772500         10.246666  11.552500  10.768333   \n","2022-10-01 04:00:00     9.534167          9.793332  11.046667  10.183333   \n","...                          ...               ...        ...        ...   \n","2023-01-01 19:00:00    13.995832         14.495000  13.490000  14.190000   \n","2023-01-01 20:00:00    13.946666         14.495000  13.601667  14.190000   \n","2023-01-01 21:00:00    13.894999         14.495000  13.612500  14.190000   \n","2023-01-01 22:00:00    13.828332         14.495000  13.495833  14.190000   \n","2023-01-01 23:00:00    13.725832         14.495000  13.344167  14.190000   \n","\n","                        Hanlon  \n","Timestamp                       \n","2022-10-01 00:00:00  10.109167  \n","2022-10-01 01:00:00  10.143333  \n","2022-10-01 02:00:00  10.185833  \n","2022-10-01 03:00:00  10.227500  \n","2022-10-01 04:00:00  10.214167  \n","...                        ...  \n","2023-01-01 19:00:00  13.522500  \n","2023-01-01 20:00:00  13.540833  \n","2023-01-01 21:00:00  13.517500  \n","2023-01-01 22:00:00  13.468333  \n","2023-01-01 23:00:00  13.447500  \n","\n","[2232 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-da25c20b-0bfa-4d0d-a1e0-36b62e32b08e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Below Shand</th>\n","      <th>Blair</th>\n","      <th>Brant</th>\n","      <th>Bridgeport</th>\n","      <th>Glen Morris</th>\n","      <th>Breslau Victoria</th>\n","      <th>Road32</th>\n","      <th>York</th>\n","      <th>Hanlon</th>\n","    </tr>\n","    <tr>\n","      <th>Timestamp</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-10-01 00:00:00</th>\n","      <td>8.560833</td>\n","      <td>11.780000</td>\n","      <td>13.025000</td>\n","      <td>13.279167</td>\n","      <td>11.590833</td>\n","      <td>12.494999</td>\n","      <td>13.414167</td>\n","      <td>12.981667</td>\n","      <td>10.109167</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 01:00:00</th>\n","      <td>8.497500</td>\n","      <td>10.955833</td>\n","      <td>12.160833</td>\n","      <td>12.520833</td>\n","      <td>10.747500</td>\n","      <td>11.464999</td>\n","      <td>12.225000</td>\n","      <td>12.216667</td>\n","      <td>10.143333</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 02:00:00</th>\n","      <td>8.397500</td>\n","      <td>10.353333</td>\n","      <td>11.299167</td>\n","      <td>11.773333</td>\n","      <td>10.161667</td>\n","      <td>10.737499</td>\n","      <td>11.477500</td>\n","      <td>11.452500</td>\n","      <td>10.185833</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 03:00:00</th>\n","      <td>8.220833</td>\n","      <td>9.948333</td>\n","      <td>10.570833</td>\n","      <td>11.148333</td>\n","      <td>9.772500</td>\n","      <td>10.246666</td>\n","      <td>11.552500</td>\n","      <td>10.768333</td>\n","      <td>10.227500</td>\n","    </tr>\n","    <tr>\n","      <th>2022-10-01 04:00:00</th>\n","      <td>8.253333</td>\n","      <td>9.679167</td>\n","      <td>9.998333</td>\n","      <td>10.607500</td>\n","      <td>9.534167</td>\n","      <td>9.793332</td>\n","      <td>11.046667</td>\n","      <td>10.183333</td>\n","      <td>10.214167</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 19:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.390833</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.995832</td>\n","      <td>14.495000</td>\n","      <td>13.490000</td>\n","      <td>14.190000</td>\n","      <td>13.522500</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 20:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.398333</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.946666</td>\n","      <td>14.495000</td>\n","      <td>13.601667</td>\n","      <td>14.190000</td>\n","      <td>13.540833</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 21:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.402500</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.894999</td>\n","      <td>14.495000</td>\n","      <td>13.612500</td>\n","      <td>14.190000</td>\n","      <td>13.517500</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 22:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.410000</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.828332</td>\n","      <td>14.495000</td>\n","      <td>13.495833</td>\n","      <td>14.190000</td>\n","      <td>13.468333</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-01 23:00:00</th>\n","      <td>13.272499</td>\n","      <td>13.420000</td>\n","      <td>13.568750</td>\n","      <td>13.400000</td>\n","      <td>13.725832</td>\n","      <td>14.495000</td>\n","      <td>13.344167</td>\n","      <td>14.190000</td>\n","      <td>13.447500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2232 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da25c20b-0bfa-4d0d-a1e0-36b62e32b08e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da25c20b-0bfa-4d0d-a1e0-36b62e32b08e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da25c20b-0bfa-4d0d-a1e0-36b62e32b08e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["rainfall_2018_winter.to_csv(\"DO2018winter.csv\")\n","rainfall_2019_winter.to_csv(\"DO2019winter.csv\")\n","rainfall_2020_winter.to_csv(\"DO2020winter.csv\")\n","rainfall_2021_winter.to_csv(\"DO2021winter.csv\")\n","rainfall_2022_winter.to_csv(\"DO2022winter.csv\")"],"metadata":{"executionInfo":{"status":"ok","timestamp":1688068927362,"user_tz":240,"elapsed":510,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"id":"Cpb9AC9BvgmX"},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["download = files.download(\"DO2018winter.csv\")\n","download = files.download(\"DO2019winter.csv\")\n","download = files.download(\"DO2020winter.csv\")\n","download = files.download(\"DO2021winter.csv\")\n","download = files.download(\"DO2022winter.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"executionInfo":{"status":"ok","timestamp":1688068935565,"user_tz":240,"elapsed":193,"user":{"displayName":"Pranav Chaudhari","userId":"17504216256510880931"}},"outputId":"b18d199c-677d-45c7-8b4f-c78f25f80184","id":"GB8x_xX0vgmX"},"execution_count":52,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_217f52cf-216b-4341-85da-0db883b1fe9e\", \"DO2018winter.csv\", 521629)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_9e20776c-92b9-4b04-88a2-25ffa8f36331\", \"DO2019winter.csv\", 497967)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_c84a7177-4f82-4645-8816-2ba6b0b58031\", \"DO2020winter.csv\", 523029)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_ff0cdb00-6bf7-49d0-ba5d-f5319f731ddd\", \"DO2021winter.csv\", 573857)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_6df23124-91af-4a39-b825-d90a9189c7c4\", \"DO2022winter.csv\", 257297)"]},"metadata":{}}]}]}